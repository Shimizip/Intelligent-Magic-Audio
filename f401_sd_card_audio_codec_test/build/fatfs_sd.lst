ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"fatfs_sd.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/fatfs_sd.c"
  20              		.section	.text.SD_PowerOff,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SD_PowerOff:
  27              	.LFB142:
   1:Core/Src/fatfs_sd.c **** #define TRUE  1
   2:Core/Src/fatfs_sd.c **** #define FALSE 0
   3:Core/Src/fatfs_sd.c **** #define bool BYTE
   4:Core/Src/fatfs_sd.c **** 
   5:Core/Src/fatfs_sd.c **** #include "stm32f4xx_hal.h"
   6:Core/Src/fatfs_sd.c **** 
   7:Core/Src/fatfs_sd.c **** #include "diskio.h"
   8:Core/Src/fatfs_sd.c **** #include "fatfs_sd.h"
   9:Core/Src/fatfs_sd.c **** 
  10:Core/Src/fatfs_sd.c **** uint16_t Timer1, Timer2;					/* 1ms Timer Counter */
  11:Core/Src/fatfs_sd.c **** 
  12:Core/Src/fatfs_sd.c **** static volatile DSTATUS Stat = STA_NOINIT;	/* Disk Status */
  13:Core/Src/fatfs_sd.c **** static uint8_t CardType;                    /* Type 0:MMC, 1:SDC, 2:Block addressing */
  14:Core/Src/fatfs_sd.c **** static uint8_t PowerFlag = 0;				/* Power flag */
  15:Core/Src/fatfs_sd.c **** 
  16:Core/Src/fatfs_sd.c **** /***************************************
  17:Core/Src/fatfs_sd.c ****  * SPI functions
  18:Core/Src/fatfs_sd.c ****  **************************************/
  19:Core/Src/fatfs_sd.c **** 
  20:Core/Src/fatfs_sd.c **** /* slave select */
  21:Core/Src/fatfs_sd.c **** static void SELECT(void)
  22:Core/Src/fatfs_sd.c **** {
  23:Core/Src/fatfs_sd.c **** 	HAL_GPIO_WritePin(SD_CS_PORT, SD_CS_PIN, GPIO_PIN_RESET);
  24:Core/Src/fatfs_sd.c **** 	HAL_Delay(1);
  25:Core/Src/fatfs_sd.c **** }
  26:Core/Src/fatfs_sd.c **** 
  27:Core/Src/fatfs_sd.c **** /* slave deselect */
  28:Core/Src/fatfs_sd.c **** static void DESELECT(void)
  29:Core/Src/fatfs_sd.c **** {
  30:Core/Src/fatfs_sd.c **** 	HAL_GPIO_WritePin(SD_CS_PORT, SD_CS_PIN, GPIO_PIN_SET);
  31:Core/Src/fatfs_sd.c **** 	HAL_Delay(1);
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 2


  32:Core/Src/fatfs_sd.c **** }
  33:Core/Src/fatfs_sd.c **** 
  34:Core/Src/fatfs_sd.c **** /* SPI transmit a byte */
  35:Core/Src/fatfs_sd.c **** static void SPI_TxByte(uint8_t data)
  36:Core/Src/fatfs_sd.c **** {
  37:Core/Src/fatfs_sd.c **** 	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
  38:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, &data, 1, SPI_TIMEOUT);
  39:Core/Src/fatfs_sd.c **** }
  40:Core/Src/fatfs_sd.c **** 
  41:Core/Src/fatfs_sd.c **** /* SPI transmit buffer */
  42:Core/Src/fatfs_sd.c **** static void SPI_TxBuffer(uint8_t *buffer, uint16_t len)
  43:Core/Src/fatfs_sd.c **** {
  44:Core/Src/fatfs_sd.c **** 	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
  45:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, buffer, len, SPI_TIMEOUT);
  46:Core/Src/fatfs_sd.c **** }
  47:Core/Src/fatfs_sd.c **** 
  48:Core/Src/fatfs_sd.c **** /* SPI receive a byte */
  49:Core/Src/fatfs_sd.c **** static uint8_t SPI_RxByte(void)
  50:Core/Src/fatfs_sd.c **** {
  51:Core/Src/fatfs_sd.c **** 	uint8_t dummy, data;
  52:Core/Src/fatfs_sd.c **** 	dummy = 0xFF;
  53:Core/Src/fatfs_sd.c **** 
  54:Core/Src/fatfs_sd.c **** 	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
  55:Core/Src/fatfs_sd.c **** 	HAL_SPI_TransmitReceive(HSPI_SDCARD, &dummy, &data, 1, SPI_TIMEOUT);
  56:Core/Src/fatfs_sd.c **** 
  57:Core/Src/fatfs_sd.c **** 	return data;
  58:Core/Src/fatfs_sd.c **** }
  59:Core/Src/fatfs_sd.c **** 
  60:Core/Src/fatfs_sd.c **** /* SPI receive a byte via pointer */
  61:Core/Src/fatfs_sd.c **** static void SPI_RxBytePtr(uint8_t *buff) 
  62:Core/Src/fatfs_sd.c **** {
  63:Core/Src/fatfs_sd.c **** 	*buff = SPI_RxByte();
  64:Core/Src/fatfs_sd.c **** }
  65:Core/Src/fatfs_sd.c **** 
  66:Core/Src/fatfs_sd.c **** /***************************************
  67:Core/Src/fatfs_sd.c ****  * SD functions
  68:Core/Src/fatfs_sd.c ****  **************************************/
  69:Core/Src/fatfs_sd.c **** 
  70:Core/Src/fatfs_sd.c **** /* wait SD ready */
  71:Core/Src/fatfs_sd.c **** static uint8_t SD_ReadyWait(void)
  72:Core/Src/fatfs_sd.c **** {
  73:Core/Src/fatfs_sd.c **** 	uint8_t res;
  74:Core/Src/fatfs_sd.c **** 
  75:Core/Src/fatfs_sd.c **** 	/* timeout 500ms */
  76:Core/Src/fatfs_sd.c **** 	Timer2 = 500;
  77:Core/Src/fatfs_sd.c **** 
  78:Core/Src/fatfs_sd.c **** 	/* if SD goes ready, receives 0xFF */
  79:Core/Src/fatfs_sd.c **** 	do {
  80:Core/Src/fatfs_sd.c **** 		res = SPI_RxByte();
  81:Core/Src/fatfs_sd.c **** 	} while ((res != 0xFF) && Timer2);
  82:Core/Src/fatfs_sd.c **** 
  83:Core/Src/fatfs_sd.c **** 	return res;
  84:Core/Src/fatfs_sd.c **** }
  85:Core/Src/fatfs_sd.c **** 
  86:Core/Src/fatfs_sd.c **** /* power on */
  87:Core/Src/fatfs_sd.c **** static void SD_PowerOn(void) 
  88:Core/Src/fatfs_sd.c **** {
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 3


  89:Core/Src/fatfs_sd.c **** 	uint8_t args[6];
  90:Core/Src/fatfs_sd.c **** 	uint32_t cnt = 0x1FFF;
  91:Core/Src/fatfs_sd.c **** 
  92:Core/Src/fatfs_sd.c **** 	/* transmit bytes to wake up */
  93:Core/Src/fatfs_sd.c **** 	DESELECT();
  94:Core/Src/fatfs_sd.c **** 	for(int i = 0; i < 10; i++)
  95:Core/Src/fatfs_sd.c **** 	{
  96:Core/Src/fatfs_sd.c **** 		SPI_TxByte(0xFF);
  97:Core/Src/fatfs_sd.c **** 	}
  98:Core/Src/fatfs_sd.c **** 
  99:Core/Src/fatfs_sd.c **** 	/* slave select */
 100:Core/Src/fatfs_sd.c **** 	SELECT();
 101:Core/Src/fatfs_sd.c **** 
 102:Core/Src/fatfs_sd.c **** 	/* make idle state */
 103:Core/Src/fatfs_sd.c **** 	args[0] = CMD0;		/* CMD0:GO_IDLE_STATE */
 104:Core/Src/fatfs_sd.c **** 	args[1] = 0;
 105:Core/Src/fatfs_sd.c **** 	args[2] = 0;
 106:Core/Src/fatfs_sd.c **** 	args[3] = 0;
 107:Core/Src/fatfs_sd.c **** 	args[4] = 0;
 108:Core/Src/fatfs_sd.c **** 	args[5] = 0x95;		/* CRC */
 109:Core/Src/fatfs_sd.c **** 
 110:Core/Src/fatfs_sd.c **** 	SPI_TxBuffer(args, sizeof(args));
 111:Core/Src/fatfs_sd.c **** 
 112:Core/Src/fatfs_sd.c **** 	/* wait response */
 113:Core/Src/fatfs_sd.c **** 	while ((SPI_RxByte() != 0x01) && cnt)
 114:Core/Src/fatfs_sd.c **** 	{
 115:Core/Src/fatfs_sd.c **** 		cnt--;
 116:Core/Src/fatfs_sd.c **** 	}
 117:Core/Src/fatfs_sd.c **** 
 118:Core/Src/fatfs_sd.c **** 	DESELECT();
 119:Core/Src/fatfs_sd.c **** 	SPI_TxByte(0XFF);
 120:Core/Src/fatfs_sd.c **** 
 121:Core/Src/fatfs_sd.c **** 	PowerFlag = 1;
 122:Core/Src/fatfs_sd.c **** }
 123:Core/Src/fatfs_sd.c **** 
 124:Core/Src/fatfs_sd.c **** /* power off */
 125:Core/Src/fatfs_sd.c **** static void SD_PowerOff(void) 
 126:Core/Src/fatfs_sd.c **** {
  28              		.loc 1 126 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 127:Core/Src/fatfs_sd.c **** 	PowerFlag = 0;
  33              		.loc 1 127 2 view .LVU1
  34              		.loc 1 127 12 is_stmt 0 view .LVU2
  35 0000 014B     		ldr	r3, .L2
  36 0002 0022     		movs	r2, #0
  37 0004 1A70     		strb	r2, [r3]
 128:Core/Src/fatfs_sd.c **** }
  38              		.loc 1 128 1 view .LVU3
  39 0006 7047     		bx	lr
  40              	.L3:
  41              		.align	2
  42              	.L2:
  43 0008 00000000 		.word	PowerFlag
  44              		.cfi_endproc
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 4


  45              	.LFE142:
  47              		.section	.text.SD_CheckPower,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	SD_CheckPower:
  54              	.LFB143:
 129:Core/Src/fatfs_sd.c **** 
 130:Core/Src/fatfs_sd.c **** /* check power flag */
 131:Core/Src/fatfs_sd.c **** static uint8_t SD_CheckPower(void) 
 132:Core/Src/fatfs_sd.c **** {
  55              		.loc 1 132 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
 133:Core/Src/fatfs_sd.c **** 	return PowerFlag;
  60              		.loc 1 133 2 view .LVU5
 134:Core/Src/fatfs_sd.c **** }
  61              		.loc 1 134 1 is_stmt 0 view .LVU6
  62 0000 014B     		ldr	r3, .L5
  63 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  64 0004 7047     		bx	lr
  65              	.L6:
  66 0006 00BF     		.align	2
  67              	.L5:
  68 0008 00000000 		.word	PowerFlag
  69              		.cfi_endproc
  70              	.LFE143:
  72              		.section	.text.SPI_TxBuffer,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	SPI_TxBuffer:
  79              	.LVL0:
  80              	.LFB137:
  43:Core/Src/fatfs_sd.c **** 	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
  81              		.loc 1 43 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  43:Core/Src/fatfs_sd.c **** 	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
  85              		.loc 1 43 1 is_stmt 0 view .LVU8
  86 0000 08B5     		push	{r3, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 3, -8
  89              		.cfi_offset 14, -4
  90 0002 0A46     		mov	r2, r1
  44:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, buffer, len, SPI_TIMEOUT);
  91              		.loc 1 44 2 is_stmt 1 view .LVU9
  92              	.L8:
  44:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, buffer, len, SPI_TIMEOUT);
  93              		.loc 1 44 8 discriminator 1 view .LVU10
  44:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, buffer, len, SPI_TIMEOUT);
  94              		.loc 1 44 9 is_stmt 0 discriminator 1 view .LVU11
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 5


  95 0004 054B     		ldr	r3, .L10
  96 0006 1B68     		ldr	r3, [r3]
  97 0008 9B68     		ldr	r3, [r3, #8]
  44:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, buffer, len, SPI_TIMEOUT);
  98              		.loc 1 44 8 discriminator 1 view .LVU12
  99 000a 13F0020F 		tst	r3, #2
 100 000e F9D0     		beq	.L8
  45:Core/Src/fatfs_sd.c **** }
 101              		.loc 1 45 2 is_stmt 1 view .LVU13
 102 0010 6423     		movs	r3, #100
 103 0012 0146     		mov	r1, r0
 104              	.LVL1:
  45:Core/Src/fatfs_sd.c **** }
 105              		.loc 1 45 2 is_stmt 0 view .LVU14
 106 0014 0148     		ldr	r0, .L10
 107              	.LVL2:
  45:Core/Src/fatfs_sd.c **** }
 108              		.loc 1 45 2 view .LVU15
 109 0016 FFF7FEFF 		bl	HAL_SPI_Transmit
 110              	.LVL3:
  46:Core/Src/fatfs_sd.c **** 
 111              		.loc 1 46 1 view .LVU16
 112 001a 08BD     		pop	{r3, pc}
 113              	.L11:
 114              		.align	2
 115              	.L10:
 116 001c 00000000 		.word	hspi2
 117              		.cfi_endproc
 118              	.LFE137:
 120              		.section	.text.SPI_TxByte,"ax",%progbits
 121              		.align	1
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 126              	SPI_TxByte:
 127              	.LVL4:
 128              	.LFB136:
  36:Core/Src/fatfs_sd.c **** 	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
 129              		.loc 1 36 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 0, uses_anonymous_args = 0
  36:Core/Src/fatfs_sd.c **** 	while(!__HAL_SPI_GET_FLAG(HSPI_SDCARD, SPI_FLAG_TXE));
 133              		.loc 1 36 1 is_stmt 0 view .LVU18
 134 0000 00B5     		push	{lr}
 135              		.cfi_def_cfa_offset 4
 136              		.cfi_offset 14, -4
 137 0002 83B0     		sub	sp, sp, #12
 138              		.cfi_def_cfa_offset 16
 139 0004 8DF80700 		strb	r0, [sp, #7]
  37:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, &data, 1, SPI_TIMEOUT);
 140              		.loc 1 37 2 is_stmt 1 view .LVU19
 141              	.L13:
  37:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, &data, 1, SPI_TIMEOUT);
 142              		.loc 1 37 8 discriminator 1 view .LVU20
  37:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, &data, 1, SPI_TIMEOUT);
 143              		.loc 1 37 9 is_stmt 0 discriminator 1 view .LVU21
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 6


 144 0008 074B     		ldr	r3, .L15
 145 000a 1B68     		ldr	r3, [r3]
 146 000c 9B68     		ldr	r3, [r3, #8]
  37:Core/Src/fatfs_sd.c **** 	HAL_SPI_Transmit(HSPI_SDCARD, &data, 1, SPI_TIMEOUT);
 147              		.loc 1 37 8 discriminator 1 view .LVU22
 148 000e 13F0020F 		tst	r3, #2
 149 0012 F9D0     		beq	.L13
  38:Core/Src/fatfs_sd.c **** }
 150              		.loc 1 38 2 is_stmt 1 view .LVU23
 151 0014 6423     		movs	r3, #100
 152 0016 0122     		movs	r2, #1
 153 0018 0DF10701 		add	r1, sp, #7
 154 001c 0248     		ldr	r0, .L15
 155              	.LVL5:
  38:Core/Src/fatfs_sd.c **** }
 156              		.loc 1 38 2 is_stmt 0 view .LVU24
 157 001e FFF7FEFF 		bl	HAL_SPI_Transmit
 158              	.LVL6:
  39:Core/Src/fatfs_sd.c **** 
 159              		.loc 1 39 1 view .LVU25
 160 0022 03B0     		add	sp, sp, #12
 161              		.cfi_def_cfa_offset 4
 162              		@ sp needed
 163 0024 5DF804FB 		ldr	pc, [sp], #4
 164              	.L16:
 165              		.align	2
 166              	.L15:
 167 0028 00000000 		.word	hspi2
 168              		.cfi_endproc
 169              	.LFE136:
 171              		.section	.text.SELECT,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	SELECT:
 178              	.LFB134:
  22:Core/Src/fatfs_sd.c **** 	HAL_GPIO_WritePin(SD_CS_PORT, SD_CS_PIN, GPIO_PIN_RESET);
 179              		.loc 1 22 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 08B5     		push	{r3, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 3, -8
 186              		.cfi_offset 14, -4
  23:Core/Src/fatfs_sd.c **** 	HAL_Delay(1);
 187              		.loc 1 23 2 view .LVU27
 188 0002 0022     		movs	r2, #0
 189 0004 0221     		movs	r1, #2
 190 0006 0348     		ldr	r0, .L19
 191 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 192              	.LVL7:
  24:Core/Src/fatfs_sd.c **** }
 193              		.loc 1 24 2 view .LVU28
 194 000c 0120     		movs	r0, #1
 195 000e FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 7


 196              	.LVL8:
  25:Core/Src/fatfs_sd.c **** 
 197              		.loc 1 25 1 is_stmt 0 view .LVU29
 198 0012 08BD     		pop	{r3, pc}
 199              	.L20:
 200              		.align	2
 201              	.L19:
 202 0014 00040240 		.word	1073873920
 203              		.cfi_endproc
 204              	.LFE134:
 206              		.section	.text.DESELECT,"ax",%progbits
 207              		.align	1
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	DESELECT:
 213              	.LFB135:
  29:Core/Src/fatfs_sd.c **** 	HAL_GPIO_WritePin(SD_CS_PORT, SD_CS_PIN, GPIO_PIN_SET);
 214              		.loc 1 29 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 08B5     		push	{r3, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 3, -8
 221              		.cfi_offset 14, -4
  30:Core/Src/fatfs_sd.c **** 	HAL_Delay(1);
 222              		.loc 1 30 2 view .LVU31
 223 0002 0122     		movs	r2, #1
 224 0004 0221     		movs	r1, #2
 225 0006 0348     		ldr	r0, .L23
 226 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 227              	.LVL9:
  31:Core/Src/fatfs_sd.c **** }
 228              		.loc 1 31 2 view .LVU32
 229 000c 0120     		movs	r0, #1
 230 000e FFF7FEFF 		bl	HAL_Delay
 231              	.LVL10:
  32:Core/Src/fatfs_sd.c **** 
 232              		.loc 1 32 1 is_stmt 0 view .LVU33
 233 0012 08BD     		pop	{r3, pc}
 234              	.L24:
 235              		.align	2
 236              	.L23:
 237 0014 00040240 		.word	1073873920
 238              		.cfi_endproc
 239              	.LFE135:
 241              		.section	.text.SPI_RxByte,"ax",%progbits
 242              		.align	1
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 247              	SPI_RxByte:
 248              	.LFB138:
  50:Core/Src/fatfs_sd.c **** 	uint8_t dummy, data;
 249              		.loc 1 50 1 is_stmt 1 view -0
 250              		.cfi_startproc
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 8


 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253 0000 00B5     		push	{lr}
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 14, -4
 256 0002 85B0     		sub	sp, sp, #20
 257              		.cfi_def_cfa_offset 24
  51:Core/Src/fatfs_sd.c **** 	dummy = 0xFF;
 258              		.loc 1 51 2 view .LVU35
  52:Core/Src/fatfs_sd.c **** 
 259              		.loc 1 52 2 view .LVU36
  52:Core/Src/fatfs_sd.c **** 
 260              		.loc 1 52 8 is_stmt 0 view .LVU37
 261 0004 FF23     		movs	r3, #255
 262 0006 8DF80F30 		strb	r3, [sp, #15]
  54:Core/Src/fatfs_sd.c **** 	HAL_SPI_TransmitReceive(HSPI_SDCARD, &dummy, &data, 1, SPI_TIMEOUT);
 263              		.loc 1 54 2 is_stmt 1 view .LVU38
 264              	.L26:
  54:Core/Src/fatfs_sd.c **** 	HAL_SPI_TransmitReceive(HSPI_SDCARD, &dummy, &data, 1, SPI_TIMEOUT);
 265              		.loc 1 54 8 discriminator 1 view .LVU39
  54:Core/Src/fatfs_sd.c **** 	HAL_SPI_TransmitReceive(HSPI_SDCARD, &dummy, &data, 1, SPI_TIMEOUT);
 266              		.loc 1 54 9 is_stmt 0 discriminator 1 view .LVU40
 267 000a 0A4B     		ldr	r3, .L28
 268 000c 1B68     		ldr	r3, [r3]
 269 000e 9B68     		ldr	r3, [r3, #8]
  54:Core/Src/fatfs_sd.c **** 	HAL_SPI_TransmitReceive(HSPI_SDCARD, &dummy, &data, 1, SPI_TIMEOUT);
 270              		.loc 1 54 8 discriminator 1 view .LVU41
 271 0010 13F0020F 		tst	r3, #2
 272 0014 F9D0     		beq	.L26
  55:Core/Src/fatfs_sd.c **** 
 273              		.loc 1 55 2 is_stmt 1 view .LVU42
 274 0016 6423     		movs	r3, #100
 275 0018 0093     		str	r3, [sp]
 276 001a 0123     		movs	r3, #1
 277 001c 0DF10E02 		add	r2, sp, #14
 278 0020 0DF10F01 		add	r1, sp, #15
 279 0024 0348     		ldr	r0, .L28
 280 0026 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 281              	.LVL11:
  57:Core/Src/fatfs_sd.c **** }
 282              		.loc 1 57 2 view .LVU43
  58:Core/Src/fatfs_sd.c **** 
 283              		.loc 1 58 1 is_stmt 0 view .LVU44
 284 002a 9DF80E00 		ldrb	r0, [sp, #14]	@ zero_extendqisi2
 285 002e 05B0     		add	sp, sp, #20
 286              		.cfi_def_cfa_offset 4
 287              		@ sp needed
 288 0030 5DF804FB 		ldr	pc, [sp], #4
 289              	.L29:
 290              		.align	2
 291              	.L28:
 292 0034 00000000 		.word	hspi2
 293              		.cfi_endproc
 294              	.LFE138:
 296              		.section	.text.SD_PowerOn,"ax",%progbits
 297              		.align	1
 298              		.syntax unified
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 9


 299              		.thumb
 300              		.thumb_func
 302              	SD_PowerOn:
 303              	.LFB141:
  88:Core/Src/fatfs_sd.c **** 	uint8_t args[6];
 304              		.loc 1 88 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 10B5     		push	{r4, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
 312 0002 82B0     		sub	sp, sp, #8
 313              		.cfi_def_cfa_offset 16
  89:Core/Src/fatfs_sd.c **** 	uint32_t cnt = 0x1FFF;
 314              		.loc 1 89 2 view .LVU46
  90:Core/Src/fatfs_sd.c **** 
 315              		.loc 1 90 2 view .LVU47
 316              	.LVL12:
  93:Core/Src/fatfs_sd.c **** 	for(int i = 0; i < 10; i++)
 317              		.loc 1 93 2 view .LVU48
 318 0004 FFF7FEFF 		bl	DESELECT
 319              	.LVL13:
  94:Core/Src/fatfs_sd.c **** 	{
 320              		.loc 1 94 2 view .LVU49
 321              	.LBB2:
  94:Core/Src/fatfs_sd.c **** 	{
 322              		.loc 1 94 6 view .LVU50
  94:Core/Src/fatfs_sd.c **** 	{
 323              		.loc 1 94 10 is_stmt 0 view .LVU51
 324 0008 0024     		movs	r4, #0
  94:Core/Src/fatfs_sd.c **** 	{
 325              		.loc 1 94 2 view .LVU52
 326 000a 03E0     		b	.L31
 327              	.LVL14:
 328              	.L32:
  96:Core/Src/fatfs_sd.c **** 	}
 329              		.loc 1 96 3 is_stmt 1 view .LVU53
 330 000c FF20     		movs	r0, #255
 331 000e FFF7FEFF 		bl	SPI_TxByte
 332              	.LVL15:
  94:Core/Src/fatfs_sd.c **** 	{
 333              		.loc 1 94 26 discriminator 3 view .LVU54
 334 0012 0134     		adds	r4, r4, #1
 335              	.LVL16:
 336              	.L31:
  94:Core/Src/fatfs_sd.c **** 	{
 337              		.loc 1 94 19 discriminator 1 view .LVU55
 338 0014 092C     		cmp	r4, #9
 339 0016 F9DD     		ble	.L32
 340              	.LBE2:
 100:Core/Src/fatfs_sd.c **** 
 341              		.loc 1 100 2 view .LVU56
 342 0018 FFF7FEFF 		bl	SELECT
 343              	.LVL17:
 103:Core/Src/fatfs_sd.c **** 	args[1] = 0;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 10


 344              		.loc 1 103 2 view .LVU57
 103:Core/Src/fatfs_sd.c **** 	args[1] = 0;
 345              		.loc 1 103 10 is_stmt 0 view .LVU58
 346 001c 4023     		movs	r3, #64
 347 001e 8DF80030 		strb	r3, [sp]
 104:Core/Src/fatfs_sd.c **** 	args[2] = 0;
 348              		.loc 1 104 2 is_stmt 1 view .LVU59
 104:Core/Src/fatfs_sd.c **** 	args[2] = 0;
 349              		.loc 1 104 10 is_stmt 0 view .LVU60
 350 0022 0023     		movs	r3, #0
 351 0024 8DF80130 		strb	r3, [sp, #1]
 105:Core/Src/fatfs_sd.c **** 	args[3] = 0;
 352              		.loc 1 105 2 is_stmt 1 view .LVU61
 105:Core/Src/fatfs_sd.c **** 	args[3] = 0;
 353              		.loc 1 105 10 is_stmt 0 view .LVU62
 354 0028 8DF80230 		strb	r3, [sp, #2]
 106:Core/Src/fatfs_sd.c **** 	args[4] = 0;
 355              		.loc 1 106 2 is_stmt 1 view .LVU63
 106:Core/Src/fatfs_sd.c **** 	args[4] = 0;
 356              		.loc 1 106 10 is_stmt 0 view .LVU64
 357 002c 8DF80330 		strb	r3, [sp, #3]
 107:Core/Src/fatfs_sd.c **** 	args[5] = 0x95;		/* CRC */
 358              		.loc 1 107 2 is_stmt 1 view .LVU65
 107:Core/Src/fatfs_sd.c **** 	args[5] = 0x95;		/* CRC */
 359              		.loc 1 107 10 is_stmt 0 view .LVU66
 360 0030 8DF80430 		strb	r3, [sp, #4]
 108:Core/Src/fatfs_sd.c **** 
 361              		.loc 1 108 2 is_stmt 1 view .LVU67
 108:Core/Src/fatfs_sd.c **** 
 362              		.loc 1 108 10 is_stmt 0 view .LVU68
 363 0034 9523     		movs	r3, #149
 364 0036 8DF80530 		strb	r3, [sp, #5]
 110:Core/Src/fatfs_sd.c **** 
 365              		.loc 1 110 2 is_stmt 1 view .LVU69
 366 003a 0621     		movs	r1, #6
 367 003c 6846     		mov	r0, sp
 368 003e FFF7FEFF 		bl	SPI_TxBuffer
 369              	.LVL18:
 113:Core/Src/fatfs_sd.c **** 	{
 370              		.loc 1 113 2 view .LVU70
  90:Core/Src/fatfs_sd.c **** 
 371              		.loc 1 90 11 is_stmt 0 view .LVU71
 372 0042 41F6FF74 		movw	r4, #8191
 373              	.LVL19:
 374              	.L33:
 113:Core/Src/fatfs_sd.c **** 	{
 375              		.loc 1 113 32 is_stmt 1 view .LVU72
 113:Core/Src/fatfs_sd.c **** 	{
 376              		.loc 1 113 10 is_stmt 0 view .LVU73
 377 0046 FFF7FEFF 		bl	SPI_RxByte
 378              	.LVL20:
 113:Core/Src/fatfs_sd.c **** 	{
 379              		.loc 1 113 32 discriminator 1 view .LVU74
 380 004a 0128     		cmp	r0, #1
 381 004c 02D0     		beq	.L34
 382 004e 0CB1     		cbz	r4, .L34
 115:Core/Src/fatfs_sd.c **** 	}
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 11


 383              		.loc 1 115 3 is_stmt 1 view .LVU75
 115:Core/Src/fatfs_sd.c **** 	}
 384              		.loc 1 115 6 is_stmt 0 view .LVU76
 385 0050 013C     		subs	r4, r4, #1
 386              	.LVL21:
 115:Core/Src/fatfs_sd.c **** 	}
 387              		.loc 1 115 6 view .LVU77
 388 0052 F8E7     		b	.L33
 389              	.L34:
 118:Core/Src/fatfs_sd.c **** 	SPI_TxByte(0XFF);
 390              		.loc 1 118 2 is_stmt 1 view .LVU78
 391 0054 FFF7FEFF 		bl	DESELECT
 392              	.LVL22:
 119:Core/Src/fatfs_sd.c **** 
 393              		.loc 1 119 2 view .LVU79
 394 0058 FF20     		movs	r0, #255
 395 005a FFF7FEFF 		bl	SPI_TxByte
 396              	.LVL23:
 121:Core/Src/fatfs_sd.c **** }
 397              		.loc 1 121 2 view .LVU80
 121:Core/Src/fatfs_sd.c **** }
 398              		.loc 1 121 12 is_stmt 0 view .LVU81
 399 005e 024B     		ldr	r3, .L37
 400 0060 0122     		movs	r2, #1
 401 0062 1A70     		strb	r2, [r3]
 122:Core/Src/fatfs_sd.c **** 
 402              		.loc 1 122 1 view .LVU82
 403 0064 02B0     		add	sp, sp, #8
 404              		.cfi_def_cfa_offset 8
 405              		@ sp needed
 406 0066 10BD     		pop	{r4, pc}
 407              	.LVL24:
 408              	.L38:
 122:Core/Src/fatfs_sd.c **** 
 409              		.loc 1 122 1 view .LVU83
 410              		.align	2
 411              	.L37:
 412 0068 00000000 		.word	PowerFlag
 413              		.cfi_endproc
 414              	.LFE141:
 416              		.section	.text.SD_ReadyWait,"ax",%progbits
 417              		.align	1
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	SD_ReadyWait:
 423              	.LFB140:
  72:Core/Src/fatfs_sd.c **** 	uint8_t res;
 424              		.loc 1 72 1 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428 0000 08B5     		push	{r3, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 3, -8
 431              		.cfi_offset 14, -4
  73:Core/Src/fatfs_sd.c **** 
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 12


 432              		.loc 1 73 2 view .LVU85
  76:Core/Src/fatfs_sd.c **** 
 433              		.loc 1 76 2 view .LVU86
  76:Core/Src/fatfs_sd.c **** 
 434              		.loc 1 76 9 is_stmt 0 view .LVU87
 435 0002 064B     		ldr	r3, .L43
 436 0004 4FF4FA72 		mov	r2, #500
 437 0008 1A80     		strh	r2, [r3]	@ movhi
 438              	.L41:
  79:Core/Src/fatfs_sd.c **** 		res = SPI_RxByte();
 439              		.loc 1 79 2 is_stmt 1 view .LVU88
  80:Core/Src/fatfs_sd.c **** 	} while ((res != 0xFF) && Timer2);
 440              		.loc 1 80 3 view .LVU89
  80:Core/Src/fatfs_sd.c **** 	} while ((res != 0xFF) && Timer2);
 441              		.loc 1 80 9 is_stmt 0 view .LVU90
 442 000a FFF7FEFF 		bl	SPI_RxByte
 443              	.LVL25:
  81:Core/Src/fatfs_sd.c **** 
 444              		.loc 1 81 25 is_stmt 1 discriminator 2 view .LVU91
 445 000e FF28     		cmp	r0, #255
 446 0010 03D0     		beq	.L40
  81:Core/Src/fatfs_sd.c **** 
 447              		.loc 1 81 25 is_stmt 0 discriminator 1 view .LVU92
 448 0012 024B     		ldr	r3, .L43
 449 0014 1B88     		ldrh	r3, [r3]
 450 0016 002B     		cmp	r3, #0
 451 0018 F7D1     		bne	.L41
 452              	.L40:
  83:Core/Src/fatfs_sd.c **** }
 453              		.loc 1 83 2 is_stmt 1 view .LVU93
  84:Core/Src/fatfs_sd.c **** 
 454              		.loc 1 84 1 is_stmt 0 view .LVU94
 455 001a 08BD     		pop	{r3, pc}
 456              	.L44:
 457              		.align	2
 458              	.L43:
 459 001c 00000000 		.word	Timer2
 460              		.cfi_endproc
 461              	.LFE140:
 463              		.section	.text.SD_SendCmd,"ax",%progbits
 464              		.align	1
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 469              	SD_SendCmd:
 470              	.LVL26:
 471              	.LFB146:
 135:Core/Src/fatfs_sd.c **** 
 136:Core/Src/fatfs_sd.c **** /* receive data block */
 137:Core/Src/fatfs_sd.c **** static bool SD_RxDataBlock(BYTE *buff, UINT len)
 138:Core/Src/fatfs_sd.c **** {
 139:Core/Src/fatfs_sd.c **** 	uint8_t token;
 140:Core/Src/fatfs_sd.c **** 
 141:Core/Src/fatfs_sd.c **** 	/* timeout 200ms */
 142:Core/Src/fatfs_sd.c **** 	Timer1 = 200;
 143:Core/Src/fatfs_sd.c **** 
 144:Core/Src/fatfs_sd.c **** 	/* loop until receive a response or timeout */
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 13


 145:Core/Src/fatfs_sd.c **** 	do {
 146:Core/Src/fatfs_sd.c **** 		token = SPI_RxByte();
 147:Core/Src/fatfs_sd.c **** 	} while((token == 0xFF) && Timer1);
 148:Core/Src/fatfs_sd.c **** 
 149:Core/Src/fatfs_sd.c **** 	/* invalid response */
 150:Core/Src/fatfs_sd.c **** 	if(token != 0xFE) return FALSE;
 151:Core/Src/fatfs_sd.c **** 
 152:Core/Src/fatfs_sd.c **** 	/* receive data */
 153:Core/Src/fatfs_sd.c **** 	do {
 154:Core/Src/fatfs_sd.c **** 		SPI_RxBytePtr(buff++);
 155:Core/Src/fatfs_sd.c **** 	} while(len--);
 156:Core/Src/fatfs_sd.c **** 
 157:Core/Src/fatfs_sd.c **** 	/* discard CRC */
 158:Core/Src/fatfs_sd.c **** 	SPI_RxByte();
 159:Core/Src/fatfs_sd.c **** 	SPI_RxByte();
 160:Core/Src/fatfs_sd.c **** 
 161:Core/Src/fatfs_sd.c **** 	return TRUE;
 162:Core/Src/fatfs_sd.c **** }
 163:Core/Src/fatfs_sd.c **** 
 164:Core/Src/fatfs_sd.c **** /* transmit data block */
 165:Core/Src/fatfs_sd.c **** #if _USE_WRITE == 1
 166:Core/Src/fatfs_sd.c **** static bool SD_TxDataBlock(const uint8_t *buff, BYTE token)
 167:Core/Src/fatfs_sd.c **** {
 168:Core/Src/fatfs_sd.c **** 	uint8_t resp;
 169:Core/Src/fatfs_sd.c **** 	uint8_t i = 0;
 170:Core/Src/fatfs_sd.c **** 
 171:Core/Src/fatfs_sd.c **** 	/* wait SD ready */
 172:Core/Src/fatfs_sd.c **** 	if (SD_ReadyWait() != 0xFF) return FALSE;
 173:Core/Src/fatfs_sd.c **** 
 174:Core/Src/fatfs_sd.c **** 	/* transmit token */
 175:Core/Src/fatfs_sd.c **** 	SPI_TxByte(token);
 176:Core/Src/fatfs_sd.c **** 
 177:Core/Src/fatfs_sd.c **** 	/* if it's not STOP token, transmit data */
 178:Core/Src/fatfs_sd.c **** 	if (token != 0xFD)
 179:Core/Src/fatfs_sd.c **** 	{
 180:Core/Src/fatfs_sd.c **** 		SPI_TxBuffer((uint8_t*)buff, 512);
 181:Core/Src/fatfs_sd.c **** 
 182:Core/Src/fatfs_sd.c **** 		/* discard CRC */
 183:Core/Src/fatfs_sd.c **** 		SPI_RxByte();
 184:Core/Src/fatfs_sd.c **** 		SPI_RxByte();
 185:Core/Src/fatfs_sd.c **** 
 186:Core/Src/fatfs_sd.c **** 		/* receive response */
 187:Core/Src/fatfs_sd.c **** 		while (i <= 64)
 188:Core/Src/fatfs_sd.c **** 		{
 189:Core/Src/fatfs_sd.c **** 			resp = SPI_RxByte();
 190:Core/Src/fatfs_sd.c **** 
 191:Core/Src/fatfs_sd.c **** 			/* transmit 0x05 accepted */
 192:Core/Src/fatfs_sd.c **** 			if ((resp & 0x1F) == 0x05) break;
 193:Core/Src/fatfs_sd.c **** 			i++;
 194:Core/Src/fatfs_sd.c **** 		}
 195:Core/Src/fatfs_sd.c **** 
 196:Core/Src/fatfs_sd.c **** 		/* recv buffer clear */
 197:Core/Src/fatfs_sd.c **** 		while (SPI_RxByte() == 0);
 198:Core/Src/fatfs_sd.c **** 	}
 199:Core/Src/fatfs_sd.c **** 
 200:Core/Src/fatfs_sd.c **** 	/* transmit 0x05 accepted */
 201:Core/Src/fatfs_sd.c **** 	if ((resp & 0x1F) == 0x05) return TRUE;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 14


 202:Core/Src/fatfs_sd.c **** 
 203:Core/Src/fatfs_sd.c **** 	return FALSE;
 204:Core/Src/fatfs_sd.c **** }
 205:Core/Src/fatfs_sd.c **** #endif /* _USE_WRITE */
 206:Core/Src/fatfs_sd.c **** 
 207:Core/Src/fatfs_sd.c **** /* transmit command */
 208:Core/Src/fatfs_sd.c **** static BYTE SD_SendCmd(BYTE cmd, uint32_t arg)
 209:Core/Src/fatfs_sd.c **** {
 472              		.loc 1 209 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		.loc 1 209 1 is_stmt 0 view .LVU96
 477 0000 38B5     		push	{r3, r4, r5, lr}
 478              		.cfi_def_cfa_offset 16
 479              		.cfi_offset 3, -16
 480              		.cfi_offset 4, -12
 481              		.cfi_offset 5, -8
 482              		.cfi_offset 14, -4
 483 0002 0546     		mov	r5, r0
 484 0004 0C46     		mov	r4, r1
 210:Core/Src/fatfs_sd.c **** 	uint8_t crc, res;
 485              		.loc 1 210 2 is_stmt 1 view .LVU97
 211:Core/Src/fatfs_sd.c **** 
 212:Core/Src/fatfs_sd.c **** 	/* wait SD ready */
 213:Core/Src/fatfs_sd.c **** 	if (SD_ReadyWait() != 0xFF) return 0xFF;
 486              		.loc 1 213 2 view .LVU98
 487              		.loc 1 213 6 is_stmt 0 view .LVU99
 488 0006 FFF7FEFF 		bl	SD_ReadyWait
 489              	.LVL27:
 490              		.loc 1 213 5 discriminator 1 view .LVU100
 491 000a FF28     		cmp	r0, #255
 492 000c 01D0     		beq	.L54
 493              		.loc 1 213 37 discriminator 1 view .LVU101
 494 000e FF20     		movs	r0, #255
 495              	.LVL28:
 496              	.L46:
 214:Core/Src/fatfs_sd.c **** 
 215:Core/Src/fatfs_sd.c **** 	/* transmit command */
 216:Core/Src/fatfs_sd.c **** 	SPI_TxByte(cmd); 					/* Command */
 217:Core/Src/fatfs_sd.c **** 	SPI_TxByte((uint8_t)(arg >> 24)); 	/* Argument[31..24] */
 218:Core/Src/fatfs_sd.c **** 	SPI_TxByte((uint8_t)(arg >> 16)); 	/* Argument[23..16] */
 219:Core/Src/fatfs_sd.c **** 	SPI_TxByte((uint8_t)(arg >> 8)); 	/* Argument[15..8] */
 220:Core/Src/fatfs_sd.c **** 	SPI_TxByte((uint8_t)arg); 			/* Argument[7..0] */
 221:Core/Src/fatfs_sd.c **** 
 222:Core/Src/fatfs_sd.c **** 	/* prepare CRC */
 223:Core/Src/fatfs_sd.c **** 	if(cmd == CMD0) crc = 0x95;	/* CRC for CMD0(0) */
 224:Core/Src/fatfs_sd.c **** 	else if(cmd == CMD8) crc = 0x87;	/* CRC for CMD8(0x1AA) */
 225:Core/Src/fatfs_sd.c **** 	else crc = 1;
 226:Core/Src/fatfs_sd.c **** 
 227:Core/Src/fatfs_sd.c **** 	/* transmit CRC */
 228:Core/Src/fatfs_sd.c **** 	SPI_TxByte(crc);
 229:Core/Src/fatfs_sd.c **** 
 230:Core/Src/fatfs_sd.c **** 	/* Skip a stuff byte when STOP_TRANSMISSION */
 231:Core/Src/fatfs_sd.c **** 	if (cmd == CMD12) SPI_RxByte();
 232:Core/Src/fatfs_sd.c **** 
 233:Core/Src/fatfs_sd.c **** 	/* receive response */
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 15


 234:Core/Src/fatfs_sd.c **** 	uint8_t n = 10;
 235:Core/Src/fatfs_sd.c **** 	do {
 236:Core/Src/fatfs_sd.c **** 		res = SPI_RxByte();
 237:Core/Src/fatfs_sd.c **** 	} while ((res & 0x80) && --n);
 238:Core/Src/fatfs_sd.c **** 
 239:Core/Src/fatfs_sd.c **** 	return res;
 240:Core/Src/fatfs_sd.c **** }
 497              		.loc 1 240 1 view .LVU102
 498 0010 38BD     		pop	{r3, r4, r5, pc}
 499              	.LVL29:
 500              	.L54:
 216:Core/Src/fatfs_sd.c **** 	SPI_TxByte((uint8_t)(arg >> 24)); 	/* Argument[31..24] */
 501              		.loc 1 216 2 is_stmt 1 view .LVU103
 502 0012 2846     		mov	r0, r5
 503 0014 FFF7FEFF 		bl	SPI_TxByte
 504              	.LVL30:
 217:Core/Src/fatfs_sd.c **** 	SPI_TxByte((uint8_t)(arg >> 16)); 	/* Argument[23..16] */
 505              		.loc 1 217 2 view .LVU104
 506 0018 200E     		lsrs	r0, r4, #24
 507 001a FFF7FEFF 		bl	SPI_TxByte
 508              	.LVL31:
 218:Core/Src/fatfs_sd.c **** 	SPI_TxByte((uint8_t)(arg >> 8)); 	/* Argument[15..8] */
 509              		.loc 1 218 2 view .LVU105
 510 001e C4F30740 		ubfx	r0, r4, #16, #8
 511 0022 FFF7FEFF 		bl	SPI_TxByte
 512              	.LVL32:
 219:Core/Src/fatfs_sd.c **** 	SPI_TxByte((uint8_t)arg); 			/* Argument[7..0] */
 513              		.loc 1 219 2 view .LVU106
 514 0026 C4F30720 		ubfx	r0, r4, #8, #8
 515 002a FFF7FEFF 		bl	SPI_TxByte
 516              	.LVL33:
 220:Core/Src/fatfs_sd.c **** 
 517              		.loc 1 220 2 view .LVU107
 518 002e E0B2     		uxtb	r0, r4
 519 0030 FFF7FEFF 		bl	SPI_TxByte
 520              	.LVL34:
 223:Core/Src/fatfs_sd.c **** 	else if(cmd == CMD8) crc = 0x87;	/* CRC for CMD8(0x1AA) */
 521              		.loc 1 223 2 view .LVU108
 223:Core/Src/fatfs_sd.c **** 	else if(cmd == CMD8) crc = 0x87;	/* CRC for CMD8(0x1AA) */
 522              		.loc 1 223 4 is_stmt 0 view .LVU109
 523 0034 402D     		cmp	r5, #64
 524 0036 13D0     		beq	.L51
 224:Core/Src/fatfs_sd.c **** 	else crc = 1;
 525              		.loc 1 224 7 is_stmt 1 view .LVU110
 224:Core/Src/fatfs_sd.c **** 	else crc = 1;
 526              		.loc 1 224 9 is_stmt 0 view .LVU111
 527 0038 482D     		cmp	r5, #72
 528 003a 0FD0     		beq	.L55
 225:Core/Src/fatfs_sd.c **** 
 529              		.loc 1 225 11 view .LVU112
 530 003c 0120     		movs	r0, #1
 531              	.L47:
 532              	.LVL35:
 228:Core/Src/fatfs_sd.c **** 
 533              		.loc 1 228 2 is_stmt 1 view .LVU113
 534 003e FFF7FEFF 		bl	SPI_TxByte
 535              	.LVL36:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 16


 231:Core/Src/fatfs_sd.c **** 
 536              		.loc 1 231 2 view .LVU114
 231:Core/Src/fatfs_sd.c **** 
 537              		.loc 1 231 5 is_stmt 0 view .LVU115
 538 0042 4C2D     		cmp	r5, #76
 539 0044 0ED0     		beq	.L56
 540              	.L48:
 225:Core/Src/fatfs_sd.c **** 
 541              		.loc 1 225 11 view .LVU116
 542 0046 0A24     		movs	r4, #10
 543              	.LVL37:
 544              	.L49:
 235:Core/Src/fatfs_sd.c **** 		res = SPI_RxByte();
 545              		.loc 1 235 2 is_stmt 1 view .LVU117
 236:Core/Src/fatfs_sd.c **** 	} while ((res & 0x80) && --n);
 546              		.loc 1 236 3 view .LVU118
 236:Core/Src/fatfs_sd.c **** 	} while ((res & 0x80) && --n);
 547              		.loc 1 236 9 is_stmt 0 view .LVU119
 548 0048 FFF7FEFF 		bl	SPI_RxByte
 549              	.LVL38:
 237:Core/Src/fatfs_sd.c **** 
 550              		.loc 1 237 24 is_stmt 1 discriminator 2 view .LVU120
 551 004c 10F0800F 		tst	r0, #128
 552 0050 DED0     		beq	.L46
 237:Core/Src/fatfs_sd.c **** 
 553              		.loc 1 237 24 is_stmt 0 discriminator 1 view .LVU121
 554 0052 631E     		subs	r3, r4, #1
 555              	.LVL39:
 237:Core/Src/fatfs_sd.c **** 
 556              		.loc 1 237 24 discriminator 1 view .LVU122
 557 0054 13F0FF04 		ands	r4, r3, #255
 558 0058 F6D1     		bne	.L49
 559 005a D9E7     		b	.L46
 560              	.LVL40:
 561              	.L55:
 224:Core/Src/fatfs_sd.c **** 	else crc = 1;
 562              		.loc 1 224 27 discriminator 1 view .LVU123
 563 005c 8720     		movs	r0, #135
 564 005e EEE7     		b	.L47
 565              	.L51:
 223:Core/Src/fatfs_sd.c **** 	else if(cmd == CMD8) crc = 0x87;	/* CRC for CMD8(0x1AA) */
 566              		.loc 1 223 22 discriminator 1 view .LVU124
 567 0060 9520     		movs	r0, #149
 568 0062 ECE7     		b	.L47
 569              	.LVL41:
 570              	.L56:
 231:Core/Src/fatfs_sd.c **** 
 571              		.loc 1 231 20 is_stmt 1 discriminator 1 view .LVU125
 572 0064 FFF7FEFF 		bl	SPI_RxByte
 573              	.LVL42:
 574 0068 EDE7     		b	.L48
 575              		.cfi_endproc
 576              	.LFE146:
 578              		.section	.text.SPI_RxBytePtr,"ax",%progbits
 579              		.align	1
 580              		.syntax unified
 581              		.thumb
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 17


 582              		.thumb_func
 584              	SPI_RxBytePtr:
 585              	.LVL43:
 586              	.LFB139:
  62:Core/Src/fatfs_sd.c **** 	*buff = SPI_RxByte();
 587              		.loc 1 62 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
  62:Core/Src/fatfs_sd.c **** 	*buff = SPI_RxByte();
 591              		.loc 1 62 1 is_stmt 0 view .LVU127
 592 0000 10B5     		push	{r4, lr}
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 4, -8
 595              		.cfi_offset 14, -4
 596 0002 0446     		mov	r4, r0
  63:Core/Src/fatfs_sd.c **** }
 597              		.loc 1 63 2 is_stmt 1 view .LVU128
  63:Core/Src/fatfs_sd.c **** }
 598              		.loc 1 63 10 is_stmt 0 view .LVU129
 599 0004 FFF7FEFF 		bl	SPI_RxByte
 600              	.LVL44:
  63:Core/Src/fatfs_sd.c **** }
 601              		.loc 1 63 8 discriminator 1 view .LVU130
 602 0008 2070     		strb	r0, [r4]
  64:Core/Src/fatfs_sd.c **** 
 603              		.loc 1 64 1 view .LVU131
 604 000a 10BD     		pop	{r4, pc}
  64:Core/Src/fatfs_sd.c **** 
 605              		.loc 1 64 1 view .LVU132
 606              		.cfi_endproc
 607              	.LFE139:
 609              		.section	.text.SD_RxDataBlock,"ax",%progbits
 610              		.align	1
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 615              	SD_RxDataBlock:
 616              	.LVL45:
 617              	.LFB144:
 138:Core/Src/fatfs_sd.c **** 	uint8_t token;
 618              		.loc 1 138 1 is_stmt 1 view -0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 138:Core/Src/fatfs_sd.c **** 	uint8_t token;
 622              		.loc 1 138 1 is_stmt 0 view .LVU134
 623 0000 38B5     		push	{r3, r4, r5, lr}
 624              		.cfi_def_cfa_offset 16
 625              		.cfi_offset 3, -16
 626              		.cfi_offset 4, -12
 627              		.cfi_offset 5, -8
 628              		.cfi_offset 14, -4
 629 0002 0446     		mov	r4, r0
 630 0004 0D46     		mov	r5, r1
 139:Core/Src/fatfs_sd.c **** 
 631              		.loc 1 139 2 is_stmt 1 view .LVU135
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 18


 142:Core/Src/fatfs_sd.c **** 
 632              		.loc 1 142 2 view .LVU136
 142:Core/Src/fatfs_sd.c **** 
 633              		.loc 1 142 9 is_stmt 0 view .LVU137
 634 0006 0E4B     		ldr	r3, .L66
 635 0008 C822     		movs	r2, #200
 636 000a 1A80     		strh	r2, [r3]	@ movhi
 637              	.LVL46:
 638              	.L61:
 145:Core/Src/fatfs_sd.c **** 		token = SPI_RxByte();
 639              		.loc 1 145 2 is_stmt 1 view .LVU138
 146:Core/Src/fatfs_sd.c **** 	} while((token == 0xFF) && Timer1);
 640              		.loc 1 146 3 view .LVU139
 146:Core/Src/fatfs_sd.c **** 	} while((token == 0xFF) && Timer1);
 641              		.loc 1 146 11 is_stmt 0 view .LVU140
 642 000c FFF7FEFF 		bl	SPI_RxByte
 643              	.LVL47:
 147:Core/Src/fatfs_sd.c **** 
 644              		.loc 1 147 26 is_stmt 1 discriminator 2 view .LVU141
 645 0010 FF28     		cmp	r0, #255
 646 0012 03D1     		bne	.L60
 147:Core/Src/fatfs_sd.c **** 
 647              		.loc 1 147 26 is_stmt 0 discriminator 1 view .LVU142
 648 0014 0A4B     		ldr	r3, .L66
 649 0016 1B88     		ldrh	r3, [r3]
 650 0018 002B     		cmp	r3, #0
 651 001a F7D1     		bne	.L61
 652              	.L60:
 150:Core/Src/fatfs_sd.c **** 
 653              		.loc 1 150 2 is_stmt 1 view .LVU143
 150:Core/Src/fatfs_sd.c **** 
 654              		.loc 1 150 4 is_stmt 0 view .LVU144
 655 001c FE28     		cmp	r0, #254
 656 001e 0DD1     		bne	.L64
 657              	.LVL48:
 658              	.L63:
 153:Core/Src/fatfs_sd.c **** 		SPI_RxBytePtr(buff++);
 659              		.loc 1 153 2 is_stmt 1 view .LVU145
 154:Core/Src/fatfs_sd.c **** 	} while(len--);
 660              		.loc 1 154 3 view .LVU146
 661 0020 2046     		mov	r0, r4
 154:Core/Src/fatfs_sd.c **** 	} while(len--);
 662              		.loc 1 154 3 is_stmt 0 view .LVU147
 663 0022 0134     		adds	r4, r4, #1
 664              	.LVL49:
 154:Core/Src/fatfs_sd.c **** 	} while(len--);
 665              		.loc 1 154 3 view .LVU148
 666 0024 FFF7FEFF 		bl	SPI_RxBytePtr
 667              	.LVL50:
 155:Core/Src/fatfs_sd.c **** 
 668              		.loc 1 155 10 is_stmt 1 discriminator 1 view .LVU149
 669 0028 2B46     		mov	r3, r5
 155:Core/Src/fatfs_sd.c **** 
 670              		.loc 1 155 13 is_stmt 0 discriminator 1 view .LVU150
 671 002a 013D     		subs	r5, r5, #1
 672              	.LVL51:
 155:Core/Src/fatfs_sd.c **** 
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 19


 673              		.loc 1 155 10 discriminator 1 view .LVU151
 674 002c 002B     		cmp	r3, #0
 675 002e F7D1     		bne	.L63
 158:Core/Src/fatfs_sd.c **** 	SPI_RxByte();
 676              		.loc 1 158 2 is_stmt 1 view .LVU152
 677 0030 FFF7FEFF 		bl	SPI_RxByte
 678              	.LVL52:
 159:Core/Src/fatfs_sd.c **** 
 679              		.loc 1 159 2 view .LVU153
 680 0034 FFF7FEFF 		bl	SPI_RxByte
 681              	.LVL53:
 161:Core/Src/fatfs_sd.c **** }
 682              		.loc 1 161 2 view .LVU154
 161:Core/Src/fatfs_sd.c **** }
 683              		.loc 1 161 9 is_stmt 0 view .LVU155
 684 0038 0120     		movs	r0, #1
 685              	.LVL54:
 686              	.L62:
 162:Core/Src/fatfs_sd.c **** 
 687              		.loc 1 162 1 view .LVU156
 688 003a 38BD     		pop	{r3, r4, r5, pc}
 689              	.LVL55:
 690              	.L64:
 150:Core/Src/fatfs_sd.c **** 
 691              		.loc 1 150 27 discriminator 1 view .LVU157
 692 003c 0020     		movs	r0, #0
 693              	.LVL56:
 150:Core/Src/fatfs_sd.c **** 
 694              		.loc 1 150 27 discriminator 1 view .LVU158
 695 003e FCE7     		b	.L62
 696              	.L67:
 697              		.align	2
 698              	.L66:
 699 0040 00000000 		.word	Timer1
 700              		.cfi_endproc
 701              	.LFE144:
 703              		.section	.text.SD_TxDataBlock,"ax",%progbits
 704              		.align	1
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 709              	SD_TxDataBlock:
 710              	.LVL57:
 711              	.LFB145:
 167:Core/Src/fatfs_sd.c **** 	uint8_t resp;
 712              		.loc 1 167 1 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 167:Core/Src/fatfs_sd.c **** 	uint8_t resp;
 716              		.loc 1 167 1 is_stmt 0 view .LVU160
 717 0000 70B5     		push	{r4, r5, r6, lr}
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 4, -16
 720              		.cfi_offset 5, -12
 721              		.cfi_offset 6, -8
 722              		.cfi_offset 14, -4
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 20


 723 0002 0646     		mov	r6, r0
 724 0004 0D46     		mov	r5, r1
 168:Core/Src/fatfs_sd.c **** 	uint8_t i = 0;
 725              		.loc 1 168 2 is_stmt 1 view .LVU161
 169:Core/Src/fatfs_sd.c **** 
 726              		.loc 1 169 2 view .LVU162
 727              	.LVL58:
 172:Core/Src/fatfs_sd.c **** 
 728              		.loc 1 172 2 view .LVU163
 172:Core/Src/fatfs_sd.c **** 
 729              		.loc 1 172 6 is_stmt 0 view .LVU164
 730 0006 FFF7FEFF 		bl	SD_ReadyWait
 731              	.LVL59:
 172:Core/Src/fatfs_sd.c **** 
 732              		.loc 1 172 5 discriminator 1 view .LVU165
 733 000a FF28     		cmp	r0, #255
 734 000c 01D0     		beq	.L78
 172:Core/Src/fatfs_sd.c **** 
 735              		.loc 1 172 37 discriminator 1 view .LVU166
 736 000e 0020     		movs	r0, #0
 737              	.LVL60:
 738              	.L69:
 204:Core/Src/fatfs_sd.c **** #endif /* _USE_WRITE */
 739              		.loc 1 204 1 view .LVU167
 740 0010 70BD     		pop	{r4, r5, r6, pc}
 741              	.LVL61:
 742              	.L78:
 204:Core/Src/fatfs_sd.c **** #endif /* _USE_WRITE */
 743              		.loc 1 204 1 view .LVU168
 744 0012 0024     		movs	r4, #0
 175:Core/Src/fatfs_sd.c **** 
 745              		.loc 1 175 2 is_stmt 1 view .LVU169
 746 0014 2846     		mov	r0, r5
 747 0016 FFF7FEFF 		bl	SPI_TxByte
 748              	.LVL62:
 178:Core/Src/fatfs_sd.c **** 	{
 749              		.loc 1 178 2 view .LVU170
 178:Core/Src/fatfs_sd.c **** 	{
 750              		.loc 1 178 5 is_stmt 0 view .LVU171
 751 001a FD2D     		cmp	r5, #253
 752 001c 05D1     		bne	.L79
 753              	.LVL63:
 754              	.L70:
 201:Core/Src/fatfs_sd.c **** 
 755              		.loc 1 201 2 is_stmt 1 view .LVU172
 201:Core/Src/fatfs_sd.c **** 
 756              		.loc 1 201 5 is_stmt 0 view .LVU173
 757 001e 04F01F04 		and	r4, r4, #31
 758              	.LVL64:
 201:Core/Src/fatfs_sd.c **** 
 759              		.loc 1 201 5 view .LVU174
 760 0022 052C     		cmp	r4, #5
 761 0024 1CD0     		beq	.L76
 203:Core/Src/fatfs_sd.c **** }
 762              		.loc 1 203 9 view .LVU175
 763 0026 0020     		movs	r0, #0
 764 0028 F2E7     		b	.L69
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 21


 765              	.LVL65:
 766              	.L79:
 180:Core/Src/fatfs_sd.c **** 
 767              		.loc 1 180 3 is_stmt 1 view .LVU176
 768 002a 4FF40071 		mov	r1, #512
 769 002e 3046     		mov	r0, r6
 770 0030 FFF7FEFF 		bl	SPI_TxBuffer
 771              	.LVL66:
 183:Core/Src/fatfs_sd.c **** 		SPI_RxByte();
 772              		.loc 1 183 3 view .LVU177
 773 0034 FFF7FEFF 		bl	SPI_RxByte
 774              	.LVL67:
 184:Core/Src/fatfs_sd.c **** 
 775              		.loc 1 184 3 view .LVU178
 776 0038 FFF7FEFF 		bl	SPI_RxByte
 777              	.LVL68:
 187:Core/Src/fatfs_sd.c **** 		{
 778              		.loc 1 187 3 view .LVU179
 169:Core/Src/fatfs_sd.c **** 
 779              		.loc 1 169 10 is_stmt 0 view .LVU180
 780 003c 2546     		mov	r5, r4
 187:Core/Src/fatfs_sd.c **** 		{
 781              		.loc 1 187 9 view .LVU181
 782 003e 01E0     		b	.L71
 783              	.LVL69:
 784              	.L80:
 193:Core/Src/fatfs_sd.c **** 		}
 785              		.loc 1 193 4 is_stmt 1 view .LVU182
 193:Core/Src/fatfs_sd.c **** 		}
 786              		.loc 1 193 5 is_stmt 0 view .LVU183
 787 0040 0135     		adds	r5, r5, #1
 788              	.LVL70:
 193:Core/Src/fatfs_sd.c **** 		}
 789              		.loc 1 193 5 view .LVU184
 790 0042 EDB2     		uxtb	r5, r5
 791              	.LVL71:
 792              	.L71:
 187:Core/Src/fatfs_sd.c **** 		{
 793              		.loc 1 187 12 is_stmt 1 view .LVU185
 794 0044 402D     		cmp	r5, #64
 795 0046 06D8     		bhi	.L74
 189:Core/Src/fatfs_sd.c **** 
 796              		.loc 1 189 4 view .LVU186
 189:Core/Src/fatfs_sd.c **** 
 797              		.loc 1 189 11 is_stmt 0 view .LVU187
 798 0048 FFF7FEFF 		bl	SPI_RxByte
 799              	.LVL72:
 800 004c 0446     		mov	r4, r0
 801              	.LVL73:
 192:Core/Src/fatfs_sd.c **** 			i++;
 802              		.loc 1 192 4 is_stmt 1 view .LVU188
 192:Core/Src/fatfs_sd.c **** 			i++;
 803              		.loc 1 192 7 is_stmt 0 view .LVU189
 804 004e 00F01F03 		and	r3, r0, #31
 805 0052 052B     		cmp	r3, #5
 806 0054 F4D1     		bne	.L80
 807              	.LVL74:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 22


 808              	.L74:
 197:Core/Src/fatfs_sd.c **** 	}
 809              		.loc 1 197 23 is_stmt 1 discriminator 1 view .LVU190
 197:Core/Src/fatfs_sd.c **** 	}
 810              		.loc 1 197 10 is_stmt 0 discriminator 1 view .LVU191
 811 0056 FFF7FEFF 		bl	SPI_RxByte
 812              	.LVL75:
 197:Core/Src/fatfs_sd.c **** 	}
 813              		.loc 1 197 23 discriminator 1 view .LVU192
 814 005a 0028     		cmp	r0, #0
 815 005c FBD0     		beq	.L74
 816 005e DEE7     		b	.L70
 817              	.LVL76:
 818              	.L76:
 201:Core/Src/fatfs_sd.c **** 
 819              		.loc 1 201 36 discriminator 1 view .LVU193
 820 0060 0120     		movs	r0, #1
 821 0062 D5E7     		b	.L69
 822              		.cfi_endproc
 823              	.LFE145:
 825              		.section	.text.SD_disk_initialize,"ax",%progbits
 826              		.align	1
 827              		.global	SD_disk_initialize
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 832              	SD_disk_initialize:
 833              	.LVL77:
 834              	.LFB147:
 241:Core/Src/fatfs_sd.c **** 
 242:Core/Src/fatfs_sd.c **** /***************************************
 243:Core/Src/fatfs_sd.c ****  * user_diskio.c functions
 244:Core/Src/fatfs_sd.c ****  **************************************/
 245:Core/Src/fatfs_sd.c **** 
 246:Core/Src/fatfs_sd.c **** /* initialize SD */
 247:Core/Src/fatfs_sd.c **** DSTATUS SD_disk_initialize(BYTE drv) 
 248:Core/Src/fatfs_sd.c **** {
 835              		.loc 1 248 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 8
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 249:Core/Src/fatfs_sd.c **** 	uint8_t n, type, ocr[4];
 839              		.loc 1 249 2 view .LVU195
 250:Core/Src/fatfs_sd.c **** 
 251:Core/Src/fatfs_sd.c **** 	/* single drive, drv should be 0 */
 252:Core/Src/fatfs_sd.c **** 	if(drv) return STA_NOINIT;
 840              		.loc 1 252 2 view .LVU196
 841              		.loc 1 252 4 is_stmt 0 view .LVU197
 842 0000 0028     		cmp	r0, #0
 843 0002 40F0B280 		bne	.L100
 248:Core/Src/fatfs_sd.c **** 	uint8_t n, type, ocr[4];
 844              		.loc 1 248 1 view .LVU198
 845 0006 30B5     		push	{r4, r5, lr}
 846              		.cfi_def_cfa_offset 12
 847              		.cfi_offset 4, -12
 848              		.cfi_offset 5, -8
 849              		.cfi_offset 14, -4
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 23


 850 0008 83B0     		sub	sp, sp, #12
 851              		.cfi_def_cfa_offset 24
 253:Core/Src/fatfs_sd.c **** 
 254:Core/Src/fatfs_sd.c **** 	/* no disk */
 255:Core/Src/fatfs_sd.c **** 	if(Stat & STA_NODISK) return Stat;
 852              		.loc 1 255 2 is_stmt 1 view .LVU199
 853              		.loc 1 255 10 is_stmt 0 view .LVU200
 854 000a 594B     		ldr	r3, .L113
 855 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 856              		.loc 1 255 4 view .LVU201
 857 000e 13F00204 		ands	r4, r3, #2
 858 0012 04D0     		beq	.L83
 859              		.loc 1 255 24 is_stmt 1 discriminator 1 view .LVU202
 860              		.loc 1 255 31 is_stmt 0 discriminator 1 view .LVU203
 861 0014 564B     		ldr	r3, .L113
 862 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 863              	.LVL78:
 864              		.loc 1 255 31 discriminator 1 view .LVU204
 865 0018 C0B2     		uxtb	r0, r0
 866              	.L82:
 256:Core/Src/fatfs_sd.c **** 
 257:Core/Src/fatfs_sd.c **** 	/* power on */
 258:Core/Src/fatfs_sd.c **** 	SD_PowerOn();
 259:Core/Src/fatfs_sd.c **** 
 260:Core/Src/fatfs_sd.c **** 	/* slave select */
 261:Core/Src/fatfs_sd.c **** 	SELECT();
 262:Core/Src/fatfs_sd.c **** 
 263:Core/Src/fatfs_sd.c **** 	/* check disk type */
 264:Core/Src/fatfs_sd.c **** 	type = 0;
 265:Core/Src/fatfs_sd.c **** 
 266:Core/Src/fatfs_sd.c **** 	/* send GO_IDLE_STATE command */
 267:Core/Src/fatfs_sd.c **** 	if (SD_SendCmd(CMD0, 0) == 1)
 268:Core/Src/fatfs_sd.c **** 	{
 269:Core/Src/fatfs_sd.c **** 		/* timeout 1 sec */
 270:Core/Src/fatfs_sd.c **** 		Timer1 = 1000;
 271:Core/Src/fatfs_sd.c **** 
 272:Core/Src/fatfs_sd.c **** 		/* SDC V2+ accept CMD8 command, http://elm-chan.org/docs/mmc/mmc_e.html */
 273:Core/Src/fatfs_sd.c **** 		if (SD_SendCmd(CMD8, 0x1AA) == 1)
 274:Core/Src/fatfs_sd.c **** 		{
 275:Core/Src/fatfs_sd.c **** 			/* operation condition register */
 276:Core/Src/fatfs_sd.c **** 			for (n = 0; n < 4; n++)
 277:Core/Src/fatfs_sd.c **** 			{
 278:Core/Src/fatfs_sd.c **** 				ocr[n] = SPI_RxByte();
 279:Core/Src/fatfs_sd.c **** 			}
 280:Core/Src/fatfs_sd.c **** 
 281:Core/Src/fatfs_sd.c **** 			/* voltage range 2.7-3.6V */
 282:Core/Src/fatfs_sd.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA)
 283:Core/Src/fatfs_sd.c **** 			{
 284:Core/Src/fatfs_sd.c **** 				/* ACMD41 with HCS bit */
 285:Core/Src/fatfs_sd.c **** 				do {
 286:Core/Src/fatfs_sd.c **** 					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 1UL << 30) == 0) break;
 287:Core/Src/fatfs_sd.c **** 				} while (Timer1);
 288:Core/Src/fatfs_sd.c **** 
 289:Core/Src/fatfs_sd.c **** 				/* READ_OCR */
 290:Core/Src/fatfs_sd.c **** 				if (Timer1 && SD_SendCmd(CMD58, 0) == 0)
 291:Core/Src/fatfs_sd.c **** 				{
 292:Core/Src/fatfs_sd.c **** 					/* Check CCS bit */
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 24


 293:Core/Src/fatfs_sd.c **** 					for (n = 0; n < 4; n++)
 294:Core/Src/fatfs_sd.c **** 					{
 295:Core/Src/fatfs_sd.c **** 						ocr[n] = SPI_RxByte();
 296:Core/Src/fatfs_sd.c **** 					}
 297:Core/Src/fatfs_sd.c **** 
 298:Core/Src/fatfs_sd.c **** 					/* SDv2 (HC or SC) */
 299:Core/Src/fatfs_sd.c **** 					type = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
 300:Core/Src/fatfs_sd.c **** 				}
 301:Core/Src/fatfs_sd.c **** 			}
 302:Core/Src/fatfs_sd.c **** 		}
 303:Core/Src/fatfs_sd.c **** 		else
 304:Core/Src/fatfs_sd.c **** 		{
 305:Core/Src/fatfs_sd.c **** 			/* SDC V1 or MMC */
 306:Core/Src/fatfs_sd.c **** 			type = (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 0) <= 1) ? CT_SD1 : CT_MMC;
 307:Core/Src/fatfs_sd.c **** 
 308:Core/Src/fatfs_sd.c **** 			do
 309:Core/Src/fatfs_sd.c **** 			{
 310:Core/Src/fatfs_sd.c **** 				if (type == CT_SD1)
 311:Core/Src/fatfs_sd.c **** 				{
 312:Core/Src/fatfs_sd.c **** 					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 0) == 0) break; /* ACMD41 */
 313:Core/Src/fatfs_sd.c **** 				}
 314:Core/Src/fatfs_sd.c **** 				else
 315:Core/Src/fatfs_sd.c **** 				{
 316:Core/Src/fatfs_sd.c **** 					if (SD_SendCmd(CMD1, 0) == 0) break; /* CMD1 */
 317:Core/Src/fatfs_sd.c **** 				}
 318:Core/Src/fatfs_sd.c **** 
 319:Core/Src/fatfs_sd.c **** 			} while (Timer1);
 320:Core/Src/fatfs_sd.c **** 
 321:Core/Src/fatfs_sd.c **** 			/* SET_BLOCKLEN */
 322:Core/Src/fatfs_sd.c **** 			if (!Timer1 || SD_SendCmd(CMD16, 512) != 0) type = 0;
 323:Core/Src/fatfs_sd.c **** 		}
 324:Core/Src/fatfs_sd.c **** 	}
 325:Core/Src/fatfs_sd.c **** 
 326:Core/Src/fatfs_sd.c **** 	CardType = type;
 327:Core/Src/fatfs_sd.c **** 
 328:Core/Src/fatfs_sd.c **** 	/* Idle */
 329:Core/Src/fatfs_sd.c **** 	DESELECT();
 330:Core/Src/fatfs_sd.c **** 	SPI_RxByte();
 331:Core/Src/fatfs_sd.c **** 
 332:Core/Src/fatfs_sd.c **** 	/* Clear STA_NOINIT */
 333:Core/Src/fatfs_sd.c **** 	if (type)
 334:Core/Src/fatfs_sd.c **** 	{
 335:Core/Src/fatfs_sd.c **** 		Stat &= ~STA_NOINIT;
 336:Core/Src/fatfs_sd.c **** 	}
 337:Core/Src/fatfs_sd.c **** 	else
 338:Core/Src/fatfs_sd.c **** 	{
 339:Core/Src/fatfs_sd.c **** 		/* Initialization failed */
 340:Core/Src/fatfs_sd.c **** 		SD_PowerOff();
 341:Core/Src/fatfs_sd.c **** 	}
 342:Core/Src/fatfs_sd.c **** 
 343:Core/Src/fatfs_sd.c **** 	return Stat;
 344:Core/Src/fatfs_sd.c **** }
 867              		.loc 1 344 1 view .LVU205
 868 001a 03B0     		add	sp, sp, #12
 869              		.cfi_remember_state
 870              		.cfi_def_cfa_offset 12
 871              		@ sp needed
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 25


 872 001c 30BD     		pop	{r4, r5, pc}
 873              	.LVL79:
 874              	.L83:
 875              		.cfi_restore_state
 258:Core/Src/fatfs_sd.c **** 
 876              		.loc 1 258 2 is_stmt 1 view .LVU206
 877 001e FFF7FEFF 		bl	SD_PowerOn
 878              	.LVL80:
 261:Core/Src/fatfs_sd.c **** 
 879              		.loc 1 261 2 view .LVU207
 880 0022 FFF7FEFF 		bl	SELECT
 881              	.LVL81:
 264:Core/Src/fatfs_sd.c **** 
 882              		.loc 1 264 2 view .LVU208
 267:Core/Src/fatfs_sd.c **** 	{
 883              		.loc 1 267 2 view .LVU209
 267:Core/Src/fatfs_sd.c **** 	{
 884              		.loc 1 267 6 is_stmt 0 view .LVU210
 885 0026 0021     		movs	r1, #0
 886 0028 4020     		movs	r0, #64
 887 002a FFF7FEFF 		bl	SD_SendCmd
 888              	.LVL82:
 889 002e 0546     		mov	r5, r0
 267:Core/Src/fatfs_sd.c **** 	{
 890              		.loc 1 267 5 discriminator 1 view .LVU211
 891 0030 0128     		cmp	r0, #1
 892 0032 11D0     		beq	.L108
 893              	.LVL83:
 894              	.L84:
 326:Core/Src/fatfs_sd.c **** 
 895              		.loc 1 326 2 is_stmt 1 view .LVU212
 326:Core/Src/fatfs_sd.c **** 
 896              		.loc 1 326 11 is_stmt 0 view .LVU213
 897 0034 4F4B     		ldr	r3, .L113+4
 898 0036 1C70     		strb	r4, [r3]
 329:Core/Src/fatfs_sd.c **** 	SPI_RxByte();
 899              		.loc 1 329 2 is_stmt 1 view .LVU214
 900 0038 FFF7FEFF 		bl	DESELECT
 901              	.LVL84:
 330:Core/Src/fatfs_sd.c **** 
 902              		.loc 1 330 2 view .LVU215
 903 003c FFF7FEFF 		bl	SPI_RxByte
 904              	.LVL85:
 333:Core/Src/fatfs_sd.c **** 	{
 905              		.loc 1 333 2 view .LVU216
 333:Core/Src/fatfs_sd.c **** 	{
 906              		.loc 1 333 5 is_stmt 0 view .LVU217
 907 0040 002C     		cmp	r4, #0
 908 0042 00F08F80 		beq	.L98
 335:Core/Src/fatfs_sd.c **** 	}
 909              		.loc 1 335 3 is_stmt 1 view .LVU218
 335:Core/Src/fatfs_sd.c **** 	}
 910              		.loc 1 335 8 is_stmt 0 view .LVU219
 911 0046 4A4A     		ldr	r2, .L113
 912 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 913 004a 03F0FE03 		and	r3, r3, #254
 914 004e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 26


 915              	.L99:
 343:Core/Src/fatfs_sd.c **** }
 916              		.loc 1 343 2 is_stmt 1 view .LVU220
 343:Core/Src/fatfs_sd.c **** }
 917              		.loc 1 343 9 is_stmt 0 view .LVU221
 918 0050 474B     		ldr	r3, .L113
 919 0052 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 920 0054 C0B2     		uxtb	r0, r0
 921 0056 E0E7     		b	.L82
 922              	.LVL86:
 923              	.L108:
 270:Core/Src/fatfs_sd.c **** 
 924              		.loc 1 270 3 is_stmt 1 view .LVU222
 270:Core/Src/fatfs_sd.c **** 
 925              		.loc 1 270 10 is_stmt 0 view .LVU223
 926 0058 474B     		ldr	r3, .L113+8
 927 005a 4FF47A72 		mov	r2, #1000
 928 005e 1A80     		strh	r2, [r3]	@ movhi
 273:Core/Src/fatfs_sd.c **** 		{
 929              		.loc 1 273 3 is_stmt 1 view .LVU224
 273:Core/Src/fatfs_sd.c **** 		{
 930              		.loc 1 273 7 is_stmt 0 view .LVU225
 931 0060 4FF4D571 		mov	r1, #426
 932 0064 4820     		movs	r0, #72
 933 0066 FFF7FEFF 		bl	SD_SendCmd
 934              	.LVL87:
 273:Core/Src/fatfs_sd.c **** 		{
 935              		.loc 1 273 6 discriminator 1 view .LVU226
 936 006a 0128     		cmp	r0, #1
 937 006c 43D1     		bne	.L109
 276:Core/Src/fatfs_sd.c **** 			{
 938              		.loc 1 276 11 view .LVU227
 939 006e 2546     		mov	r5, r4
 940 0070 08E0     		b	.L85
 941              	.LVL88:
 942              	.L87:
 278:Core/Src/fatfs_sd.c **** 			}
 943              		.loc 1 278 5 is_stmt 1 view .LVU228
 278:Core/Src/fatfs_sd.c **** 			}
 944              		.loc 1 278 14 is_stmt 0 view .LVU229
 945 0072 FFF7FEFF 		bl	SPI_RxByte
 946              	.LVL89:
 278:Core/Src/fatfs_sd.c **** 			}
 947              		.loc 1 278 12 discriminator 1 view .LVU230
 948 0076 05F10803 		add	r3, r5, #8
 949 007a 6B44     		add	r3, sp, r3
 950 007c 03F8040C 		strb	r0, [r3, #-4]
 276:Core/Src/fatfs_sd.c **** 			{
 951              		.loc 1 276 24 is_stmt 1 discriminator 3 view .LVU231
 952 0080 0135     		adds	r5, r5, #1
 953              	.LVL90:
 276:Core/Src/fatfs_sd.c **** 			{
 954              		.loc 1 276 24 is_stmt 0 discriminator 3 view .LVU232
 955 0082 EDB2     		uxtb	r5, r5
 956              	.LVL91:
 957              	.L85:
 276:Core/Src/fatfs_sd.c **** 			{
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 27


 958              		.loc 1 276 18 is_stmt 1 discriminator 1 view .LVU233
 959 0084 032D     		cmp	r5, #3
 960 0086 F4D9     		bls	.L87
 282:Core/Src/fatfs_sd.c **** 			{
 961              		.loc 1 282 4 view .LVU234
 282:Core/Src/fatfs_sd.c **** 			{
 962              		.loc 1 282 11 is_stmt 0 view .LVU235
 963 0088 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 282:Core/Src/fatfs_sd.c **** 			{
 964              		.loc 1 282 7 view .LVU236
 965 008c 012B     		cmp	r3, #1
 966 008e D1D1     		bne	.L84
 282:Core/Src/fatfs_sd.c **** 			{
 967              		.loc 1 282 29 discriminator 1 view .LVU237
 968 0090 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 282:Core/Src/fatfs_sd.c **** 			{
 969              		.loc 1 282 23 discriminator 1 view .LVU238
 970 0094 AA2B     		cmp	r3, #170
 971 0096 CDD1     		bne	.L84
 972 0098 02E0     		b	.L90
 973              	.L88:
 287:Core/Src/fatfs_sd.c **** 
 974              		.loc 1 287 14 is_stmt 1 view .LVU239
 975 009a 374B     		ldr	r3, .L113+8
 976 009c 1B88     		ldrh	r3, [r3]
 977 009e 63B1     		cbz	r3, .L89
 978              	.L90:
 285:Core/Src/fatfs_sd.c **** 					if (SD_SendCmd(CMD55, 0) <= 1 && SD_SendCmd(CMD41, 1UL << 30) == 0) break;
 979              		.loc 1 285 5 view .LVU240
 286:Core/Src/fatfs_sd.c **** 				} while (Timer1);
 980              		.loc 1 286 6 view .LVU241
 286:Core/Src/fatfs_sd.c **** 				} while (Timer1);
 981              		.loc 1 286 10 is_stmt 0 view .LVU242
 982 00a0 0021     		movs	r1, #0
 983 00a2 7720     		movs	r0, #119
 984 00a4 FFF7FEFF 		bl	SD_SendCmd
 985              	.LVL92:
 286:Core/Src/fatfs_sd.c **** 				} while (Timer1);
 986              		.loc 1 286 9 discriminator 1 view .LVU243
 987 00a8 0128     		cmp	r0, #1
 988 00aa F6D8     		bhi	.L88
 286:Core/Src/fatfs_sd.c **** 				} while (Timer1);
 989              		.loc 1 286 39 discriminator 1 view .LVU244
 990 00ac 4FF08041 		mov	r1, #1073741824
 991 00b0 6920     		movs	r0, #105
 992 00b2 FFF7FEFF 		bl	SD_SendCmd
 993              	.LVL93:
 286:Core/Src/fatfs_sd.c **** 				} while (Timer1);
 994              		.loc 1 286 36 discriminator 1 view .LVU245
 995 00b6 0028     		cmp	r0, #0
 996 00b8 EFD1     		bne	.L88
 997              	.L89:
 290:Core/Src/fatfs_sd.c **** 				{
 998              		.loc 1 290 5 is_stmt 1 view .LVU246
 290:Core/Src/fatfs_sd.c **** 				{
 999              		.loc 1 290 9 is_stmt 0 view .LVU247
 1000 00ba 2F4B     		ldr	r3, .L113+8
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 28


 1001 00bc 1B88     		ldrh	r3, [r3]
 290:Core/Src/fatfs_sd.c **** 				{
 1002              		.loc 1 290 8 view .LVU248
 1003 00be 002B     		cmp	r3, #0
 1004 00c0 B8D0     		beq	.L84
 290:Core/Src/fatfs_sd.c **** 				{
 1005              		.loc 1 290 19 discriminator 1 view .LVU249
 1006 00c2 0021     		movs	r1, #0
 1007 00c4 7A20     		movs	r0, #122
 1008 00c6 FFF7FEFF 		bl	SD_SendCmd
 1009              	.LVL94:
 290:Core/Src/fatfs_sd.c **** 				{
 1010              		.loc 1 290 16 discriminator 1 view .LVU250
 1011 00ca 0546     		mov	r5, r0
 1012              	.LVL95:
 290:Core/Src/fatfs_sd.c **** 				{
 1013              		.loc 1 290 16 discriminator 1 view .LVU251
 1014 00cc 0028     		cmp	r0, #0
 1015 00ce B1D1     		bne	.L84
 1016              	.LVL96:
 1017              	.L91:
 293:Core/Src/fatfs_sd.c **** 					{
 1018              		.loc 1 293 20 is_stmt 1 discriminator 1 view .LVU252
 1019 00d0 032D     		cmp	r5, #3
 1020 00d2 09D8     		bhi	.L110
 295:Core/Src/fatfs_sd.c **** 					}
 1021              		.loc 1 295 7 view .LVU253
 295:Core/Src/fatfs_sd.c **** 					}
 1022              		.loc 1 295 16 is_stmt 0 view .LVU254
 1023 00d4 FFF7FEFF 		bl	SPI_RxByte
 1024              	.LVL97:
 295:Core/Src/fatfs_sd.c **** 					}
 1025              		.loc 1 295 14 discriminator 1 view .LVU255
 1026 00d8 05F10803 		add	r3, r5, #8
 1027 00dc 6B44     		add	r3, sp, r3
 1028 00de 03F8040C 		strb	r0, [r3, #-4]
 293:Core/Src/fatfs_sd.c **** 					{
 1029              		.loc 1 293 26 is_stmt 1 discriminator 3 view .LVU256
 1030 00e2 0135     		adds	r5, r5, #1
 1031              	.LVL98:
 293:Core/Src/fatfs_sd.c **** 					{
 1032              		.loc 1 293 26 is_stmt 0 discriminator 3 view .LVU257
 1033 00e4 EDB2     		uxtb	r5, r5
 1034              	.LVL99:
 293:Core/Src/fatfs_sd.c **** 					{
 1035              		.loc 1 293 26 discriminator 3 view .LVU258
 1036 00e6 F3E7     		b	.L91
 1037              	.L110:
 299:Core/Src/fatfs_sd.c **** 				}
 1038              		.loc 1 299 6 is_stmt 1 view .LVU259
 299:Core/Src/fatfs_sd.c **** 				}
 1039              		.loc 1 299 17 is_stmt 0 view .LVU260
 1040 00e8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 299:Core/Src/fatfs_sd.c **** 				}
 1041              		.loc 1 299 11 view .LVU261
 1042 00ec 13F0400F 		tst	r3, #64
 1043 00f0 36D0     		beq	.L102
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 29


 299:Core/Src/fatfs_sd.c **** 				}
 1044              		.loc 1 299 11 discriminator 1 view .LVU262
 1045 00f2 0C24     		movs	r4, #12
 1046 00f4 9EE7     		b	.L84
 1047              	.LVL100:
 1048              	.L109:
 306:Core/Src/fatfs_sd.c **** 
 1049              		.loc 1 306 4 is_stmt 1 view .LVU263
 306:Core/Src/fatfs_sd.c **** 
 1050              		.loc 1 306 12 is_stmt 0 view .LVU264
 1051 00f6 0021     		movs	r1, #0
 1052 00f8 7720     		movs	r0, #119
 1053 00fa FFF7FEFF 		bl	SD_SendCmd
 1054              	.LVL101:
 306:Core/Src/fatfs_sd.c **** 
 1055              		.loc 1 306 9 discriminator 1 view .LVU265
 1056 00fe 0128     		cmp	r0, #1
 1057 0100 10D8     		bhi	.L97
 306:Core/Src/fatfs_sd.c **** 
 1058              		.loc 1 306 41 discriminator 1 view .LVU266
 1059 0102 0021     		movs	r1, #0
 1060 0104 6920     		movs	r0, #105
 1061 0106 FFF7FEFF 		bl	SD_SendCmd
 1062              	.LVL102:
 306:Core/Src/fatfs_sd.c **** 
 1063              		.loc 1 306 38 discriminator 1 view .LVU267
 1064 010a 0128     		cmp	r0, #1
 1065 010c 0AD8     		bhi	.L97
 306:Core/Src/fatfs_sd.c **** 
 1066              		.loc 1 306 9 discriminator 3 view .LVU268
 1067 010e 0225     		movs	r5, #2
 1068              	.LVL103:
 306:Core/Src/fatfs_sd.c **** 
 1069              		.loc 1 306 9 discriminator 3 view .LVU269
 1070 0110 08E0     		b	.L97
 1071              	.LVL104:
 1072              	.L112:
 312:Core/Src/fatfs_sd.c **** 				}
 1073              		.loc 1 312 6 is_stmt 1 view .LVU270
 312:Core/Src/fatfs_sd.c **** 				}
 1074              		.loc 1 312 10 is_stmt 0 view .LVU271
 1075 0112 0021     		movs	r1, #0
 1076 0114 7720     		movs	r0, #119
 1077 0116 FFF7FEFF 		bl	SD_SendCmd
 1078              	.LVL105:
 312:Core/Src/fatfs_sd.c **** 				}
 1079              		.loc 1 312 9 discriminator 1 view .LVU272
 1080 011a 0128     		cmp	r0, #1
 1081 011c 19D9     		bls	.L111
 1082              	.L95:
 319:Core/Src/fatfs_sd.c **** 
 1083              		.loc 1 319 13 is_stmt 1 view .LVU273
 1084 011e 164B     		ldr	r3, .L113+8
 1085 0120 1B88     		ldrh	r3, [r3]
 1086 0122 3BB1     		cbz	r3, .L96
 1087              	.L97:
 308:Core/Src/fatfs_sd.c **** 			{
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 30


 1088              		.loc 1 308 4 view .LVU274
 310:Core/Src/fatfs_sd.c **** 				{
 1089              		.loc 1 310 5 view .LVU275
 310:Core/Src/fatfs_sd.c **** 				{
 1090              		.loc 1 310 8 is_stmt 0 view .LVU276
 1091 0124 022D     		cmp	r5, #2
 1092 0126 F4D0     		beq	.L112
 316:Core/Src/fatfs_sd.c **** 				}
 1093              		.loc 1 316 6 is_stmt 1 view .LVU277
 316:Core/Src/fatfs_sd.c **** 				}
 1094              		.loc 1 316 10 is_stmt 0 view .LVU278
 1095 0128 0021     		movs	r1, #0
 1096 012a 4120     		movs	r0, #65
 1097 012c FFF7FEFF 		bl	SD_SendCmd
 1098              	.LVL106:
 316:Core/Src/fatfs_sd.c **** 				}
 1099              		.loc 1 316 9 discriminator 1 view .LVU279
 1100 0130 0028     		cmp	r0, #0
 1101 0132 F4D1     		bne	.L95
 1102              	.L96:
 322:Core/Src/fatfs_sd.c **** 		}
 1103              		.loc 1 322 4 is_stmt 1 view .LVU280
 322:Core/Src/fatfs_sd.c **** 		}
 1104              		.loc 1 322 8 is_stmt 0 view .LVU281
 1105 0134 104B     		ldr	r3, .L113+8
 1106 0136 1B88     		ldrh	r3, [r3]
 322:Core/Src/fatfs_sd.c **** 		}
 1107              		.loc 1 322 7 view .LVU282
 1108 0138 002B     		cmp	r3, #0
 1109 013a 3FF47BAF 		beq	.L84
 322:Core/Src/fatfs_sd.c **** 		}
 1110              		.loc 1 322 19 discriminator 2 view .LVU283
 1111 013e 4FF40071 		mov	r1, #512
 1112 0142 5020     		movs	r0, #80
 1113 0144 FFF7FEFF 		bl	SD_SendCmd
 1114              	.LVL107:
 322:Core/Src/fatfs_sd.c **** 		}
 1115              		.loc 1 322 16 discriminator 1 view .LVU284
 1116 0148 0028     		cmp	r0, #0
 1117 014a 7FF473AF 		bne	.L84
 306:Core/Src/fatfs_sd.c **** 
 1118              		.loc 1 306 9 discriminator 6 view .LVU285
 1119 014e 2C46     		mov	r4, r5
 1120 0150 70E7     		b	.L84
 1121              	.L111:
 312:Core/Src/fatfs_sd.c **** 				}
 1122              		.loc 1 312 39 discriminator 1 view .LVU286
 1123 0152 0021     		movs	r1, #0
 1124 0154 6920     		movs	r0, #105
 1125 0156 FFF7FEFF 		bl	SD_SendCmd
 1126              	.LVL108:
 312:Core/Src/fatfs_sd.c **** 				}
 1127              		.loc 1 312 36 discriminator 1 view .LVU287
 1128 015a 0028     		cmp	r0, #0
 1129 015c DFD1     		bne	.L95
 1130 015e E9E7     		b	.L96
 1131              	.LVL109:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 31


 1132              	.L102:
 299:Core/Src/fatfs_sd.c **** 				}
 1133              		.loc 1 299 11 discriminator 2 view .LVU288
 1134 0160 0424     		movs	r4, #4
 1135 0162 67E7     		b	.L84
 1136              	.LVL110:
 1137              	.L98:
 340:Core/Src/fatfs_sd.c **** 	}
 1138              		.loc 1 340 3 is_stmt 1 view .LVU289
 1139 0164 FFF7FEFF 		bl	SD_PowerOff
 1140              	.LVL111:
 1141 0168 72E7     		b	.L99
 1142              	.LVL112:
 1143              	.L100:
 1144              		.cfi_def_cfa_offset 0
 1145              		.cfi_restore 4
 1146              		.cfi_restore 5
 1147              		.cfi_restore 14
 252:Core/Src/fatfs_sd.c **** 
 1148              		.loc 1 252 17 is_stmt 0 discriminator 1 view .LVU290
 1149 016a 0120     		movs	r0, #1
 1150              	.LVL113:
 1151              		.loc 1 344 1 view .LVU291
 1152 016c 7047     		bx	lr
 1153              	.L114:
 1154 016e 00BF     		.align	2
 1155              	.L113:
 1156 0170 00000000 		.word	Stat
 1157 0174 00000000 		.word	CardType
 1158 0178 00000000 		.word	Timer1
 1159              		.cfi_endproc
 1160              	.LFE147:
 1162              		.section	.text.SD_disk_status,"ax",%progbits
 1163              		.align	1
 1164              		.global	SD_disk_status
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1169              	SD_disk_status:
 1170              	.LVL114:
 1171              	.LFB148:
 345:Core/Src/fatfs_sd.c **** 
 346:Core/Src/fatfs_sd.c **** /* return disk status */
 347:Core/Src/fatfs_sd.c **** DSTATUS SD_disk_status(BYTE drv) 
 348:Core/Src/fatfs_sd.c **** {
 1172              		.loc 1 348 1 is_stmt 1 view -0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 349:Core/Src/fatfs_sd.c **** 	if (drv) return STA_NOINIT;
 1177              		.loc 1 349 2 view .LVU293
 1178              		.loc 1 349 5 is_stmt 0 view .LVU294
 1179 0000 18B9     		cbnz	r0, .L117
 350:Core/Src/fatfs_sd.c **** 	return Stat;
 1180              		.loc 1 350 2 is_stmt 1 view .LVU295
 1181              		.loc 1 350 9 is_stmt 0 view .LVU296
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 32


 1182 0002 034B     		ldr	r3, .L118
 1183 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1184              	.LVL115:
 1185              		.loc 1 350 9 view .LVU297
 1186 0006 C0B2     		uxtb	r0, r0
 1187 0008 7047     		bx	lr
 1188              	.LVL116:
 1189              	.L117:
 349:Core/Src/fatfs_sd.c **** 	if (drv) return STA_NOINIT;
 1190              		.loc 1 349 18 discriminator 1 view .LVU298
 1191 000a 0120     		movs	r0, #1
 1192              	.LVL117:
 351:Core/Src/fatfs_sd.c **** }
 1193              		.loc 1 351 1 view .LVU299
 1194 000c 7047     		bx	lr
 1195              	.L119:
 1196 000e 00BF     		.align	2
 1197              	.L118:
 1198 0010 00000000 		.word	Stat
 1199              		.cfi_endproc
 1200              	.LFE148:
 1202              		.section	.text.SD_disk_read,"ax",%progbits
 1203              		.align	1
 1204              		.global	SD_disk_read
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1209              	SD_disk_read:
 1210              	.LVL118:
 1211              	.LFB149:
 352:Core/Src/fatfs_sd.c **** 
 353:Core/Src/fatfs_sd.c **** /* read sector */
 354:Core/Src/fatfs_sd.c **** DRESULT SD_disk_read(BYTE pdrv, BYTE* buff, DWORD sector, UINT count) 
 355:Core/Src/fatfs_sd.c **** {
 1212              		.loc 1 355 1 is_stmt 1 view -0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 356:Core/Src/fatfs_sd.c **** 	/* pdrv should be 0 */
 357:Core/Src/fatfs_sd.c **** 	if (pdrv || !count) return RES_PARERR;
 1216              		.loc 1 357 2 view .LVU301
 1217              		.loc 1 357 5 is_stmt 0 view .LVU302
 1218 0000 0028     		cmp	r0, #0
 1219 0002 3ED1     		bne	.L127
 355:Core/Src/fatfs_sd.c **** 	/* pdrv should be 0 */
 1220              		.loc 1 355 1 view .LVU303
 1221 0004 70B5     		push	{r4, r5, r6, lr}
 1222              		.cfi_def_cfa_offset 16
 1223              		.cfi_offset 4, -16
 1224              		.cfi_offset 5, -12
 1225              		.cfi_offset 6, -8
 1226              		.cfi_offset 14, -4
 1227 0006 0D46     		mov	r5, r1
 1228 0008 1646     		mov	r6, r2
 1229 000a 1C46     		mov	r4, r3
 1230              		.loc 1 357 11 discriminator 2 view .LVU304
 1231 000c 002B     		cmp	r3, #0
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 33


 1232 000e 3AD0     		beq	.L128
 358:Core/Src/fatfs_sd.c **** 
 359:Core/Src/fatfs_sd.c **** 	/* no disk */
 360:Core/Src/fatfs_sd.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;
 1233              		.loc 1 360 2 is_stmt 1 view .LVU305
 1234              		.loc 1 360 11 is_stmt 0 view .LVU306
 1235 0010 1F4B     		ldr	r3, .L136
 1236              	.LVL119:
 1237              		.loc 1 360 11 view .LVU307
 1238 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239              		.loc 1 360 5 view .LVU308
 1240 0014 13F0010F 		tst	r3, #1
 1241 0018 37D1     		bne	.L129
 361:Core/Src/fatfs_sd.c **** 
 362:Core/Src/fatfs_sd.c **** 	/* convert to byte address */
 363:Core/Src/fatfs_sd.c **** 	if (!(CardType & CT_SD2)) sector *= 512;
 1242              		.loc 1 363 2 is_stmt 1 view .LVU309
 1243              		.loc 1 363 17 is_stmt 0 view .LVU310
 1244 001a 1E4B     		ldr	r3, .L136+4
 1245 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1246              		.loc 1 363 5 view .LVU311
 1247 001e 13F0040F 		tst	r3, #4
 1248 0022 00D1     		bne	.L122
 1249              		.loc 1 363 28 is_stmt 1 discriminator 1 view .LVU312
 1250              		.loc 1 363 35 is_stmt 0 discriminator 1 view .LVU313
 1251 0024 5602     		lsls	r6, r2, #9
 1252              	.LVL120:
 1253              	.L122:
 364:Core/Src/fatfs_sd.c **** 
 365:Core/Src/fatfs_sd.c **** 	SELECT();
 1254              		.loc 1 365 2 is_stmt 1 view .LVU314
 1255 0026 FFF7FEFF 		bl	SELECT
 1256              	.LVL121:
 366:Core/Src/fatfs_sd.c **** 
 367:Core/Src/fatfs_sd.c **** 	if (count == 1)
 1257              		.loc 1 367 2 view .LVU315
 1258              		.loc 1 367 5 is_stmt 0 view .LVU316
 1259 002a 012C     		cmp	r4, #1
 1260 002c 1AD0     		beq	.L135
 368:Core/Src/fatfs_sd.c **** 	{
 369:Core/Src/fatfs_sd.c **** 		/* READ_SINGLE_BLOCK */
 370:Core/Src/fatfs_sd.c **** 		if ((SD_SendCmd(CMD17, sector) == 0) && SD_RxDataBlock(buff, 512)) count = 0;
 371:Core/Src/fatfs_sd.c **** 	}
 372:Core/Src/fatfs_sd.c **** 	else
 373:Core/Src/fatfs_sd.c **** 	{
 374:Core/Src/fatfs_sd.c **** 		/* READ_MULTIPLE_BLOCK */
 375:Core/Src/fatfs_sd.c **** 		if (SD_SendCmd(CMD18, sector) == 0)
 1261              		.loc 1 375 3 is_stmt 1 view .LVU317
 1262              		.loc 1 375 7 is_stmt 0 view .LVU318
 1263 002e 3146     		mov	r1, r6
 1264 0030 5220     		movs	r0, #82
 1265 0032 FFF7FEFF 		bl	SD_SendCmd
 1266              	.LVL122:
 1267              		.loc 1 375 6 discriminator 1 view .LVU319
 1268 0036 68B9     		cbnz	r0, .L124
 1269              	.L126:
 376:Core/Src/fatfs_sd.c **** 		{
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 34


 377:Core/Src/fatfs_sd.c **** 			do {
 1270              		.loc 1 377 4 is_stmt 1 view .LVU320
 378:Core/Src/fatfs_sd.c **** 				if (!SD_RxDataBlock(buff, 512)) break;
 1271              		.loc 1 378 5 view .LVU321
 1272              		.loc 1 378 10 is_stmt 0 view .LVU322
 1273 0038 4FF40071 		mov	r1, #512
 1274 003c 2846     		mov	r0, r5
 1275 003e FFF7FEFF 		bl	SD_RxDataBlock
 1276              	.LVL123:
 1277              		.loc 1 378 8 discriminator 1 view .LVU323
 1278 0042 18B1     		cbz	r0, .L125
 379:Core/Src/fatfs_sd.c **** 				buff += 512;
 1279              		.loc 1 379 5 is_stmt 1 view .LVU324
 1280              		.loc 1 379 10 is_stmt 0 view .LVU325
 1281 0044 05F50075 		add	r5, r5, #512
 1282              	.LVL124:
 380:Core/Src/fatfs_sd.c **** 			} while (--count);
 1283              		.loc 1 380 13 is_stmt 1 view .LVU326
 1284              		.loc 1 380 13 is_stmt 0 view .LVU327
 1285 0048 013C     		subs	r4, r4, #1
 1286              	.LVL125:
 1287              		.loc 1 380 13 view .LVU328
 1288 004a F5D1     		bne	.L126
 1289              	.L125:
 381:Core/Src/fatfs_sd.c **** 
 382:Core/Src/fatfs_sd.c **** 			/* STOP_TRANSMISSION */
 383:Core/Src/fatfs_sd.c **** 			SD_SendCmd(CMD12, 0);
 1290              		.loc 1 383 4 is_stmt 1 view .LVU329
 1291 004c 0021     		movs	r1, #0
 1292 004e 4C20     		movs	r0, #76
 1293 0050 FFF7FEFF 		bl	SD_SendCmd
 1294              	.LVL126:
 1295              	.L124:
 384:Core/Src/fatfs_sd.c **** 		}
 385:Core/Src/fatfs_sd.c **** 	}
 386:Core/Src/fatfs_sd.c **** 
 387:Core/Src/fatfs_sd.c **** 	/* Idle */
 388:Core/Src/fatfs_sd.c **** 	DESELECT();
 1296              		.loc 1 388 2 view .LVU330
 1297 0054 FFF7FEFF 		bl	DESELECT
 1298              	.LVL127:
 389:Core/Src/fatfs_sd.c **** 	SPI_RxByte();
 1299              		.loc 1 389 2 view .LVU331
 1300 0058 FFF7FEFF 		bl	SPI_RxByte
 1301              	.LVL128:
 390:Core/Src/fatfs_sd.c **** 
 391:Core/Src/fatfs_sd.c **** 	return count ? RES_ERROR : RES_OK;
 1302              		.loc 1 391 2 view .LVU332
 1303              		.loc 1 391 27 is_stmt 0 view .LVU333
 1304 005c 201E     		subs	r0, r4, #0
 1305 005e 18BF     		it	ne
 1306 0060 0120     		movne	r0, #1
 1307              	.L121:
 392:Core/Src/fatfs_sd.c **** }
 1308              		.loc 1 392 1 view .LVU334
 1309 0062 70BD     		pop	{r4, r5, r6, pc}
 1310              	.LVL129:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 35


 1311              	.L135:
 370:Core/Src/fatfs_sd.c **** 	}
 1312              		.loc 1 370 3 is_stmt 1 view .LVU335
 370:Core/Src/fatfs_sd.c **** 	}
 1313              		.loc 1 370 8 is_stmt 0 view .LVU336
 1314 0064 3146     		mov	r1, r6
 1315 0066 5120     		movs	r0, #81
 1316 0068 FFF7FEFF 		bl	SD_SendCmd
 1317              	.LVL130:
 370:Core/Src/fatfs_sd.c **** 	}
 1318              		.loc 1 370 6 discriminator 1 view .LVU337
 1319 006c 0028     		cmp	r0, #0
 1320 006e F1D1     		bne	.L124
 370:Core/Src/fatfs_sd.c **** 	}
 1321              		.loc 1 370 43 discriminator 1 view .LVU338
 1322 0070 4FF40071 		mov	r1, #512
 1323 0074 2846     		mov	r0, r5
 1324 0076 FFF7FEFF 		bl	SD_RxDataBlock
 1325              	.LVL131:
 370:Core/Src/fatfs_sd.c **** 	}
 1326              		.loc 1 370 40 discriminator 1 view .LVU339
 1327 007a 0028     		cmp	r0, #0
 1328 007c EAD0     		beq	.L124
 370:Core/Src/fatfs_sd.c **** 	}
 1329              		.loc 1 370 76 discriminator 2 view .LVU340
 1330 007e 0024     		movs	r4, #0
 1331              	.LVL132:
 370:Core/Src/fatfs_sd.c **** 	}
 1332              		.loc 1 370 76 discriminator 2 view .LVU341
 1333 0080 E8E7     		b	.L124
 1334              	.LVL133:
 1335              	.L127:
 1336              		.cfi_def_cfa_offset 0
 1337              		.cfi_restore 4
 1338              		.cfi_restore 5
 1339              		.cfi_restore 6
 1340              		.cfi_restore 14
 357:Core/Src/fatfs_sd.c **** 
 1341              		.loc 1 357 29 discriminator 3 view .LVU342
 1342 0082 0420     		movs	r0, #4
 1343              	.LVL134:
 1344              		.loc 1 392 1 view .LVU343
 1345 0084 7047     		bx	lr
 1346              	.LVL135:
 1347              	.L128:
 1348              		.cfi_def_cfa_offset 16
 1349              		.cfi_offset 4, -16
 1350              		.cfi_offset 5, -12
 1351              		.cfi_offset 6, -8
 1352              		.cfi_offset 14, -4
 357:Core/Src/fatfs_sd.c **** 
 1353              		.loc 1 357 29 discriminator 3 view .LVU344
 1354 0086 0420     		movs	r0, #4
 1355              	.LVL136:
 357:Core/Src/fatfs_sd.c **** 
 1356              		.loc 1 357 29 discriminator 3 view .LVU345
 1357 0088 EBE7     		b	.L121
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 36


 1358              	.LVL137:
 1359              	.L129:
 360:Core/Src/fatfs_sd.c **** 
 1360              		.loc 1 360 32 discriminator 1 view .LVU346
 1361 008a 0320     		movs	r0, #3
 1362              	.LVL138:
 360:Core/Src/fatfs_sd.c **** 
 1363              		.loc 1 360 32 discriminator 1 view .LVU347
 1364 008c E9E7     		b	.L121
 1365              	.L137:
 1366 008e 00BF     		.align	2
 1367              	.L136:
 1368 0090 00000000 		.word	Stat
 1369 0094 00000000 		.word	CardType
 1370              		.cfi_endproc
 1371              	.LFE149:
 1373              		.section	.text.SD_disk_write,"ax",%progbits
 1374              		.align	1
 1375              		.global	SD_disk_write
 1376              		.syntax unified
 1377              		.thumb
 1378              		.thumb_func
 1380              	SD_disk_write:
 1381              	.LVL139:
 1382              	.LFB150:
 393:Core/Src/fatfs_sd.c **** 
 394:Core/Src/fatfs_sd.c **** /* write sector */
 395:Core/Src/fatfs_sd.c **** #if _USE_WRITE == 1
 396:Core/Src/fatfs_sd.c **** DRESULT SD_disk_write(BYTE pdrv, const BYTE* buff, DWORD sector, UINT count) 
 397:Core/Src/fatfs_sd.c **** {
 1383              		.loc 1 397 1 is_stmt 1 view -0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 0
 1386              		@ frame_needed = 0, uses_anonymous_args = 0
 398:Core/Src/fatfs_sd.c **** 	/* pdrv should be 0 */
 399:Core/Src/fatfs_sd.c **** 	if (pdrv || !count) return RES_PARERR;
 1387              		.loc 1 399 2 view .LVU349
 1388              		.loc 1 399 5 is_stmt 0 view .LVU350
 1389 0000 0028     		cmp	r0, #0
 1390 0002 52D1     		bne	.L146
 397:Core/Src/fatfs_sd.c **** 	/* pdrv should be 0 */
 1391              		.loc 1 397 1 view .LVU351
 1392 0004 70B5     		push	{r4, r5, r6, lr}
 1393              		.cfi_def_cfa_offset 16
 1394              		.cfi_offset 4, -16
 1395              		.cfi_offset 5, -12
 1396              		.cfi_offset 6, -8
 1397              		.cfi_offset 14, -4
 1398 0006 0D46     		mov	r5, r1
 1399 0008 1646     		mov	r6, r2
 1400 000a 1C46     		mov	r4, r3
 1401              		.loc 1 399 11 discriminator 2 view .LVU352
 1402 000c 002B     		cmp	r3, #0
 1403 000e 4ED0     		beq	.L147
 400:Core/Src/fatfs_sd.c **** 
 401:Core/Src/fatfs_sd.c **** 	/* no disk */
 402:Core/Src/fatfs_sd.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 37


 1404              		.loc 1 402 2 is_stmt 1 view .LVU353
 1405              		.loc 1 402 11 is_stmt 0 view .LVU354
 1406 0010 2A4B     		ldr	r3, .L158
 1407              	.LVL140:
 1408              		.loc 1 402 11 view .LVU355
 1409 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1410              		.loc 1 402 5 view .LVU356
 1411 0014 13F0010F 		tst	r3, #1
 1412 0018 4BD1     		bne	.L148
 403:Core/Src/fatfs_sd.c **** 
 404:Core/Src/fatfs_sd.c **** 	/* write protection */
 405:Core/Src/fatfs_sd.c **** 	if (Stat & STA_PROTECT) return RES_WRPRT;
 1413              		.loc 1 405 2 is_stmt 1 view .LVU357
 1414              		.loc 1 405 11 is_stmt 0 view .LVU358
 1415 001a 284B     		ldr	r3, .L158
 1416 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1417              		.loc 1 405 5 view .LVU359
 1418 001e 13F0040F 		tst	r3, #4
 1419 0022 48D1     		bne	.L149
 406:Core/Src/fatfs_sd.c **** 
 407:Core/Src/fatfs_sd.c **** 	/* convert to byte address */
 408:Core/Src/fatfs_sd.c **** 	if (!(CardType & CT_SD2)) sector *= 512;
 1420              		.loc 1 408 2 is_stmt 1 view .LVU360
 1421              		.loc 1 408 17 is_stmt 0 view .LVU361
 1422 0024 264B     		ldr	r3, .L158+4
 1423 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1424              		.loc 1 408 5 view .LVU362
 1425 0028 13F0040F 		tst	r3, #4
 1426 002c 00D1     		bne	.L140
 1427              		.loc 1 408 28 is_stmt 1 discriminator 1 view .LVU363
 1428              		.loc 1 408 35 is_stmt 0 discriminator 1 view .LVU364
 1429 002e 5602     		lsls	r6, r2, #9
 1430              	.LVL141:
 1431              	.L140:
 409:Core/Src/fatfs_sd.c **** 
 410:Core/Src/fatfs_sd.c **** 	SELECT();
 1432              		.loc 1 410 2 is_stmt 1 view .LVU365
 1433 0030 FFF7FEFF 		bl	SELECT
 1434              	.LVL142:
 411:Core/Src/fatfs_sd.c **** 
 412:Core/Src/fatfs_sd.c **** 	if (count == 1)
 1435              		.loc 1 412 2 view .LVU366
 1436              		.loc 1 412 5 is_stmt 0 view .LVU367
 1437 0034 012C     		cmp	r4, #1
 1438 0036 1FD0     		beq	.L156
 413:Core/Src/fatfs_sd.c **** 	{
 414:Core/Src/fatfs_sd.c **** 		/* WRITE_BLOCK */
 415:Core/Src/fatfs_sd.c **** 		if ((SD_SendCmd(CMD24, sector) == 0) && SD_TxDataBlock(buff, 0xFE))
 416:Core/Src/fatfs_sd.c **** 			count = 0;
 417:Core/Src/fatfs_sd.c **** 	}
 418:Core/Src/fatfs_sd.c **** 	else
 419:Core/Src/fatfs_sd.c **** 	{
 420:Core/Src/fatfs_sd.c **** 		/* WRITE_MULTIPLE_BLOCK */
 421:Core/Src/fatfs_sd.c **** 		if (CardType & CT_SD1)
 1439              		.loc 1 421 3 is_stmt 1 view .LVU368
 1440              		.loc 1 421 16 is_stmt 0 view .LVU369
 1441 0038 214B     		ldr	r3, .L158+4
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 38


 1442 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1443              		.loc 1 421 6 view .LVU370
 1444 003c 13F0020F 		tst	r3, #2
 1445 0040 28D1     		bne	.L157
 1446              	.L143:
 422:Core/Src/fatfs_sd.c **** 		{
 423:Core/Src/fatfs_sd.c **** 			SD_SendCmd(CMD55, 0);
 424:Core/Src/fatfs_sd.c **** 			SD_SendCmd(CMD23, count); /* ACMD23 */
 425:Core/Src/fatfs_sd.c **** 		}
 426:Core/Src/fatfs_sd.c **** 
 427:Core/Src/fatfs_sd.c **** 		if (SD_SendCmd(CMD25, sector) == 0)
 1447              		.loc 1 427 3 is_stmt 1 view .LVU371
 1448              		.loc 1 427 7 is_stmt 0 view .LVU372
 1449 0042 3146     		mov	r1, r6
 1450 0044 5920     		movs	r0, #89
 1451 0046 FFF7FEFF 		bl	SD_SendCmd
 1452              	.LVL143:
 1453              		.loc 1 427 6 discriminator 1 view .LVU373
 1454 004a 68B9     		cbnz	r0, .L142
 1455              	.L145:
 428:Core/Src/fatfs_sd.c **** 		{
 429:Core/Src/fatfs_sd.c **** 			do {
 1456              		.loc 1 429 4 is_stmt 1 view .LVU374
 430:Core/Src/fatfs_sd.c **** 				if(!SD_TxDataBlock(buff, 0xFC)) break;
 1457              		.loc 1 430 5 view .LVU375
 1458              		.loc 1 430 9 is_stmt 0 view .LVU376
 1459 004c FC21     		movs	r1, #252
 1460 004e 2846     		mov	r0, r5
 1461 0050 FFF7FEFF 		bl	SD_TxDataBlock
 1462              	.LVL144:
 1463              		.loc 1 430 7 discriminator 1 view .LVU377
 1464 0054 18B1     		cbz	r0, .L144
 431:Core/Src/fatfs_sd.c **** 				buff += 512;
 1465              		.loc 1 431 5 is_stmt 1 view .LVU378
 1466              		.loc 1 431 10 is_stmt 0 view .LVU379
 1467 0056 05F50075 		add	r5, r5, #512
 1468              	.LVL145:
 432:Core/Src/fatfs_sd.c **** 			} while (--count);
 1469              		.loc 1 432 13 is_stmt 1 view .LVU380
 1470              		.loc 1 432 13 is_stmt 0 view .LVU381
 1471 005a 013C     		subs	r4, r4, #1
 1472              	.LVL146:
 1473              		.loc 1 432 13 view .LVU382
 1474 005c F6D1     		bne	.L145
 1475              	.L144:
 433:Core/Src/fatfs_sd.c **** 
 434:Core/Src/fatfs_sd.c **** 			/* STOP_TRAN token */
 435:Core/Src/fatfs_sd.c **** 			if(!SD_TxDataBlock(0, 0xFD))
 1476              		.loc 1 435 4 is_stmt 1 view .LVU383
 1477              		.loc 1 435 8 is_stmt 0 view .LVU384
 1478 005e FD21     		movs	r1, #253
 1479 0060 0020     		movs	r0, #0
 1480 0062 FFF7FEFF 		bl	SD_TxDataBlock
 1481              	.LVL147:
 1482              		.loc 1 435 6 discriminator 1 view .LVU385
 1483 0066 F0B1     		cbz	r0, .L151
 1484              	.LVL148:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 39


 1485              	.L142:
 436:Core/Src/fatfs_sd.c **** 			{
 437:Core/Src/fatfs_sd.c **** 				count = 1;
 438:Core/Src/fatfs_sd.c **** 			}
 439:Core/Src/fatfs_sd.c **** 		}
 440:Core/Src/fatfs_sd.c **** 	}
 441:Core/Src/fatfs_sd.c **** 
 442:Core/Src/fatfs_sd.c **** 	/* Idle */
 443:Core/Src/fatfs_sd.c **** 	DESELECT();
 1486              		.loc 1 443 2 is_stmt 1 view .LVU386
 1487 0068 FFF7FEFF 		bl	DESELECT
 1488              	.LVL149:
 444:Core/Src/fatfs_sd.c **** 	SPI_RxByte();
 1489              		.loc 1 444 2 view .LVU387
 1490 006c FFF7FEFF 		bl	SPI_RxByte
 1491              	.LVL150:
 445:Core/Src/fatfs_sd.c **** 
 446:Core/Src/fatfs_sd.c **** 	return count ? RES_ERROR : RES_OK;
 1492              		.loc 1 446 2 view .LVU388
 1493              		.loc 1 446 27 is_stmt 0 view .LVU389
 1494 0070 201E     		subs	r0, r4, #0
 1495 0072 18BF     		it	ne
 1496 0074 0120     		movne	r0, #1
 1497              	.L139:
 447:Core/Src/fatfs_sd.c **** }
 1498              		.loc 1 447 1 view .LVU390
 1499 0076 70BD     		pop	{r4, r5, r6, pc}
 1500              	.LVL151:
 1501              	.L156:
 415:Core/Src/fatfs_sd.c **** 			count = 0;
 1502              		.loc 1 415 3 is_stmt 1 view .LVU391
 415:Core/Src/fatfs_sd.c **** 			count = 0;
 1503              		.loc 1 415 8 is_stmt 0 view .LVU392
 1504 0078 3146     		mov	r1, r6
 1505 007a 5820     		movs	r0, #88
 1506 007c FFF7FEFF 		bl	SD_SendCmd
 1507              	.LVL152:
 415:Core/Src/fatfs_sd.c **** 			count = 0;
 1508              		.loc 1 415 6 discriminator 1 view .LVU393
 1509 0080 0028     		cmp	r0, #0
 1510 0082 F1D1     		bne	.L142
 415:Core/Src/fatfs_sd.c **** 			count = 0;
 1511              		.loc 1 415 43 discriminator 1 view .LVU394
 1512 0084 FE21     		movs	r1, #254
 1513 0086 2846     		mov	r0, r5
 1514 0088 FFF7FEFF 		bl	SD_TxDataBlock
 1515              	.LVL153:
 415:Core/Src/fatfs_sd.c **** 			count = 0;
 1516              		.loc 1 415 40 discriminator 1 view .LVU395
 1517 008c 0028     		cmp	r0, #0
 1518 008e EBD0     		beq	.L142
 416:Core/Src/fatfs_sd.c **** 	}
 1519              		.loc 1 416 10 view .LVU396
 1520 0090 0024     		movs	r4, #0
 1521              	.LVL154:
 416:Core/Src/fatfs_sd.c **** 	}
 1522              		.loc 1 416 10 view .LVU397
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 40


 1523 0092 E9E7     		b	.L142
 1524              	.LVL155:
 1525              	.L157:
 423:Core/Src/fatfs_sd.c **** 			SD_SendCmd(CMD23, count); /* ACMD23 */
 1526              		.loc 1 423 4 is_stmt 1 view .LVU398
 1527 0094 0021     		movs	r1, #0
 1528 0096 7720     		movs	r0, #119
 1529 0098 FFF7FEFF 		bl	SD_SendCmd
 1530              	.LVL156:
 424:Core/Src/fatfs_sd.c **** 		}
 1531              		.loc 1 424 4 view .LVU399
 1532 009c 2146     		mov	r1, r4
 1533 009e 5720     		movs	r0, #87
 1534 00a0 FFF7FEFF 		bl	SD_SendCmd
 1535              	.LVL157:
 1536 00a4 CDE7     		b	.L143
 1537              	.L151:
 437:Core/Src/fatfs_sd.c **** 			}
 1538              		.loc 1 437 11 is_stmt 0 view .LVU400
 1539 00a6 0124     		movs	r4, #1
 1540              	.LVL158:
 437:Core/Src/fatfs_sd.c **** 			}
 1541              		.loc 1 437 11 view .LVU401
 1542 00a8 DEE7     		b	.L142
 1543              	.LVL159:
 1544              	.L146:
 1545              		.cfi_def_cfa_offset 0
 1546              		.cfi_restore 4
 1547              		.cfi_restore 5
 1548              		.cfi_restore 6
 1549              		.cfi_restore 14
 399:Core/Src/fatfs_sd.c **** 
 1550              		.loc 1 399 29 discriminator 3 view .LVU402
 1551 00aa 0420     		movs	r0, #4
 1552              	.LVL160:
 1553              		.loc 1 447 1 view .LVU403
 1554 00ac 7047     		bx	lr
 1555              	.LVL161:
 1556              	.L147:
 1557              		.cfi_def_cfa_offset 16
 1558              		.cfi_offset 4, -16
 1559              		.cfi_offset 5, -12
 1560              		.cfi_offset 6, -8
 1561              		.cfi_offset 14, -4
 399:Core/Src/fatfs_sd.c **** 
 1562              		.loc 1 399 29 discriminator 3 view .LVU404
 1563 00ae 0420     		movs	r0, #4
 1564              	.LVL162:
 399:Core/Src/fatfs_sd.c **** 
 1565              		.loc 1 399 29 discriminator 3 view .LVU405
 1566 00b0 E1E7     		b	.L139
 1567              	.LVL163:
 1568              	.L148:
 402:Core/Src/fatfs_sd.c **** 
 1569              		.loc 1 402 32 discriminator 1 view .LVU406
 1570 00b2 0320     		movs	r0, #3
 1571              	.LVL164:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 41


 402:Core/Src/fatfs_sd.c **** 
 1572              		.loc 1 402 32 discriminator 1 view .LVU407
 1573 00b4 DFE7     		b	.L139
 1574              	.LVL165:
 1575              	.L149:
 405:Core/Src/fatfs_sd.c **** 
 1576              		.loc 1 405 33 discriminator 1 view .LVU408
 1577 00b6 0220     		movs	r0, #2
 1578              	.LVL166:
 405:Core/Src/fatfs_sd.c **** 
 1579              		.loc 1 405 33 discriminator 1 view .LVU409
 1580 00b8 DDE7     		b	.L139
 1581              	.L159:
 1582 00ba 00BF     		.align	2
 1583              	.L158:
 1584 00bc 00000000 		.word	Stat
 1585 00c0 00000000 		.word	CardType
 1586              		.cfi_endproc
 1587              	.LFE150:
 1589              		.section	.text.SD_disk_ioctl,"ax",%progbits
 1590              		.align	1
 1591              		.global	SD_disk_ioctl
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
 1596              	SD_disk_ioctl:
 1597              	.LVL167:
 1598              	.LFB151:
 448:Core/Src/fatfs_sd.c **** #endif /* _USE_WRITE */
 449:Core/Src/fatfs_sd.c **** 
 450:Core/Src/fatfs_sd.c **** /* ioctl */
 451:Core/Src/fatfs_sd.c **** DRESULT SD_disk_ioctl(BYTE drv, BYTE ctrl, void *buff) 
 452:Core/Src/fatfs_sd.c **** {
 1599              		.loc 1 452 1 is_stmt 1 view -0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 16
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		.loc 1 452 1 is_stmt 0 view .LVU411
 1604 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1605              		.cfi_def_cfa_offset 20
 1606              		.cfi_offset 4, -20
 1607              		.cfi_offset 5, -16
 1608              		.cfi_offset 6, -12
 1609              		.cfi_offset 7, -8
 1610              		.cfi_offset 14, -4
 1611 0002 85B0     		sub	sp, sp, #20
 1612              		.cfi_def_cfa_offset 40
 453:Core/Src/fatfs_sd.c **** 	DRESULT res;
 1613              		.loc 1 453 2 is_stmt 1 view .LVU412
 454:Core/Src/fatfs_sd.c **** 	uint8_t n, csd[16], *ptr = buff;
 1614              		.loc 1 454 2 view .LVU413
 1615              	.LVL168:
 455:Core/Src/fatfs_sd.c **** 	WORD csize;
 1616              		.loc 1 455 2 view .LVU414
 456:Core/Src/fatfs_sd.c **** 
 457:Core/Src/fatfs_sd.c **** 	/* pdrv should be 0 */
 458:Core/Src/fatfs_sd.c **** 	if (drv) return RES_PARERR;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 42


 1617              		.loc 1 458 2 view .LVU415
 1618              		.loc 1 458 5 is_stmt 0 view .LVU416
 1619 0004 0028     		cmp	r0, #0
 1620 0006 40F0B280 		bne	.L176
 1621 000a 0D46     		mov	r5, r1
 1622 000c 1646     		mov	r6, r2
 1623 000e 0746     		mov	r7, r0
 459:Core/Src/fatfs_sd.c **** 	res = RES_ERROR;
 1624              		.loc 1 459 2 is_stmt 1 view .LVU417
 1625              	.LVL169:
 460:Core/Src/fatfs_sd.c **** 
 461:Core/Src/fatfs_sd.c **** 	if (ctrl == CTRL_POWER)
 1626              		.loc 1 461 2 view .LVU418
 1627              		.loc 1 461 5 is_stmt 0 view .LVU419
 1628 0010 0529     		cmp	r1, #5
 1629 0012 13D0     		beq	.L186
 462:Core/Src/fatfs_sd.c **** 	{
 463:Core/Src/fatfs_sd.c **** 		switch (*ptr)
 464:Core/Src/fatfs_sd.c **** 		{
 465:Core/Src/fatfs_sd.c **** 		case 0:
 466:Core/Src/fatfs_sd.c **** 			SD_PowerOff();		/* Power Off */
 467:Core/Src/fatfs_sd.c **** 			res = RES_OK;
 468:Core/Src/fatfs_sd.c **** 			break;
 469:Core/Src/fatfs_sd.c **** 		case 1:
 470:Core/Src/fatfs_sd.c **** 			SD_PowerOn();		/* Power On */
 471:Core/Src/fatfs_sd.c **** 			res = RES_OK;
 472:Core/Src/fatfs_sd.c **** 			break;
 473:Core/Src/fatfs_sd.c **** 		case 2:
 474:Core/Src/fatfs_sd.c **** 			*(ptr + 1) = SD_CheckPower();
 475:Core/Src/fatfs_sd.c **** 			res = RES_OK;		/* Power Check */
 476:Core/Src/fatfs_sd.c **** 			break;
 477:Core/Src/fatfs_sd.c **** 		default:
 478:Core/Src/fatfs_sd.c **** 			res = RES_PARERR;
 479:Core/Src/fatfs_sd.c **** 		}
 480:Core/Src/fatfs_sd.c **** 	}
 481:Core/Src/fatfs_sd.c **** 	else
 482:Core/Src/fatfs_sd.c **** 	{
 483:Core/Src/fatfs_sd.c **** 		/* no disk */
 484:Core/Src/fatfs_sd.c **** 		if (Stat & STA_NOINIT) return RES_NOTRDY;
 1630              		.loc 1 484 3 is_stmt 1 view .LVU420
 1631              		.loc 1 484 12 is_stmt 0 view .LVU421
 1632 0014 594B     		ldr	r3, .L191
 1633 0016 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1634              		.loc 1 484 6 view .LVU422
 1635 0018 14F00104 		ands	r4, r4, #1
 1636 001c 40F0AB80 		bne	.L178
 485:Core/Src/fatfs_sd.c **** 
 486:Core/Src/fatfs_sd.c **** 		SELECT();
 1637              		.loc 1 486 3 is_stmt 1 view .LVU423
 1638 0020 FFF7FEFF 		bl	SELECT
 1639              	.LVL170:
 487:Core/Src/fatfs_sd.c **** 
 488:Core/Src/fatfs_sd.c **** 		switch (ctrl)
 1640              		.loc 1 488 3 view .LVU424
 1641 0024 0D2D     		cmp	r5, #13
 1642 0026 00F29680 		bhi	.L179
 1643 002a DFE805F0 		tbb	[pc, r5]
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 43


 1644              	.L167:
 1645 002e 5E       		.byte	(.L172-.L167)/2
 1646 002f 1B       		.byte	(.L171-.L167)/2
 1647 0030 5A       		.byte	(.L170-.L167)/2
 1648 0031 94       		.byte	(.L179-.L167)/2
 1649 0032 94       		.byte	(.L179-.L167)/2
 1650 0033 94       		.byte	(.L179-.L167)/2
 1651 0034 94       		.byte	(.L179-.L167)/2
 1652 0035 94       		.byte	(.L179-.L167)/2
 1653 0036 94       		.byte	(.L179-.L167)/2
 1654 0037 94       		.byte	(.L179-.L167)/2
 1655 0038 94       		.byte	(.L179-.L167)/2
 1656 0039 64       		.byte	(.L169-.L167)/2
 1657 003a 73       		.byte	(.L168-.L167)/2
 1658 003b 82       		.byte	(.L166-.L167)/2
 1659              	.LVL171:
 1660              		.p2align 1
 1661              	.L186:
 463:Core/Src/fatfs_sd.c **** 		{
 1662              		.loc 1 463 3 view .LVU425
 463:Core/Src/fatfs_sd.c **** 		{
 1663              		.loc 1 463 11 is_stmt 0 view .LVU426
 1664 003c 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 463:Core/Src/fatfs_sd.c **** 		{
 1665              		.loc 1 463 3 view .LVU427
 1666 003e 012C     		cmp	r4, #1
 1667 0040 07D0     		beq	.L163
 1668 0042 022C     		cmp	r4, #2
 1669 0044 09D0     		beq	.L164
 1670 0046 002C     		cmp	r4, #0
 1671 0048 40F09380 		bne	.L177
 466:Core/Src/fatfs_sd.c **** 			res = RES_OK;
 1672              		.loc 1 466 4 is_stmt 1 view .LVU428
 1673 004c FFF7FEFF 		bl	SD_PowerOff
 1674              	.LVL172:
 467:Core/Src/fatfs_sd.c **** 			break;
 1675              		.loc 1 467 4 view .LVU429
 468:Core/Src/fatfs_sd.c **** 		case 1:
 1676              		.loc 1 468 4 view .LVU430
 1677 0050 86E0     		b	.L161
 1678              	.LVL173:
 1679              	.L163:
 470:Core/Src/fatfs_sd.c **** 			res = RES_OK;
 1680              		.loc 1 470 4 view .LVU431
 1681 0052 FFF7FEFF 		bl	SD_PowerOn
 1682              	.LVL174:
 471:Core/Src/fatfs_sd.c **** 			break;
 1683              		.loc 1 471 4 view .LVU432
 472:Core/Src/fatfs_sd.c **** 		case 2:
 1684              		.loc 1 472 4 view .LVU433
 471:Core/Src/fatfs_sd.c **** 			break;
 1685              		.loc 1 471 8 is_stmt 0 view .LVU434
 1686 0056 3C46     		mov	r4, r7
 472:Core/Src/fatfs_sd.c **** 		case 2:
 1687              		.loc 1 472 4 view .LVU435
 1688 0058 82E0     		b	.L161
 1689              	.LVL175:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 44


 1690              	.L164:
 474:Core/Src/fatfs_sd.c **** 			res = RES_OK;		/* Power Check */
 1691              		.loc 1 474 4 is_stmt 1 view .LVU436
 474:Core/Src/fatfs_sd.c **** 			res = RES_OK;		/* Power Check */
 1692              		.loc 1 474 17 is_stmt 0 view .LVU437
 1693 005a FFF7FEFF 		bl	SD_CheckPower
 1694              	.LVL176:
 474:Core/Src/fatfs_sd.c **** 			res = RES_OK;		/* Power Check */
 1695              		.loc 1 474 15 discriminator 1 view .LVU438
 1696 005e 7070     		strb	r0, [r6, #1]
 475:Core/Src/fatfs_sd.c **** 			break;
 1697              		.loc 1 475 4 is_stmt 1 view .LVU439
 1698              	.LVL177:
 476:Core/Src/fatfs_sd.c **** 		default:
 1699              		.loc 1 476 4 view .LVU440
 475:Core/Src/fatfs_sd.c **** 			break;
 1700              		.loc 1 475 8 is_stmt 0 view .LVU441
 1701 0060 3C46     		mov	r4, r7
 476:Core/Src/fatfs_sd.c **** 		default:
 1702              		.loc 1 476 4 view .LVU442
 1703 0062 7DE0     		b	.L161
 1704              	.LVL178:
 1705              	.L171:
 489:Core/Src/fatfs_sd.c **** 		{
 490:Core/Src/fatfs_sd.c **** 		case GET_SECTOR_COUNT:
 491:Core/Src/fatfs_sd.c **** 			/* SEND_CSD */
 492:Core/Src/fatfs_sd.c **** 			if ((SD_SendCmd(CMD9, 0) == 0) && SD_RxDataBlock(csd, 16))
 1706              		.loc 1 492 4 is_stmt 1 view .LVU443
 1707              		.loc 1 492 9 is_stmt 0 view .LVU444
 1708 0064 0021     		movs	r1, #0
 1709 0066 4920     		movs	r0, #73
 1710 0068 FFF7FEFF 		bl	SD_SendCmd
 1711              	.LVL179:
 1712              		.loc 1 492 7 discriminator 1 view .LVU445
 1713 006c 0446     		mov	r4, r0
 1714 006e 08B1     		cbz	r0, .L187
 459:Core/Src/fatfs_sd.c **** 
 1715              		.loc 1 459 6 view .LVU446
 1716 0070 2C46     		mov	r4, r5
 1717 0072 71E0     		b	.L165
 1718              	.L187:
 1719              		.loc 1 492 38 discriminator 1 view .LVU447
 1720 0074 1021     		movs	r1, #16
 1721 0076 6846     		mov	r0, sp
 1722 0078 FFF7FEFF 		bl	SD_RxDataBlock
 1723              	.LVL180:
 1724              		.loc 1 492 35 discriminator 1 view .LVU448
 1725 007c 0028     		cmp	r0, #0
 1726 007e 72D0     		beq	.L181
 493:Core/Src/fatfs_sd.c **** 			{
 494:Core/Src/fatfs_sd.c **** 				if ((csd[0] >> 6) == 1)
 1727              		.loc 1 494 5 is_stmt 1 view .LVU449
 1728              		.loc 1 494 13 is_stmt 0 view .LVU450
 1729 0080 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 1730              		.loc 1 494 23 view .LVU451
 1731 0084 9B09     		lsrs	r3, r3, #6
 1732              		.loc 1 494 8 view .LVU452
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 45


 1733 0086 012B     		cmp	r3, #1
 1734 0088 1FD0     		beq	.L188
 495:Core/Src/fatfs_sd.c **** 				{
 496:Core/Src/fatfs_sd.c **** 					/* SDC V2 */
 497:Core/Src/fatfs_sd.c **** 					csize = csd[9] + ((WORD) csd[8] << 8) + 1;
 498:Core/Src/fatfs_sd.c **** 					*(DWORD*) buff = (DWORD) csize << 10;
 499:Core/Src/fatfs_sd.c **** 				}
 500:Core/Src/fatfs_sd.c **** 				else
 501:Core/Src/fatfs_sd.c **** 				{
 502:Core/Src/fatfs_sd.c **** 					/* MMC or SDC V1 */
 503:Core/Src/fatfs_sd.c **** 					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
 1735              		.loc 1 503 6 is_stmt 1 view .LVU453
 1736              		.loc 1 503 14 is_stmt 0 view .LVU454
 1737 008a 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 1738              		.loc 1 503 18 view .LVU455
 1739 008e 02F00F02 		and	r2, r2, #15
 1740              		.loc 1 503 31 view .LVU456
 1741 0092 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
 1742              		.loc 1 503 24 view .LVU457
 1743 0096 02EBD312 		add	r2, r2, r3, lsr #7
 1744              		.loc 1 503 56 view .LVU458
 1745 009a 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 1746              		.loc 1 503 65 view .LVU459
 1747 009e 5B00     		lsls	r3, r3, #1
 1748 00a0 03F00603 		and	r3, r3, #6
 1749              		.loc 1 503 49 view .LVU460
 1750 00a4 1A44     		add	r2, r2, r3
 1751              	.LVL181:
 504:Core/Src/fatfs_sd.c **** 					csize = (csd[8] >> 6) + ((WORD) csd[7] << 2) + ((WORD) (csd[6] & 3) << 10) + 1;
 1752              		.loc 1 504 6 is_stmt 1 view .LVU461
 1753              		.loc 1 504 18 is_stmt 0 view .LVU462
 1754 00a6 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 1755              		.loc 1 504 41 view .LVU463
 1756 00aa 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1757              		.loc 1 504 28 view .LVU464
 1758 00ae 9B09     		lsrs	r3, r3, #6
 1759 00b0 03EB8103 		add	r3, r3, r1, lsl #2
 1760              		.loc 1 504 65 view .LVU465
 1761 00b4 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 1762              		.loc 1 504 74 view .LVU466
 1763 00b8 8902     		lsls	r1, r1, #10
 1764 00ba 01F44061 		and	r1, r1, #3072
 1765              		.loc 1 504 51 view .LVU467
 1766 00be 0B44     		add	r3, r3, r1
 1767              		.loc 1 504 12 view .LVU468
 1768 00c0 0133     		adds	r3, r3, #1
 1769              	.LVL182:
 505:Core/Src/fatfs_sd.c **** 					*(DWORD*) buff = (DWORD) csize << (n - 9);
 1770              		.loc 1 505 6 is_stmt 1 view .LVU469
 1771              		.loc 1 505 43 is_stmt 0 view .LVU470
 1772 00c2 073A     		subs	r2, r2, #7
 1773              	.LVL183:
 1774              		.loc 1 505 37 view .LVU471
 1775 00c4 9340     		lsls	r3, r3, r2
 1776              	.LVL184:
 1777              		.loc 1 505 21 view .LVU472
 1778 00c6 3360     		str	r3, [r6]
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 46


 1779              	.LVL185:
 1780              		.loc 1 505 21 view .LVU473
 1781 00c8 46E0     		b	.L165
 1782              	.LVL186:
 1783              	.L188:
 497:Core/Src/fatfs_sd.c **** 					*(DWORD*) buff = (DWORD) csize << 10;
 1784              		.loc 1 497 6 is_stmt 1 view .LVU474
 497:Core/Src/fatfs_sd.c **** 					*(DWORD*) buff = (DWORD) csize << 10;
 1785              		.loc 1 497 17 is_stmt 0 view .LVU475
 1786 00ca 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 497:Core/Src/fatfs_sd.c **** 					*(DWORD*) buff = (DWORD) csize << 10;
 1787              		.loc 1 497 34 view .LVU476
 1788 00ce 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 497:Core/Src/fatfs_sd.c **** 					*(DWORD*) buff = (DWORD) csize << 10;
 1789              		.loc 1 497 21 view .LVU477
 1790 00d2 03EB0223 		add	r3, r3, r2, lsl #8
 1791 00d6 9BB2     		uxth	r3, r3
 497:Core/Src/fatfs_sd.c **** 					*(DWORD*) buff = (DWORD) csize << 10;
 1792              		.loc 1 497 12 view .LVU478
 1793 00d8 0133     		adds	r3, r3, #1
 1794 00da 9BB2     		uxth	r3, r3
 1795              	.LVL187:
 498:Core/Src/fatfs_sd.c **** 				}
 1796              		.loc 1 498 6 is_stmt 1 view .LVU479
 498:Core/Src/fatfs_sd.c **** 				}
 1797              		.loc 1 498 37 is_stmt 0 view .LVU480
 1798 00dc 9B02     		lsls	r3, r3, #10
 1799              	.LVL188:
 498:Core/Src/fatfs_sd.c **** 				}
 1800              		.loc 1 498 21 view .LVU481
 1801 00de 3360     		str	r3, [r6]
 1802              	.LVL189:
 498:Core/Src/fatfs_sd.c **** 				}
 1803              		.loc 1 498 21 view .LVU482
 1804 00e0 3AE0     		b	.L165
 1805              	.LVL190:
 1806              	.L170:
 506:Core/Src/fatfs_sd.c **** 				}
 507:Core/Src/fatfs_sd.c **** 				res = RES_OK;
 508:Core/Src/fatfs_sd.c **** 			}
 509:Core/Src/fatfs_sd.c **** 			break;
 510:Core/Src/fatfs_sd.c **** 		case GET_SECTOR_SIZE:
 511:Core/Src/fatfs_sd.c **** 			*(WORD*) buff = 512;
 1807              		.loc 1 511 4 is_stmt 1 view .LVU483
 1808              		.loc 1 511 18 is_stmt 0 view .LVU484
 1809 00e2 4FF40073 		mov	r3, #512
 1810 00e6 3380     		strh	r3, [r6]	@ movhi
 512:Core/Src/fatfs_sd.c **** 			res = RES_OK;
 1811              		.loc 1 512 4 is_stmt 1 view .LVU485
 1812              	.LVL191:
 513:Core/Src/fatfs_sd.c **** 			break;
 1813              		.loc 1 513 4 view .LVU486
 1814 00e8 36E0     		b	.L165
 1815              	.LVL192:
 1816              	.L172:
 514:Core/Src/fatfs_sd.c **** 		case CTRL_SYNC:
 515:Core/Src/fatfs_sd.c **** 			if (SD_ReadyWait() == 0xFF) res = RES_OK;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 47


 1817              		.loc 1 515 4 view .LVU487
 1818              		.loc 1 515 8 is_stmt 0 view .LVU488
 1819 00ea FFF7FEFF 		bl	SD_ReadyWait
 1820              	.LVL193:
 1821              		.loc 1 515 7 discriminator 1 view .LVU489
 1822 00ee FF28     		cmp	r0, #255
 1823 00f0 3BD0     		beq	.L182
 459:Core/Src/fatfs_sd.c **** 
 1824              		.loc 1 459 6 view .LVU490
 1825 00f2 0124     		movs	r4, #1
 1826 00f4 30E0     		b	.L165
 1827              	.L169:
 516:Core/Src/fatfs_sd.c **** 			break;
 517:Core/Src/fatfs_sd.c **** 		case MMC_GET_CSD:
 518:Core/Src/fatfs_sd.c **** 			/* SEND_CSD */
 519:Core/Src/fatfs_sd.c **** 			if (SD_SendCmd(CMD9, 0) == 0 && SD_RxDataBlock(ptr, 16)) res = RES_OK;
 1828              		.loc 1 519 4 is_stmt 1 view .LVU491
 1829              		.loc 1 519 8 is_stmt 0 view .LVU492
 1830 00f6 0021     		movs	r1, #0
 1831 00f8 4920     		movs	r0, #73
 1832 00fa FFF7FEFF 		bl	SD_SendCmd
 1833              	.LVL194:
 1834              		.loc 1 519 7 discriminator 1 view .LVU493
 1835 00fe 0446     		mov	r4, r0
 1836 0100 08B1     		cbz	r0, .L189
 459:Core/Src/fatfs_sd.c **** 
 1837              		.loc 1 459 6 view .LVU494
 1838 0102 0124     		movs	r4, #1
 1839 0104 28E0     		b	.L165
 1840              	.L189:
 1841              		.loc 1 519 36 discriminator 1 view .LVU495
 1842 0106 1021     		movs	r1, #16
 1843 0108 3046     		mov	r0, r6
 1844 010a FFF7FEFF 		bl	SD_RxDataBlock
 1845              	.LVL195:
 1846              		.loc 1 519 33 discriminator 1 view .LVU496
 1847 010e 18BB     		cbnz	r0, .L165
 459:Core/Src/fatfs_sd.c **** 
 1848              		.loc 1 459 6 view .LVU497
 1849 0110 0124     		movs	r4, #1
 1850 0112 21E0     		b	.L165
 1851              	.L168:
 520:Core/Src/fatfs_sd.c **** 			break;
 521:Core/Src/fatfs_sd.c **** 		case MMC_GET_CID:
 522:Core/Src/fatfs_sd.c **** 			/* SEND_CID */
 523:Core/Src/fatfs_sd.c **** 			if (SD_SendCmd(CMD10, 0) == 0 && SD_RxDataBlock(ptr, 16)) res = RES_OK;
 1852              		.loc 1 523 4 is_stmt 1 view .LVU498
 1853              		.loc 1 523 8 is_stmt 0 view .LVU499
 1854 0114 0021     		movs	r1, #0
 1855 0116 4A20     		movs	r0, #74
 1856 0118 FFF7FEFF 		bl	SD_SendCmd
 1857              	.LVL196:
 1858              		.loc 1 523 7 discriminator 1 view .LVU500
 1859 011c 0446     		mov	r4, r0
 1860 011e 08B1     		cbz	r0, .L190
 459:Core/Src/fatfs_sd.c **** 
 1861              		.loc 1 459 6 view .LVU501
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 48


 1862 0120 0124     		movs	r4, #1
 1863 0122 19E0     		b	.L165
 1864              	.L190:
 1865              		.loc 1 523 37 discriminator 1 view .LVU502
 1866 0124 1021     		movs	r1, #16
 1867 0126 3046     		mov	r0, r6
 1868 0128 FFF7FEFF 		bl	SD_RxDataBlock
 1869              	.LVL197:
 1870              		.loc 1 523 34 discriminator 1 view .LVU503
 1871 012c A0B9     		cbnz	r0, .L165
 459:Core/Src/fatfs_sd.c **** 
 1872              		.loc 1 459 6 view .LVU504
 1873 012e 0124     		movs	r4, #1
 1874 0130 12E0     		b	.L165
 1875              	.L166:
 524:Core/Src/fatfs_sd.c **** 			break;
 525:Core/Src/fatfs_sd.c **** 		case MMC_GET_OCR:
 526:Core/Src/fatfs_sd.c **** 			/* READ_OCR */
 527:Core/Src/fatfs_sd.c **** 			if (SD_SendCmd(CMD58, 0) == 0)
 1876              		.loc 1 527 4 is_stmt 1 view .LVU505
 1877              		.loc 1 527 8 is_stmt 0 view .LVU506
 1878 0132 0021     		movs	r1, #0
 1879 0134 7A20     		movs	r0, #122
 1880 0136 FFF7FEFF 		bl	SD_SendCmd
 1881              	.LVL198:
 1882              		.loc 1 527 7 discriminator 1 view .LVU507
 1883 013a 0446     		mov	r4, r0
 1884 013c 38B1     		cbz	r0, .L174
 528:Core/Src/fatfs_sd.c **** 			{
 529:Core/Src/fatfs_sd.c **** 				for (n = 0; n < 4; n++)
 530:Core/Src/fatfs_sd.c **** 				{
 531:Core/Src/fatfs_sd.c **** 					*ptr++ = SPI_RxByte();
 532:Core/Src/fatfs_sd.c **** 				}
 533:Core/Src/fatfs_sd.c **** 				res = RES_OK;
 534:Core/Src/fatfs_sd.c **** 			}
 535:Core/Src/fatfs_sd.c **** 		default:
 536:Core/Src/fatfs_sd.c **** 			res = RES_PARERR;
 1885              		.loc 1 536 8 view .LVU508
 1886 013e 0424     		movs	r4, #4
 1887 0140 0AE0     		b	.L165
 1888              	.LVL199:
 1889              	.L175:
 531:Core/Src/fatfs_sd.c **** 				}
 1890              		.loc 1 531 6 is_stmt 1 view .LVU509
 531:Core/Src/fatfs_sd.c **** 				}
 1891              		.loc 1 531 15 is_stmt 0 view .LVU510
 1892 0142 FFF7FEFF 		bl	SPI_RxByte
 1893              	.LVL200:
 531:Core/Src/fatfs_sd.c **** 				}
 1894              		.loc 1 531 13 discriminator 1 view .LVU511
 1895 0146 06F8010B 		strb	r0, [r6], #1
 1896              	.LVL201:
 529:Core/Src/fatfs_sd.c **** 				{
 1897              		.loc 1 529 25 is_stmt 1 discriminator 3 view .LVU512
 1898 014a 0134     		adds	r4, r4, #1
 1899              	.LVL202:
 529:Core/Src/fatfs_sd.c **** 				{
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 49


 1900              		.loc 1 529 25 is_stmt 0 discriminator 3 view .LVU513
 1901 014c E4B2     		uxtb	r4, r4
 1902              	.LVL203:
 1903              	.L174:
 529:Core/Src/fatfs_sd.c **** 				{
 1904              		.loc 1 529 19 is_stmt 1 discriminator 1 view .LVU514
 1905 014e 032C     		cmp	r4, #3
 1906 0150 F7D9     		bls	.L175
 1907              		.loc 1 536 8 is_stmt 0 view .LVU515
 1908 0152 0424     		movs	r4, #4
 1909              	.LVL204:
 1910              		.loc 1 536 8 view .LVU516
 1911 0154 00E0     		b	.L165
 1912              	.LVL205:
 1913              	.L179:
 488:Core/Src/fatfs_sd.c **** 		{
 1914              		.loc 1 488 3 view .LVU517
 1915 0156 0424     		movs	r4, #4
 1916              	.LVL206:
 1917              	.L165:
 537:Core/Src/fatfs_sd.c **** 		}
 538:Core/Src/fatfs_sd.c **** 
 539:Core/Src/fatfs_sd.c **** 		DESELECT();
 1918              		.loc 1 539 3 is_stmt 1 view .LVU518
 1919 0158 FFF7FEFF 		bl	DESELECT
 1920              	.LVL207:
 540:Core/Src/fatfs_sd.c **** 		SPI_RxByte();
 1921              		.loc 1 540 3 view .LVU519
 1922 015c FFF7FEFF 		bl	SPI_RxByte
 1923              	.LVL208:
 1924              	.L161:
 541:Core/Src/fatfs_sd.c **** 	}
 542:Core/Src/fatfs_sd.c **** 
 543:Core/Src/fatfs_sd.c **** 	return res;
 544:Core/Src/fatfs_sd.c **** }
 1925              		.loc 1 544 1 is_stmt 0 view .LVU520
 1926 0160 2046     		mov	r0, r4
 1927 0162 05B0     		add	sp, sp, #20
 1928              		.cfi_remember_state
 1929              		.cfi_def_cfa_offset 20
 1930              		@ sp needed
 1931 0164 F0BD     		pop	{r4, r5, r6, r7, pc}
 1932              	.LVL209:
 1933              	.L181:
 1934              		.cfi_restore_state
 459:Core/Src/fatfs_sd.c **** 
 1935              		.loc 1 459 6 view .LVU521
 1936 0166 2C46     		mov	r4, r5
 1937 0168 F6E7     		b	.L165
 1938              	.L182:
 515:Core/Src/fatfs_sd.c **** 			break;
 1939              		.loc 1 515 36 discriminator 1 view .LVU522
 1940 016a 2C46     		mov	r4, r5
 1941 016c F4E7     		b	.L165
 1942              	.LVL210:
 1943              	.L176:
 458:Core/Src/fatfs_sd.c **** 	res = RES_ERROR;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 50


 1944              		.loc 1 458 18 discriminator 1 view .LVU523
 1945 016e 0424     		movs	r4, #4
 1946 0170 F6E7     		b	.L161
 1947              	.LVL211:
 1948              	.L177:
 463:Core/Src/fatfs_sd.c **** 		{
 1949              		.loc 1 463 3 view .LVU524
 1950 0172 0424     		movs	r4, #4
 1951 0174 F4E7     		b	.L161
 1952              	.L178:
 484:Core/Src/fatfs_sd.c **** 
 1953              		.loc 1 484 33 discriminator 1 view .LVU525
 1954 0176 0324     		movs	r4, #3
 1955 0178 F2E7     		b	.L161
 1956              	.L192:
 1957 017a 00BF     		.align	2
 1958              	.L191:
 1959 017c 00000000 		.word	Stat
 1960              		.cfi_endproc
 1961              	.LFE151:
 1963              		.section	.bss.PowerFlag,"aw",%nobits
 1966              	PowerFlag:
 1967 0000 00       		.space	1
 1968              		.section	.bss.CardType,"aw",%nobits
 1971              	CardType:
 1972 0000 00       		.space	1
 1973              		.section	.data.Stat,"aw"
 1976              	Stat:
 1977 0000 01       		.byte	1
 1978              		.global	Timer2
 1979              		.section	.bss.Timer2,"aw",%nobits
 1980              		.align	1
 1983              	Timer2:
 1984 0000 0000     		.space	2
 1985              		.global	Timer1
 1986              		.section	.bss.Timer1,"aw",%nobits
 1987              		.align	1
 1990              	Timer1:
 1991 0000 0000     		.space	2
 1992              		.text
 1993              	.Letext0:
 1994              		.file 2 "C:/Users/jonas/AppData/Roaming/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-de
 1995              		.file 3 "C:/Users/jonas/AppData/Roaming/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-de
 1996              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1997              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1998              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1999              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2000              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2001              		.file 9 "Middlewares/Third_Party/FatFs/src/integer.h"
 2002              		.file 10 "Middlewares/Third_Party/FatFs/src/diskio.h"
 2003              		.file 11 "Core/Inc/fatfs_sd.h"
 2004              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 fatfs_sd.c
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:21     .text.SD_PowerOff:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:26     .text.SD_PowerOff:00000000 SD_PowerOff
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:43     .text.SD_PowerOff:00000008 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1966   .bss.PowerFlag:00000000 PowerFlag
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:48     .text.SD_CheckPower:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:53     .text.SD_CheckPower:00000000 SD_CheckPower
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:68     .text.SD_CheckPower:00000008 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:73     .text.SPI_TxBuffer:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:78     .text.SPI_TxBuffer:00000000 SPI_TxBuffer
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:116    .text.SPI_TxBuffer:0000001c $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:121    .text.SPI_TxByte:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:126    .text.SPI_TxByte:00000000 SPI_TxByte
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:167    .text.SPI_TxByte:00000028 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:172    .text.SELECT:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:177    .text.SELECT:00000000 SELECT
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:202    .text.SELECT:00000014 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:207    .text.DESELECT:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:212    .text.DESELECT:00000000 DESELECT
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:237    .text.DESELECT:00000014 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:242    .text.SPI_RxByte:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:247    .text.SPI_RxByte:00000000 SPI_RxByte
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:292    .text.SPI_RxByte:00000034 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:297    .text.SD_PowerOn:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:302    .text.SD_PowerOn:00000000 SD_PowerOn
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:412    .text.SD_PowerOn:00000068 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:417    .text.SD_ReadyWait:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:422    .text.SD_ReadyWait:00000000 SD_ReadyWait
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:459    .text.SD_ReadyWait:0000001c $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1983   .bss.Timer2:00000000 Timer2
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:464    .text.SD_SendCmd:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:469    .text.SD_SendCmd:00000000 SD_SendCmd
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:579    .text.SPI_RxBytePtr:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:584    .text.SPI_RxBytePtr:00000000 SPI_RxBytePtr
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:610    .text.SD_RxDataBlock:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:615    .text.SD_RxDataBlock:00000000 SD_RxDataBlock
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:699    .text.SD_RxDataBlock:00000040 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1990   .bss.Timer1:00000000 Timer1
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:704    .text.SD_TxDataBlock:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:709    .text.SD_TxDataBlock:00000000 SD_TxDataBlock
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:826    .text.SD_disk_initialize:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:832    .text.SD_disk_initialize:00000000 SD_disk_initialize
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1156   .text.SD_disk_initialize:00000170 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1976   .data.Stat:00000000 Stat
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1971   .bss.CardType:00000000 CardType
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1163   .text.SD_disk_status:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1169   .text.SD_disk_status:00000000 SD_disk_status
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1198   .text.SD_disk_status:00000010 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1203   .text.SD_disk_read:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1209   .text.SD_disk_read:00000000 SD_disk_read
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1368   .text.SD_disk_read:00000090 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1374   .text.SD_disk_write:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1380   .text.SD_disk_write:00000000 SD_disk_write
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1584   .text.SD_disk_write:000000bc $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1590   .text.SD_disk_ioctl:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1596   .text.SD_disk_ioctl:00000000 SD_disk_ioctl
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s 			page 52


C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1645   .text.SD_disk_ioctl:0000002e $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1660   .text.SD_disk_ioctl:0000003c $t
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1959   .text.SD_disk_ioctl:0000017c $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1967   .bss.PowerFlag:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1972   .bss.CardType:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1980   .bss.Timer2:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccnid9nb.s:1987   .bss.Timer1:00000000 $d

UNDEFINED SYMBOLS
HAL_SPI_Transmit
hspi2
HAL_GPIO_WritePin
HAL_Delay
HAL_SPI_TransmitReceive
