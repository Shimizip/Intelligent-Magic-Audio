ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdbool.h>
  25:Core/Src/main.c **** #include "ssd1306.h"
  26:Core/Src/main.c **** #include "fonts.h"
  27:Core/Src/main.c **** #include "display.h"
  28:Core/Src/main.c **** #include "filemanager.h"
  29:Core/Src/main.c **** #include "audio.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** UART_HandleTypeDef huart2;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** // Filemanager
  56:Core/Src/main.c **** FileManager fm;
  57:Core/Src/main.c **** uint32_t rotary_enc_count = 0;
  58:Core/Src/main.c **** bool switch_push_button = false;
  59:Core/Src/main.c **** bool debounce = false;
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  66:Core/Src/main.c **** static void MX_I2C1_Init(void);
  67:Core/Src/main.c **** static void MX_TIM5_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END 1 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Core/Src/main.c ****   HAL_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Configure the system clock */
  98:Core/Src/main.c ****   SystemClock_Config();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END SysInit */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Initialize all configured peripherals */
 105:Core/Src/main.c ****   MX_GPIO_Init();
 106:Core/Src/main.c ****   MX_USART2_UART_Init();
 107:Core/Src/main.c ****   MX_I2C1_Init();
 108:Core/Src/main.c ****   MX_TIM5_Init();
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   // Init lcd using one of the stm32HAL i2c typedefs
 112:Core/Src/main.c ****   if (ssd1306_Init(&hi2c1) != 0) {
 113:Core/Src/main.c ****     Error_Handler();
 114:Core/Src/main.c ****   }
 115:Core/Src/main.c ****   HAL_Delay(1000);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   ssd1306_Fill(Black);
 118:Core/Src/main.c ****   ssd1306_UpdateScreen(&hi2c1);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   HAL_Delay(1000);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   initializeFileManager(&fm);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   // Adding some dummy files
 126:Core/Src/main.c ****   addFile(&fm, "fart1.wav");
 127:Core/Src/main.c ****   addFile(&fm, "fart2.wav");
 128:Core/Src/main.c ****   addFile(&fm, "fart3.wav");
 129:Core/Src/main.c ****   addFile(&fm, "fart4.wav");
 130:Core/Src/main.c ****   addFile(&fm, "fart5.wav");
 131:Core/Src/main.c ****   addFile(&fm, "fart6.wav");
 132:Core/Src/main.c ****   addFile(&fm, "fart7.wav");
 133:Core/Src/main.c ****   addFile(&fm, "fart8.wav");
 134:Core/Src/main.c ****   addFile(&fm, "fart9.wav");
 135:Core/Src/main.c ****   addFile(&fm, "fart10.wav");
 136:Core/Src/main.c ****   addFile(&fm, "fart11.wav");
 137:Core/Src/main.c ****   addFile(&fm, "fart12.wav");
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   // uint32_t num_samples = 2000;
 140:Core/Src/main.c ****   // int16_t samples[num_samples];
 141:Core/Src/main.c ****   // generateWaveform(samples, num_samples);
 142:Core/Src/main.c ****   // drawWaveform(&hi2c1,samples, num_samples);
 143:Core/Src/main.c ****   /* USER CODE END 2 */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 4


 146:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 147:Core/Src/main.c ****   while (1)
 148:Core/Src/main.c ****   { 
 149:Core/Src/main.c ****     // Displaying the files
 150:Core/Src/main.c ****     char *filenames[MAX_FILES];
 151:Core/Src/main.c ****     for (int i = 0; i < fm.num_files; i++) {
 152:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 153:Core/Src/main.c ****     }
 154:Core/Src/main.c ****     char *currentFileName = fm.files[fm.current_file_index].filename;
 155:Core/Src/main.c ****     displayStrings(&hi2c1, filenames, fm.num_files, fm.cursor_index);
 156:Core/Src/main.c ****     renderSelectedFile(&hi2c1, currentFileName);
 157:Core/Src/main.c ****     // Update display
 158:Core/Src/main.c ****     ssd1306_UpdateScreen(&hi2c1);
 159:Core/Src/main.c ****     /* USER CODE END WHILE */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c ****   /* USER CODE END 3 */
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief System Clock Configuration
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void SystemClock_Config(void)
 171:Core/Src/main.c **** {
 172:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 173:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 178:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 192:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 5


 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 214:Core/Src/main.c ****   * @param None
 215:Core/Src/main.c ****   * @retval None
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c **** static void MX_I2C1_Init(void)
 218:Core/Src/main.c **** {
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 227:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 228:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 229:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 230:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 231:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 232:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 233:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 234:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 235:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 236:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /**
 247:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 248:Core/Src/main.c ****   * @param None
 249:Core/Src/main.c ****   * @retval None
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c **** static void MX_TIM5_Init(void)
 252:Core/Src/main.c **** {
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 259:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 264:Core/Src/main.c ****   htim5.Instance = TIM5;
 265:Core/Src/main.c ****   htim5.Init.Prescaler = 100;
 266:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 267:Core/Src/main.c ****   htim5.Init.Period = 8400;
 268:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 269:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 270:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 271:Core/Src/main.c ****   {
 272:Core/Src/main.c ****     Error_Handler();
 273:Core/Src/main.c ****   }
 274:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 275:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   if (HAL_TIM_OnePulse_Init(&htim5, TIM_OPMODE_SINGLE) != HAL_OK)
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 284:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 285:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     Error_Handler();
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****   * @brief USART2 Initialization Function
 297:Core/Src/main.c ****   * @param None
 298:Core/Src/main.c ****   * @retval None
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 301:Core/Src/main.c **** {
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 310:Core/Src/main.c ****   huart2.Instance = USART2;
 311:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 312:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 313:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 314:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 315:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 316:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 7


 317:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 318:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** }
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /**
 329:Core/Src/main.c ****   * @brief GPIO Initialization Function
 330:Core/Src/main.c ****   * @param None
 331:Core/Src/main.c ****   * @retval None
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c **** static void MX_GPIO_Init(void)
 334:Core/Src/main.c **** {
  28              		.loc 1 334 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 8AB0     		sub	sp, sp, #40
  39              		.cfi_def_cfa_offset 56
 335:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 335 3 view .LVU1
  41              		.loc 1 335 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 336:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 337:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 340:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 340 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 340 3 view .LVU4
  51 0010 0194     		str	r4, [sp, #4]
  52              		.loc 1 340 3 view .LVU5
  53 0012 374B     		ldr	r3, .L3
  54 0014 1A6B     		ldr	r2, [r3, #48]
  55 0016 42F00402 		orr	r2, r2, #4
  56 001a 1A63     		str	r2, [r3, #48]
  57              		.loc 1 340 3 view .LVU6
  58 001c 1A6B     		ldr	r2, [r3, #48]
  59 001e 02F00402 		and	r2, r2, #4
  60 0022 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 8


  61              		.loc 1 340 3 view .LVU7
  62 0024 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 340 3 view .LVU8
 341:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  65              		.loc 1 341 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 341 3 view .LVU10
  68 0026 0294     		str	r4, [sp, #8]
  69              		.loc 1 341 3 view .LVU11
  70 0028 1A6B     		ldr	r2, [r3, #48]
  71 002a 42F08002 		orr	r2, r2, #128
  72 002e 1A63     		str	r2, [r3, #48]
  73              		.loc 1 341 3 view .LVU12
  74 0030 1A6B     		ldr	r2, [r3, #48]
  75 0032 02F08002 		and	r2, r2, #128
  76 0036 0292     		str	r2, [sp, #8]
  77              		.loc 1 341 3 view .LVU13
  78 0038 029A     		ldr	r2, [sp, #8]
  79              	.LBE5:
  80              		.loc 1 341 3 view .LVU14
 342:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  81              		.loc 1 342 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 342 3 view .LVU16
  84 003a 0394     		str	r4, [sp, #12]
  85              		.loc 1 342 3 view .LVU17
  86 003c 1A6B     		ldr	r2, [r3, #48]
  87 003e 42F00102 		orr	r2, r2, #1
  88 0042 1A63     		str	r2, [r3, #48]
  89              		.loc 1 342 3 view .LVU18
  90 0044 1A6B     		ldr	r2, [r3, #48]
  91 0046 02F00102 		and	r2, r2, #1
  92 004a 0392     		str	r2, [sp, #12]
  93              		.loc 1 342 3 view .LVU19
  94 004c 039A     		ldr	r2, [sp, #12]
  95              	.LBE6:
  96              		.loc 1 342 3 view .LVU20
 343:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  97              		.loc 1 343 3 view .LVU21
  98              	.LBB7:
  99              		.loc 1 343 3 view .LVU22
 100 004e 0494     		str	r4, [sp, #16]
 101              		.loc 1 343 3 view .LVU23
 102 0050 1A6B     		ldr	r2, [r3, #48]
 103 0052 42F00202 		orr	r2, r2, #2
 104 0056 1A63     		str	r2, [r3, #48]
 105              		.loc 1 343 3 view .LVU24
 106 0058 1B6B     		ldr	r3, [r3, #48]
 107 005a 03F00203 		and	r3, r3, #2
 108 005e 0493     		str	r3, [sp, #16]
 109              		.loc 1 343 3 view .LVU25
 110 0060 049B     		ldr	r3, [sp, #16]
 111              	.LBE7:
 112              		.loc 1 343 3 view .LVU26
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 9


 346:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 113              		.loc 1 346 3 view .LVU27
 114 0062 244D     		ldr	r5, .L3+4
 115 0064 2246     		mov	r2, r4
 116 0066 2021     		movs	r1, #32
 117 0068 2846     		mov	r0, r5
 118 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL0:
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 349:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 120              		.loc 1 349 3 view .LVU28
 121              		.loc 1 349 23 is_stmt 0 view .LVU29
 122 006e 4FF40053 		mov	r3, #8192
 123 0072 0593     		str	r3, [sp, #20]
 350:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 124              		.loc 1 350 3 is_stmt 1 view .LVU30
 125              		.loc 1 350 24 is_stmt 0 view .LVU31
 126 0074 4FF40413 		mov	r3, #2162688
 127 0078 0693     		str	r3, [sp, #24]
 351:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 351 3 is_stmt 1 view .LVU32
 129              		.loc 1 351 24 is_stmt 0 view .LVU33
 130 007a 0794     		str	r4, [sp, #28]
 352:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 131              		.loc 1 352 3 is_stmt 1 view .LVU34
 132 007c 05A9     		add	r1, sp, #20
 133 007e 1E48     		ldr	r0, .L3+8
 134 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 135              	.LVL1:
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /*Configure GPIO pins : enc_a_clk_in1_Pin enc_switch_in3_Pin */
 355:Core/Src/main.c ****   GPIO_InitStruct.Pin = enc_a_clk_in1_Pin|enc_switch_in3_Pin;
 136              		.loc 1 355 3 view .LVU35
 137              		.loc 1 355 23 is_stmt 0 view .LVU36
 138 0084 1123     		movs	r3, #17
 139 0086 0593     		str	r3, [sp, #20]
 356:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 140              		.loc 1 356 3 is_stmt 1 view .LVU37
 141              		.loc 1 356 24 is_stmt 0 view .LVU38
 142 0088 4FF48813 		mov	r3, #1114112
 143 008c 0693     		str	r3, [sp, #24]
 357:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 144              		.loc 1 357 3 is_stmt 1 view .LVU39
 145              		.loc 1 357 24 is_stmt 0 view .LVU40
 146 008e 0126     		movs	r6, #1
 147 0090 0796     		str	r6, [sp, #28]
 358:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148              		.loc 1 358 3 is_stmt 1 view .LVU41
 149 0092 05A9     		add	r1, sp, #20
 150 0094 2846     		mov	r0, r5
 151 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL2:
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /*Configure GPIO pin : enc_b_dt_in2_Pin */
 361:Core/Src/main.c ****   GPIO_InitStruct.Pin = enc_b_dt_in2_Pin;
 153              		.loc 1 361 3 view .LVU42
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 10


 154              		.loc 1 361 23 is_stmt 0 view .LVU43
 155 009a 0223     		movs	r3, #2
 156 009c 0593     		str	r3, [sp, #20]
 362:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 157              		.loc 1 362 3 is_stmt 1 view .LVU44
 158              		.loc 1 362 24 is_stmt 0 view .LVU45
 159 009e 0694     		str	r4, [sp, #24]
 363:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 160              		.loc 1 363 3 is_stmt 1 view .LVU46
 161              		.loc 1 363 24 is_stmt 0 view .LVU47
 162 00a0 0796     		str	r6, [sp, #28]
 364:Core/Src/main.c ****   HAL_GPIO_Init(enc_b_dt_in2_GPIO_Port, &GPIO_InitStruct);
 163              		.loc 1 364 3 is_stmt 1 view .LVU48
 164 00a2 05A9     		add	r1, sp, #20
 165 00a4 2846     		mov	r0, r5
 166 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 167              	.LVL3:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 367:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 168              		.loc 1 367 3 view .LVU49
 169              		.loc 1 367 23 is_stmt 0 view .LVU50
 170 00aa 2023     		movs	r3, #32
 171 00ac 0593     		str	r3, [sp, #20]
 368:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 172              		.loc 1 368 3 is_stmt 1 view .LVU51
 173              		.loc 1 368 24 is_stmt 0 view .LVU52
 174 00ae 0696     		str	r6, [sp, #24]
 369:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 175              		.loc 1 369 3 is_stmt 1 view .LVU53
 176              		.loc 1 369 24 is_stmt 0 view .LVU54
 177 00b0 0794     		str	r4, [sp, #28]
 370:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 178              		.loc 1 370 3 is_stmt 1 view .LVU55
 179              		.loc 1 370 25 is_stmt 0 view .LVU56
 180 00b2 0894     		str	r4, [sp, #32]
 371:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 181              		.loc 1 371 3 is_stmt 1 view .LVU57
 182 00b4 05A9     		add	r1, sp, #20
 183 00b6 2846     		mov	r0, r5
 184 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL4:
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* EXTI interrupt init*/
 374:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 186              		.loc 1 374 3 view .LVU58
 187 00bc 2246     		mov	r2, r4
 188 00be 2146     		mov	r1, r4
 189 00c0 0620     		movs	r0, #6
 190 00c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 191              	.LVL5:
 375:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 192              		.loc 1 375 3 view .LVU59
 193 00c6 0620     		movs	r0, #6
 194 00c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 195              	.LVL6:
 376:Core/Src/main.c **** 
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 11


 377:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 196              		.loc 1 377 3 view .LVU60
 197 00cc 2246     		mov	r2, r4
 198 00ce 2146     		mov	r1, r4
 199 00d0 0A20     		movs	r0, #10
 200 00d2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 201              	.LVL7:
 378:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 202              		.loc 1 378 3 view .LVU61
 203 00d6 0A20     		movs	r0, #10
 204 00d8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 205              	.LVL8:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 206              		.loc 1 380 3 view .LVU62
 207 00dc 2246     		mov	r2, r4
 208 00de 2146     		mov	r1, r4
 209 00e0 2820     		movs	r0, #40
 210 00e2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 211              	.LVL9:
 381:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 212              		.loc 1 381 3 view .LVU63
 213 00e6 2820     		movs	r0, #40
 214 00e8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 215              	.LVL10:
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 384:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 385:Core/Src/main.c **** }
 216              		.loc 1 385 1 is_stmt 0 view .LVU64
 217 00ec 0AB0     		add	sp, sp, #40
 218              		.cfi_def_cfa_offset 16
 219              		@ sp needed
 220 00ee 70BD     		pop	{r4, r5, r6, pc}
 221              	.L4:
 222              		.align	2
 223              	.L3:
 224 00f0 00380240 		.word	1073887232
 225 00f4 00000240 		.word	1073872896
 226 00f8 00080240 		.word	1073874944
 227              		.cfi_endproc
 228              	.LFE142:
 230              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 231              		.align	1
 232              		.global	HAL_GPIO_EXTI_Callback
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	HAL_GPIO_EXTI_Callback:
 238              	.LVL11:
 239              	.LFB143:
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 388:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 240              		.loc 1 388 48 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 12


 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		.loc 1 388 48 is_stmt 0 view .LVU66
 245 0000 10B5     		push	{r4, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 4, -8
 248              		.cfi_offset 14, -4
 249 0002 0446     		mov	r4, r0
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****     // werte Encoder aus Rotor DC Motor aus
 391:Core/Src/main.c ****     if (GPIO_Pin == enc_a_clk_in1_Pin && !debounce) {
 250              		.loc 1 391 5 is_stmt 1 view .LVU67
 251              		.loc 1 391 8 is_stmt 0 view .LVU68
 252 0004 0128     		cmp	r0, #1
 253 0006 02D0     		beq	.L10
 254              	.LVL12:
 255              	.L6:
 392:Core/Src/main.c ****           __HAL_TIM_CLEAR_FLAG(&htim5, TIM_FLAG_UPDATE);
 393:Core/Src/main.c ****           HAL_TIM_Base_Start_IT(&htim5);
 394:Core/Src/main.c ****           debounce = true;
 395:Core/Src/main.c ****        //wenn A High und B High, increment Encoder Count
 396:Core/Src/main.c ****         if (HAL_GPIO_ReadPin(enc_b_dt_in2_GPIO_Port, enc_b_dt_in2_Pin)) {
 397:Core/Src/main.c ****           rotary_enc_count--;
 398:Core/Src/main.c ****           cursorDown(&fm);
 399:Core/Src/main.c ****         } else {
 400:Core/Src/main.c ****           // wenn A High und B Low, decrement Encoder Count
 401:Core/Src/main.c ****             rotary_enc_count++;
 402:Core/Src/main.c ****             cursorUp(&fm);
 403:Core/Src/main.c ****         }
 404:Core/Src/main.c ****     }
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****     if(GPIO_Pin == enc_switch_in3_Pin && !debounce){
 256              		.loc 1 406 5 is_stmt 1 view .LVU69
 257              		.loc 1 406 7 is_stmt 0 view .LVU70
 258 0008 102C     		cmp	r4, #16
 259 000a 23D0     		beq	.L11
 260              	.L5:
 407:Core/Src/main.c ****       __HAL_TIM_CLEAR_FLAG(&htim5, TIM_FLAG_UPDATE);
 408:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim5);
 409:Core/Src/main.c ****       debounce = true;
 410:Core/Src/main.c ****       selectFile(&fm);
 411:Core/Src/main.c ****     }
 412:Core/Src/main.c **** }
 261              		.loc 1 412 1 view .LVU71
 262 000c 10BD     		pop	{r4, pc}
 263              	.LVL13:
 264              	.L10:
 391:Core/Src/main.c ****           __HAL_TIM_CLEAR_FLAG(&htim5, TIM_FLAG_UPDATE);
 265              		.loc 1 391 42 discriminator 1 view .LVU72
 266 000e 1A4B     		ldr	r3, .L12
 267 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 391:Core/Src/main.c ****           __HAL_TIM_CLEAR_FLAG(&htim5, TIM_FLAG_UPDATE);
 268              		.loc 1 391 39 discriminator 1 view .LVU73
 269 0012 002B     		cmp	r3, #0
 270 0014 F8D1     		bne	.L6
 392:Core/Src/main.c ****           __HAL_TIM_CLEAR_FLAG(&htim5, TIM_FLAG_UPDATE);
 271              		.loc 1 392 11 is_stmt 1 view .LVU74
 272 0016 1948     		ldr	r0, .L12+4
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 13


 273              	.LVL14:
 392:Core/Src/main.c ****           __HAL_TIM_CLEAR_FLAG(&htim5, TIM_FLAG_UPDATE);
 274              		.loc 1 392 11 is_stmt 0 view .LVU75
 275 0018 0368     		ldr	r3, [r0]
 276 001a 6FF00102 		mvn	r2, #1
 277 001e 1A61     		str	r2, [r3, #16]
 393:Core/Src/main.c ****           debounce = true;
 278              		.loc 1 393 11 is_stmt 1 view .LVU76
 279 0020 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 280              	.LVL15:
 394:Core/Src/main.c ****        //wenn A High und B High, increment Encoder Count
 281              		.loc 1 394 11 view .LVU77
 394:Core/Src/main.c ****        //wenn A High und B High, increment Encoder Count
 282              		.loc 1 394 20 is_stmt 0 view .LVU78
 283 0024 144B     		ldr	r3, .L12
 284 0026 0122     		movs	r2, #1
 285 0028 1A70     		strb	r2, [r3]
 396:Core/Src/main.c ****           rotary_enc_count--;
 286              		.loc 1 396 9 is_stmt 1 view .LVU79
 396:Core/Src/main.c ****           rotary_enc_count--;
 287              		.loc 1 396 13 is_stmt 0 view .LVU80
 288 002a 0221     		movs	r1, #2
 289 002c 1448     		ldr	r0, .L12+8
 290 002e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 291              	.LVL16:
 396:Core/Src/main.c ****           rotary_enc_count--;
 292              		.loc 1 396 12 discriminator 1 view .LVU81
 293 0032 38B1     		cbz	r0, .L7
 397:Core/Src/main.c ****           cursorDown(&fm);
 294              		.loc 1 397 11 is_stmt 1 view .LVU82
 397:Core/Src/main.c ****           cursorDown(&fm);
 295              		.loc 1 397 27 is_stmt 0 view .LVU83
 296 0034 134A     		ldr	r2, .L12+12
 297 0036 1368     		ldr	r3, [r2]
 298 0038 013B     		subs	r3, r3, #1
 299 003a 1360     		str	r3, [r2]
 398:Core/Src/main.c ****         } else {
 300              		.loc 1 398 11 is_stmt 1 view .LVU84
 301 003c 1248     		ldr	r0, .L12+16
 302 003e FFF7FEFF 		bl	cursorDown
 303              	.LVL17:
 304 0042 E1E7     		b	.L6
 305              	.L7:
 401:Core/Src/main.c ****             cursorUp(&fm);
 306              		.loc 1 401 13 view .LVU85
 401:Core/Src/main.c ****             cursorUp(&fm);
 307              		.loc 1 401 29 is_stmt 0 view .LVU86
 308 0044 0F4A     		ldr	r2, .L12+12
 309 0046 1368     		ldr	r3, [r2]
 310 0048 0133     		adds	r3, r3, #1
 311 004a 1360     		str	r3, [r2]
 402:Core/Src/main.c ****         }
 312              		.loc 1 402 13 is_stmt 1 view .LVU87
 313 004c 0E48     		ldr	r0, .L12+16
 314 004e FFF7FEFF 		bl	cursorUp
 315              	.LVL18:
 316 0052 D9E7     		b	.L6
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 14


 317              	.L11:
 406:Core/Src/main.c ****       __HAL_TIM_CLEAR_FLAG(&htim5, TIM_FLAG_UPDATE);
 318              		.loc 1 406 42 is_stmt 0 discriminator 1 view .LVU88
 319 0054 084B     		ldr	r3, .L12
 320 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 406:Core/Src/main.c ****       __HAL_TIM_CLEAR_FLAG(&htim5, TIM_FLAG_UPDATE);
 321              		.loc 1 406 39 discriminator 1 view .LVU89
 322 0058 002B     		cmp	r3, #0
 323 005a D7D1     		bne	.L5
 407:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim5);
 324              		.loc 1 407 7 is_stmt 1 view .LVU90
 325 005c 0748     		ldr	r0, .L12+4
 326 005e 0368     		ldr	r3, [r0]
 327 0060 6FF00102 		mvn	r2, #1
 328 0064 1A61     		str	r2, [r3, #16]
 408:Core/Src/main.c ****       debounce = true;
 329              		.loc 1 408 7 view .LVU91
 330 0066 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 331              	.LVL19:
 409:Core/Src/main.c ****       selectFile(&fm);
 332              		.loc 1 409 7 view .LVU92
 409:Core/Src/main.c ****       selectFile(&fm);
 333              		.loc 1 409 16 is_stmt 0 view .LVU93
 334 006a 034B     		ldr	r3, .L12
 335 006c 0122     		movs	r2, #1
 336 006e 1A70     		strb	r2, [r3]
 410:Core/Src/main.c ****     }
 337              		.loc 1 410 7 is_stmt 1 view .LVU94
 338 0070 0548     		ldr	r0, .L12+16
 339 0072 FFF7FEFF 		bl	selectFile
 340              	.LVL20:
 341              		.loc 1 412 1 is_stmt 0 view .LVU95
 342 0076 C9E7     		b	.L5
 343              	.L13:
 344              		.align	2
 345              	.L12:
 346 0078 00000000 		.word	debounce
 347 007c 00000000 		.word	htim5
 348 0080 00000240 		.word	1073872896
 349 0084 00000000 		.word	rotary_enc_count
 350 0088 00000000 		.word	fm
 351              		.cfi_endproc
 352              	.LFE143:
 354              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 355              		.align	1
 356              		.global	HAL_TIM_PeriodElapsedCallback
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	HAL_TIM_PeriodElapsedCallback:
 362              	.LVL21:
 363              	.LFB144:
 413:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 364              		.loc 1 413 61 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 15


 368              		.loc 1 413 61 is_stmt 0 view .LVU97
 369 0000 08B5     		push	{r3, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 414:Core/Src/main.c ****     // reset debounce flag nach Timer5 elapsed
 415:Core/Src/main.c ****     if (htim == &htim5) {
 373              		.loc 1 415 5 is_stmt 1 view .LVU98
 374              		.loc 1 415 8 is_stmt 0 view .LVU99
 375 0002 054B     		ldr	r3, .L18
 376 0004 8342     		cmp	r3, r0
 377 0006 00D0     		beq	.L17
 378              	.LVL22:
 379              	.L14:
 416:Core/Src/main.c ****         HAL_TIM_Base_Stop_IT(&htim5);
 417:Core/Src/main.c ****         debounce = false;
 418:Core/Src/main.c ****     }
 419:Core/Src/main.c **** }
 380              		.loc 1 419 1 view .LVU100
 381 0008 08BD     		pop	{r3, pc}
 382              	.LVL23:
 383              	.L17:
 416:Core/Src/main.c ****         HAL_TIM_Base_Stop_IT(&htim5);
 384              		.loc 1 416 9 is_stmt 1 view .LVU101
 385 000a 1846     		mov	r0, r3
 386              	.LVL24:
 416:Core/Src/main.c ****         HAL_TIM_Base_Stop_IT(&htim5);
 387              		.loc 1 416 9 is_stmt 0 view .LVU102
 388 000c FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 389              	.LVL25:
 417:Core/Src/main.c ****     }
 390              		.loc 1 417 9 is_stmt 1 view .LVU103
 417:Core/Src/main.c ****     }
 391              		.loc 1 417 18 is_stmt 0 view .LVU104
 392 0010 024B     		ldr	r3, .L18+4
 393 0012 0022     		movs	r2, #0
 394 0014 1A70     		strb	r2, [r3]
 395              		.loc 1 419 1 view .LVU105
 396 0016 F7E7     		b	.L14
 397              	.L19:
 398              		.align	2
 399              	.L18:
 400 0018 00000000 		.word	htim5
 401 001c 00000000 		.word	debounce
 402              		.cfi_endproc
 403              	.LFE144:
 405              		.section	.text.Error_Handler,"ax",%progbits
 406              		.align	1
 407              		.global	Error_Handler
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	Error_Handler:
 413              	.LFB145:
 420:Core/Src/main.c **** /* USER CODE END 4 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** /**
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 16


 423:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 424:Core/Src/main.c ****   * @retval None
 425:Core/Src/main.c ****   */
 426:Core/Src/main.c **** void Error_Handler(void)
 427:Core/Src/main.c **** {
 414              		.loc 1 427 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ Volatile: function does not return.
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 428:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 429:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 430:Core/Src/main.c ****   __disable_irq();
 420              		.loc 1 430 3 view .LVU107
 421              	.LBB8:
 422              	.LBI8:
 423              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 17


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 18


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 19


 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 20


 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 21


 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 22


 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 23


 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 24


 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 25


 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 26


 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 27


 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 28


 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 29


 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 30


 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 31


 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 32


 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 33


 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 424              		.loc 2 960 27 view .LVU108
 425              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 426              		.loc 2 962 3 view .LVU109
 427              		.syntax unified
 428              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 429 0000 72B6     		cpsid i
 430              	@ 0 "" 2
 431              		.thumb
 432              		.syntax unified
 433              	.L21:
 434              	.LBE9:
 435              	.LBE8:
 431:Core/Src/main.c ****   while (1)
 436              		.loc 1 431 3 view .LVU110
 432:Core/Src/main.c ****   {
 433:Core/Src/main.c ****   }
 437              		.loc 1 433 3 view .LVU111
 431:Core/Src/main.c ****   while (1)
 438              		.loc 1 431 9 view .LVU112
 439 0002 FEE7     		b	.L21
 440              		.cfi_endproc
 441              	.LFE145:
 443              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 444              		.align	1
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 449              	MX_USART2_UART_Init:
 450              	.LFB141:
 301:Core/Src/main.c **** 
 451              		.loc 1 301 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455 0000 08B5     		push	{r3, lr}
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 3, -8
 458              		.cfi_offset 14, -4
 310:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 459              		.loc 1 310 3 view .LVU114
 310:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 460              		.loc 1 310 19 is_stmt 0 view .LVU115
 461 0002 0A48     		ldr	r0, .L26
 462 0004 0A4B     		ldr	r3, .L26+4
 463 0006 0360     		str	r3, [r0]
 311:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 34


 464              		.loc 1 311 3 is_stmt 1 view .LVU116
 311:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 465              		.loc 1 311 24 is_stmt 0 view .LVU117
 466 0008 4FF4E133 		mov	r3, #115200
 467 000c 4360     		str	r3, [r0, #4]
 312:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 468              		.loc 1 312 3 is_stmt 1 view .LVU118
 312:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 469              		.loc 1 312 26 is_stmt 0 view .LVU119
 470 000e 0023     		movs	r3, #0
 471 0010 8360     		str	r3, [r0, #8]
 313:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 472              		.loc 1 313 3 is_stmt 1 view .LVU120
 313:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 473              		.loc 1 313 24 is_stmt 0 view .LVU121
 474 0012 C360     		str	r3, [r0, #12]
 314:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 475              		.loc 1 314 3 is_stmt 1 view .LVU122
 314:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 476              		.loc 1 314 22 is_stmt 0 view .LVU123
 477 0014 0361     		str	r3, [r0, #16]
 315:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 478              		.loc 1 315 3 is_stmt 1 view .LVU124
 315:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 479              		.loc 1 315 20 is_stmt 0 view .LVU125
 480 0016 0C22     		movs	r2, #12
 481 0018 4261     		str	r2, [r0, #20]
 316:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 482              		.loc 1 316 3 is_stmt 1 view .LVU126
 316:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 483              		.loc 1 316 25 is_stmt 0 view .LVU127
 484 001a 8361     		str	r3, [r0, #24]
 317:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 485              		.loc 1 317 3 is_stmt 1 view .LVU128
 317:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 486              		.loc 1 317 28 is_stmt 0 view .LVU129
 487 001c C361     		str	r3, [r0, #28]
 318:Core/Src/main.c ****   {
 488              		.loc 1 318 3 is_stmt 1 view .LVU130
 318:Core/Src/main.c ****   {
 489              		.loc 1 318 7 is_stmt 0 view .LVU131
 490 001e FFF7FEFF 		bl	HAL_UART_Init
 491              	.LVL26:
 318:Core/Src/main.c ****   {
 492              		.loc 1 318 6 discriminator 1 view .LVU132
 493 0022 00B9     		cbnz	r0, .L25
 326:Core/Src/main.c **** 
 494              		.loc 1 326 1 view .LVU133
 495 0024 08BD     		pop	{r3, pc}
 496              	.L25:
 320:Core/Src/main.c ****   }
 497              		.loc 1 320 5 is_stmt 1 view .LVU134
 498 0026 FFF7FEFF 		bl	Error_Handler
 499              	.LVL27:
 500              	.L27:
 501 002a 00BF     		.align	2
 502              	.L26:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 35


 503 002c 00000000 		.word	huart2
 504 0030 00440040 		.word	1073759232
 505              		.cfi_endproc
 506              	.LFE141:
 508              		.section	.text.MX_I2C1_Init,"ax",%progbits
 509              		.align	1
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	MX_I2C1_Init:
 515              	.LFB139:
 218:Core/Src/main.c **** 
 516              		.loc 1 218 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 08B5     		push	{r3, lr}
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 3, -8
 523              		.cfi_offset 14, -4
 227:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 524              		.loc 1 227 3 view .LVU136
 227:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 525              		.loc 1 227 18 is_stmt 0 view .LVU137
 526 0002 0A48     		ldr	r0, .L32
 527 0004 0A4B     		ldr	r3, .L32+4
 528 0006 0360     		str	r3, [r0]
 228:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 529              		.loc 1 228 3 is_stmt 1 view .LVU138
 228:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 530              		.loc 1 228 25 is_stmt 0 view .LVU139
 531 0008 0A4B     		ldr	r3, .L32+8
 532 000a 4360     		str	r3, [r0, #4]
 229:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 533              		.loc 1 229 3 is_stmt 1 view .LVU140
 229:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 534              		.loc 1 229 24 is_stmt 0 view .LVU141
 535 000c 0023     		movs	r3, #0
 536 000e 8360     		str	r3, [r0, #8]
 230:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 537              		.loc 1 230 3 is_stmt 1 view .LVU142
 230:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 538              		.loc 1 230 26 is_stmt 0 view .LVU143
 539 0010 C360     		str	r3, [r0, #12]
 231:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 540              		.loc 1 231 3 is_stmt 1 view .LVU144
 231:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 541              		.loc 1 231 29 is_stmt 0 view .LVU145
 542 0012 4FF48042 		mov	r2, #16384
 543 0016 0261     		str	r2, [r0, #16]
 232:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 544              		.loc 1 232 3 is_stmt 1 view .LVU146
 232:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 545              		.loc 1 232 30 is_stmt 0 view .LVU147
 546 0018 4361     		str	r3, [r0, #20]
 233:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 547              		.loc 1 233 3 is_stmt 1 view .LVU148
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 36


 233:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 548              		.loc 1 233 26 is_stmt 0 view .LVU149
 549 001a 8361     		str	r3, [r0, #24]
 234:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 550              		.loc 1 234 3 is_stmt 1 view .LVU150
 234:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 551              		.loc 1 234 30 is_stmt 0 view .LVU151
 552 001c C361     		str	r3, [r0, #28]
 235:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 553              		.loc 1 235 3 is_stmt 1 view .LVU152
 235:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 554              		.loc 1 235 28 is_stmt 0 view .LVU153
 555 001e 0362     		str	r3, [r0, #32]
 236:Core/Src/main.c ****   {
 556              		.loc 1 236 3 is_stmt 1 view .LVU154
 236:Core/Src/main.c ****   {
 557              		.loc 1 236 7 is_stmt 0 view .LVU155
 558 0020 FFF7FEFF 		bl	HAL_I2C_Init
 559              	.LVL28:
 236:Core/Src/main.c ****   {
 560              		.loc 1 236 6 discriminator 1 view .LVU156
 561 0024 00B9     		cbnz	r0, .L31
 244:Core/Src/main.c **** 
 562              		.loc 1 244 1 view .LVU157
 563 0026 08BD     		pop	{r3, pc}
 564              	.L31:
 238:Core/Src/main.c ****   }
 565              		.loc 1 238 5 is_stmt 1 view .LVU158
 566 0028 FFF7FEFF 		bl	Error_Handler
 567              	.LVL29:
 568              	.L33:
 569              		.align	2
 570              	.L32:
 571 002c 00000000 		.word	hi2c1
 572 0030 00540040 		.word	1073763328
 573 0034 A0860100 		.word	100000
 574              		.cfi_endproc
 575              	.LFE139:
 577              		.section	.text.MX_TIM5_Init,"ax",%progbits
 578              		.align	1
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 583              	MX_TIM5_Init:
 584              	.LFB140:
 252:Core/Src/main.c **** 
 585              		.loc 1 252 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 24
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 00B5     		push	{lr}
 590              		.cfi_def_cfa_offset 4
 591              		.cfi_offset 14, -4
 592 0002 87B0     		sub	sp, sp, #28
 593              		.cfi_def_cfa_offset 32
 258:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 594              		.loc 1 258 3 view .LVU160
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 37


 258:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 595              		.loc 1 258 26 is_stmt 0 view .LVU161
 596 0004 0023     		movs	r3, #0
 597 0006 0293     		str	r3, [sp, #8]
 598 0008 0393     		str	r3, [sp, #12]
 599 000a 0493     		str	r3, [sp, #16]
 600 000c 0593     		str	r3, [sp, #20]
 259:Core/Src/main.c **** 
 601              		.loc 1 259 3 is_stmt 1 view .LVU162
 259:Core/Src/main.c **** 
 602              		.loc 1 259 27 is_stmt 0 view .LVU163
 603 000e 0093     		str	r3, [sp]
 604 0010 0193     		str	r3, [sp, #4]
 264:Core/Src/main.c ****   htim5.Init.Prescaler = 100;
 605              		.loc 1 264 3 is_stmt 1 view .LVU164
 264:Core/Src/main.c ****   htim5.Init.Prescaler = 100;
 606              		.loc 1 264 18 is_stmt 0 view .LVU165
 607 0012 1748     		ldr	r0, .L44
 608 0014 174A     		ldr	r2, .L44+4
 609 0016 0260     		str	r2, [r0]
 265:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 610              		.loc 1 265 3 is_stmt 1 view .LVU166
 265:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 611              		.loc 1 265 24 is_stmt 0 view .LVU167
 612 0018 6422     		movs	r2, #100
 613 001a 4260     		str	r2, [r0, #4]
 266:Core/Src/main.c ****   htim5.Init.Period = 8400;
 614              		.loc 1 266 3 is_stmt 1 view .LVU168
 266:Core/Src/main.c ****   htim5.Init.Period = 8400;
 615              		.loc 1 266 26 is_stmt 0 view .LVU169
 616 001c 8360     		str	r3, [r0, #8]
 267:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 617              		.loc 1 267 3 is_stmt 1 view .LVU170
 267:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 618              		.loc 1 267 21 is_stmt 0 view .LVU171
 619 001e 42F2D002 		movw	r2, #8400
 620 0022 C260     		str	r2, [r0, #12]
 268:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 621              		.loc 1 268 3 is_stmt 1 view .LVU172
 268:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 622              		.loc 1 268 28 is_stmt 0 view .LVU173
 623 0024 0361     		str	r3, [r0, #16]
 269:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 624              		.loc 1 269 3 is_stmt 1 view .LVU174
 269:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 625              		.loc 1 269 32 is_stmt 0 view .LVU175
 626 0026 8361     		str	r3, [r0, #24]
 270:Core/Src/main.c ****   {
 627              		.loc 1 270 3 is_stmt 1 view .LVU176
 270:Core/Src/main.c ****   {
 628              		.loc 1 270 7 is_stmt 0 view .LVU177
 629 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 630              	.LVL30:
 270:Core/Src/main.c ****   {
 631              		.loc 1 270 6 discriminator 1 view .LVU178
 632 002c B8B9     		cbnz	r0, .L40
 274:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 38


 633              		.loc 1 274 3 is_stmt 1 view .LVU179
 274:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 634              		.loc 1 274 34 is_stmt 0 view .LVU180
 635 002e 4FF48053 		mov	r3, #4096
 636 0032 0293     		str	r3, [sp, #8]
 275:Core/Src/main.c ****   {
 637              		.loc 1 275 3 is_stmt 1 view .LVU181
 275:Core/Src/main.c ****   {
 638              		.loc 1 275 7 is_stmt 0 view .LVU182
 639 0034 02A9     		add	r1, sp, #8
 640 0036 0E48     		ldr	r0, .L44
 641 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 642              	.LVL31:
 275:Core/Src/main.c ****   {
 643              		.loc 1 275 6 discriminator 1 view .LVU183
 644 003c 88B9     		cbnz	r0, .L41
 279:Core/Src/main.c ****   {
 645              		.loc 1 279 3 is_stmt 1 view .LVU184
 279:Core/Src/main.c ****   {
 646              		.loc 1 279 7 is_stmt 0 view .LVU185
 647 003e 0821     		movs	r1, #8
 648 0040 0B48     		ldr	r0, .L44
 649 0042 FFF7FEFF 		bl	HAL_TIM_OnePulse_Init
 650              	.LVL32:
 279:Core/Src/main.c ****   {
 651              		.loc 1 279 6 discriminator 1 view .LVU186
 652 0046 70B9     		cbnz	r0, .L42
 283:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 653              		.loc 1 283 3 is_stmt 1 view .LVU187
 283:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 654              		.loc 1 283 37 is_stmt 0 view .LVU188
 655 0048 0023     		movs	r3, #0
 656 004a 0093     		str	r3, [sp]
 284:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 657              		.loc 1 284 3 is_stmt 1 view .LVU189
 284:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 658              		.loc 1 284 33 is_stmt 0 view .LVU190
 659 004c 0193     		str	r3, [sp, #4]
 285:Core/Src/main.c ****   {
 660              		.loc 1 285 3 is_stmt 1 view .LVU191
 285:Core/Src/main.c ****   {
 661              		.loc 1 285 7 is_stmt 0 view .LVU192
 662 004e 6946     		mov	r1, sp
 663 0050 0748     		ldr	r0, .L44
 664 0052 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 665              	.LVL33:
 285:Core/Src/main.c ****   {
 666              		.loc 1 285 6 discriminator 1 view .LVU193
 667 0056 40B9     		cbnz	r0, .L43
 293:Core/Src/main.c **** 
 668              		.loc 1 293 1 view .LVU194
 669 0058 07B0     		add	sp, sp, #28
 670              		.cfi_remember_state
 671              		.cfi_def_cfa_offset 4
 672              		@ sp needed
 673 005a 5DF804FB 		ldr	pc, [sp], #4
 674              	.L40:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 39


 675              		.cfi_restore_state
 272:Core/Src/main.c ****   }
 676              		.loc 1 272 5 is_stmt 1 view .LVU195
 677 005e FFF7FEFF 		bl	Error_Handler
 678              	.LVL34:
 679              	.L41:
 277:Core/Src/main.c ****   }
 680              		.loc 1 277 5 view .LVU196
 681 0062 FFF7FEFF 		bl	Error_Handler
 682              	.LVL35:
 683              	.L42:
 281:Core/Src/main.c ****   }
 684              		.loc 1 281 5 view .LVU197
 685 0066 FFF7FEFF 		bl	Error_Handler
 686              	.LVL36:
 687              	.L43:
 287:Core/Src/main.c ****   }
 688              		.loc 1 287 5 view .LVU198
 689 006a FFF7FEFF 		bl	Error_Handler
 690              	.LVL37:
 691              	.L45:
 692 006e 00BF     		.align	2
 693              	.L44:
 694 0070 00000000 		.word	htim5
 695 0074 000C0040 		.word	1073744896
 696              		.cfi_endproc
 697              	.LFE140:
 699              		.section	.text.SystemClock_Config,"ax",%progbits
 700              		.align	1
 701              		.global	SystemClock_Config
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 706              	SystemClock_Config:
 707              	.LFB138:
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 708              		.loc 1 171 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 80
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712 0000 00B5     		push	{lr}
 713              		.cfi_def_cfa_offset 4
 714              		.cfi_offset 14, -4
 715 0002 95B0     		sub	sp, sp, #84
 716              		.cfi_def_cfa_offset 88
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 717              		.loc 1 172 3 view .LVU200
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 718              		.loc 1 172 22 is_stmt 0 view .LVU201
 719 0004 3022     		movs	r2, #48
 720 0006 0021     		movs	r1, #0
 721 0008 08A8     		add	r0, sp, #32
 722 000a FFF7FEFF 		bl	memset
 723              	.LVL38:
 173:Core/Src/main.c **** 
 724              		.loc 1 173 3 is_stmt 1 view .LVU202
 173:Core/Src/main.c **** 
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 40


 725              		.loc 1 173 22 is_stmt 0 view .LVU203
 726 000e 0023     		movs	r3, #0
 727 0010 0393     		str	r3, [sp, #12]
 728 0012 0493     		str	r3, [sp, #16]
 729 0014 0593     		str	r3, [sp, #20]
 730 0016 0693     		str	r3, [sp, #24]
 731 0018 0793     		str	r3, [sp, #28]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 732              		.loc 1 177 3 is_stmt 1 view .LVU204
 733              	.LBB10:
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 734              		.loc 1 177 3 view .LVU205
 735 001a 0193     		str	r3, [sp, #4]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 736              		.loc 1 177 3 view .LVU206
 737 001c 1F4A     		ldr	r2, .L52
 738 001e 116C     		ldr	r1, [r2, #64]
 739 0020 41F08051 		orr	r1, r1, #268435456
 740 0024 1164     		str	r1, [r2, #64]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 741              		.loc 1 177 3 view .LVU207
 742 0026 126C     		ldr	r2, [r2, #64]
 743 0028 02F08052 		and	r2, r2, #268435456
 744 002c 0192     		str	r2, [sp, #4]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 745              		.loc 1 177 3 view .LVU208
 746 002e 019A     		ldr	r2, [sp, #4]
 747              	.LBE10:
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 748              		.loc 1 177 3 view .LVU209
 178:Core/Src/main.c **** 
 749              		.loc 1 178 3 view .LVU210
 750              	.LBB11:
 178:Core/Src/main.c **** 
 751              		.loc 1 178 3 view .LVU211
 752 0030 0293     		str	r3, [sp, #8]
 178:Core/Src/main.c **** 
 753              		.loc 1 178 3 view .LVU212
 754 0032 1B49     		ldr	r1, .L52+4
 755 0034 0A68     		ldr	r2, [r1]
 756 0036 22F44042 		bic	r2, r2, #49152
 757 003a 42F40042 		orr	r2, r2, #32768
 758 003e 0A60     		str	r2, [r1]
 178:Core/Src/main.c **** 
 759              		.loc 1 178 3 view .LVU213
 760 0040 0A68     		ldr	r2, [r1]
 761 0042 02F44042 		and	r2, r2, #49152
 762 0046 0292     		str	r2, [sp, #8]
 178:Core/Src/main.c **** 
 763              		.loc 1 178 3 view .LVU214
 764 0048 029A     		ldr	r2, [sp, #8]
 765              	.LBE11:
 178:Core/Src/main.c **** 
 766              		.loc 1 178 3 view .LVU215
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 767              		.loc 1 183 3 view .LVU216
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 41


 768              		.loc 1 183 36 is_stmt 0 view .LVU217
 769 004a 0221     		movs	r1, #2
 770 004c 0891     		str	r1, [sp, #32]
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 771              		.loc 1 184 3 is_stmt 1 view .LVU218
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 772              		.loc 1 184 30 is_stmt 0 view .LVU219
 773 004e 0122     		movs	r2, #1
 774 0050 0B92     		str	r2, [sp, #44]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 775              		.loc 1 185 3 is_stmt 1 view .LVU220
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 776              		.loc 1 185 41 is_stmt 0 view .LVU221
 777 0052 1022     		movs	r2, #16
 778 0054 0C92     		str	r2, [sp, #48]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 779              		.loc 1 186 3 is_stmt 1 view .LVU222
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 780              		.loc 1 186 34 is_stmt 0 view .LVU223
 781 0056 0E91     		str	r1, [sp, #56]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 782              		.loc 1 187 3 is_stmt 1 view .LVU224
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 783              		.loc 1 187 35 is_stmt 0 view .LVU225
 784 0058 0F93     		str	r3, [sp, #60]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 785              		.loc 1 188 3 is_stmt 1 view .LVU226
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 786              		.loc 1 188 30 is_stmt 0 view .LVU227
 787 005a 1092     		str	r2, [sp, #64]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 788              		.loc 1 189 3 is_stmt 1 view .LVU228
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 789              		.loc 1 189 30 is_stmt 0 view .LVU229
 790 005c 4FF4A873 		mov	r3, #336
 791 0060 1193     		str	r3, [sp, #68]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 792              		.loc 1 190 3 is_stmt 1 view .LVU230
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 793              		.loc 1 190 30 is_stmt 0 view .LVU231
 794 0062 0423     		movs	r3, #4
 795 0064 1293     		str	r3, [sp, #72]
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 796              		.loc 1 191 3 is_stmt 1 view .LVU232
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 797              		.loc 1 191 30 is_stmt 0 view .LVU233
 798 0066 0723     		movs	r3, #7
 799 0068 1393     		str	r3, [sp, #76]
 192:Core/Src/main.c ****   {
 800              		.loc 1 192 3 is_stmt 1 view .LVU234
 192:Core/Src/main.c ****   {
 801              		.loc 1 192 7 is_stmt 0 view .LVU235
 802 006a 08A8     		add	r0, sp, #32
 803 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 804              	.LVL39:
 192:Core/Src/main.c ****   {
 805              		.loc 1 192 6 discriminator 1 view .LVU236
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 42


 806 0070 80B9     		cbnz	r0, .L50
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 807              		.loc 1 199 3 is_stmt 1 view .LVU237
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 808              		.loc 1 199 31 is_stmt 0 view .LVU238
 809 0072 0F23     		movs	r3, #15
 810 0074 0393     		str	r3, [sp, #12]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 811              		.loc 1 201 3 is_stmt 1 view .LVU239
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 812              		.loc 1 201 34 is_stmt 0 view .LVU240
 813 0076 0221     		movs	r1, #2
 814 0078 0491     		str	r1, [sp, #16]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 815              		.loc 1 202 3 is_stmt 1 view .LVU241
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 816              		.loc 1 202 35 is_stmt 0 view .LVU242
 817 007a 0023     		movs	r3, #0
 818 007c 0593     		str	r3, [sp, #20]
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 819              		.loc 1 203 3 is_stmt 1 view .LVU243
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 820              		.loc 1 203 36 is_stmt 0 view .LVU244
 821 007e 4FF48052 		mov	r2, #4096
 822 0082 0692     		str	r2, [sp, #24]
 204:Core/Src/main.c **** 
 823              		.loc 1 204 3 is_stmt 1 view .LVU245
 204:Core/Src/main.c **** 
 824              		.loc 1 204 36 is_stmt 0 view .LVU246
 825 0084 0793     		str	r3, [sp, #28]
 206:Core/Src/main.c ****   {
 826              		.loc 1 206 3 is_stmt 1 view .LVU247
 206:Core/Src/main.c ****   {
 827              		.loc 1 206 7 is_stmt 0 view .LVU248
 828 0086 03A8     		add	r0, sp, #12
 829 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 830              	.LVL40:
 206:Core/Src/main.c ****   {
 831              		.loc 1 206 6 discriminator 1 view .LVU249
 832 008c 20B9     		cbnz	r0, .L51
 210:Core/Src/main.c **** 
 833              		.loc 1 210 1 view .LVU250
 834 008e 15B0     		add	sp, sp, #84
 835              		.cfi_remember_state
 836              		.cfi_def_cfa_offset 4
 837              		@ sp needed
 838 0090 5DF804FB 		ldr	pc, [sp], #4
 839              	.L50:
 840              		.cfi_restore_state
 194:Core/Src/main.c ****   }
 841              		.loc 1 194 5 is_stmt 1 view .LVU251
 842 0094 FFF7FEFF 		bl	Error_Handler
 843              	.LVL41:
 844              	.L51:
 208:Core/Src/main.c ****   }
 845              		.loc 1 208 5 view .LVU252
 846 0098 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 43


 847              	.LVL42:
 848              	.L53:
 849              		.align	2
 850              	.L52:
 851 009c 00380240 		.word	1073887232
 852 00a0 00700040 		.word	1073770496
 853              		.cfi_endproc
 854              	.LFE138:
 856              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 857              		.align	2
 858              	.LC0:
 859 0000 66617274 		.ascii	"fart1.wav\000"
 859      312E7761 
 859      7600
 860 000a 0000     		.align	2
 861              	.LC1:
 862 000c 66617274 		.ascii	"fart2.wav\000"
 862      322E7761 
 862      7600
 863 0016 0000     		.align	2
 864              	.LC2:
 865 0018 66617274 		.ascii	"fart3.wav\000"
 865      332E7761 
 865      7600
 866 0022 0000     		.align	2
 867              	.LC3:
 868 0024 66617274 		.ascii	"fart4.wav\000"
 868      342E7761 
 868      7600
 869 002e 0000     		.align	2
 870              	.LC4:
 871 0030 66617274 		.ascii	"fart5.wav\000"
 871      352E7761 
 871      7600
 872 003a 0000     		.align	2
 873              	.LC5:
 874 003c 66617274 		.ascii	"fart6.wav\000"
 874      362E7761 
 874      7600
 875 0046 0000     		.align	2
 876              	.LC6:
 877 0048 66617274 		.ascii	"fart7.wav\000"
 877      372E7761 
 877      7600
 878 0052 0000     		.align	2
 879              	.LC7:
 880 0054 66617274 		.ascii	"fart8.wav\000"
 880      382E7761 
 880      7600
 881 005e 0000     		.align	2
 882              	.LC8:
 883 0060 66617274 		.ascii	"fart9.wav\000"
 883      392E7761 
 883      7600
 884 006a 0000     		.align	2
 885              	.LC9:
 886 006c 66617274 		.ascii	"fart10.wav\000"
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 44


 886      31302E77 
 886      617600
 887 0077 00       		.align	2
 888              	.LC10:
 889 0078 66617274 		.ascii	"fart11.wav\000"
 889      31312E77 
 889      617600
 890 0083 00       		.align	2
 891              	.LC11:
 892 0084 66617274 		.ascii	"fart12.wav\000"
 892      31322E77 
 892      617600
 893              		.section	.text.main,"ax",%progbits
 894              		.align	1
 895              		.global	main
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 900              	main:
 901              	.LFB137:
  82:Core/Src/main.c **** 
 902              		.loc 1 82 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 200
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906 0000 30B5     		push	{r4, r5, lr}
 907              		.cfi_def_cfa_offset 12
 908              		.cfi_offset 4, -12
 909              		.cfi_offset 5, -8
 910              		.cfi_offset 14, -4
 911 0002 B3B0     		sub	sp, sp, #204
 912              		.cfi_def_cfa_offset 216
  91:Core/Src/main.c **** 
 913              		.loc 1 91 3 view .LVU254
 914 0004 FFF7FEFF 		bl	HAL_Init
 915              	.LVL43:
  98:Core/Src/main.c **** 
 916              		.loc 1 98 3 view .LVU255
 917 0008 FFF7FEFF 		bl	SystemClock_Config
 918              	.LVL44:
 105:Core/Src/main.c ****   MX_USART2_UART_Init();
 919              		.loc 1 105 3 view .LVU256
 920 000c FFF7FEFF 		bl	MX_GPIO_Init
 921              	.LVL45:
 106:Core/Src/main.c ****   MX_I2C1_Init();
 922              		.loc 1 106 3 view .LVU257
 923 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 924              	.LVL46:
 107:Core/Src/main.c ****   MX_TIM5_Init();
 925              		.loc 1 107 3 view .LVU258
 926 0014 FFF7FEFF 		bl	MX_I2C1_Init
 927              	.LVL47:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 928              		.loc 1 108 3 view .LVU259
 929 0018 FFF7FEFF 		bl	MX_TIM5_Init
 930              	.LVL48:
 112:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 45


 931              		.loc 1 112 3 view .LVU260
 112:Core/Src/main.c ****     Error_Handler();
 932              		.loc 1 112 7 is_stmt 0 view .LVU261
 933 001c 3848     		ldr	r0, .L60
 934 001e FFF7FEFF 		bl	ssd1306_Init
 935              	.LVL49:
 112:Core/Src/main.c ****     Error_Handler();
 936              		.loc 1 112 6 discriminator 1 view .LVU262
 937 0022 08B1     		cbz	r0, .L55
 113:Core/Src/main.c ****   }
 938              		.loc 1 113 5 is_stmt 1 view .LVU263
 939 0024 FFF7FEFF 		bl	Error_Handler
 940              	.LVL50:
 941              	.L55:
 115:Core/Src/main.c **** 
 942              		.loc 1 115 3 view .LVU264
 943 0028 4FF47A70 		mov	r0, #1000
 944 002c FFF7FEFF 		bl	HAL_Delay
 945              	.LVL51:
 117:Core/Src/main.c ****   ssd1306_UpdateScreen(&hi2c1);
 946              		.loc 1 117 3 view .LVU265
 947 0030 0020     		movs	r0, #0
 948 0032 FFF7FEFF 		bl	ssd1306_Fill
 949              	.LVL52:
 118:Core/Src/main.c **** 
 950              		.loc 1 118 3 view .LVU266
 951 0036 3248     		ldr	r0, .L60
 952 0038 FFF7FEFF 		bl	ssd1306_UpdateScreen
 953              	.LVL53:
 120:Core/Src/main.c **** 
 954              		.loc 1 120 3 view .LVU267
 955 003c 4FF47A70 		mov	r0, #1000
 956 0040 FFF7FEFF 		bl	HAL_Delay
 957              	.LVL54:
 123:Core/Src/main.c **** 
 958              		.loc 1 123 3 view .LVU268
 959 0044 2F4C     		ldr	r4, .L60+4
 960 0046 2046     		mov	r0, r4
 961 0048 FFF7FEFF 		bl	initializeFileManager
 962              	.LVL55:
 126:Core/Src/main.c ****   addFile(&fm, "fart2.wav");
 963              		.loc 1 126 3 view .LVU269
 964 004c 2E49     		ldr	r1, .L60+8
 965 004e 2046     		mov	r0, r4
 966 0050 FFF7FEFF 		bl	addFile
 967              	.LVL56:
 127:Core/Src/main.c ****   addFile(&fm, "fart3.wav");
 968              		.loc 1 127 3 view .LVU270
 969 0054 2D49     		ldr	r1, .L60+12
 970 0056 2046     		mov	r0, r4
 971 0058 FFF7FEFF 		bl	addFile
 972              	.LVL57:
 128:Core/Src/main.c ****   addFile(&fm, "fart4.wav");
 973              		.loc 1 128 3 view .LVU271
 974 005c 2C49     		ldr	r1, .L60+16
 975 005e 2046     		mov	r0, r4
 976 0060 FFF7FEFF 		bl	addFile
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 46


 977              	.LVL58:
 129:Core/Src/main.c ****   addFile(&fm, "fart5.wav");
 978              		.loc 1 129 3 view .LVU272
 979 0064 2B49     		ldr	r1, .L60+20
 980 0066 2046     		mov	r0, r4
 981 0068 FFF7FEFF 		bl	addFile
 982              	.LVL59:
 130:Core/Src/main.c ****   addFile(&fm, "fart6.wav");
 983              		.loc 1 130 3 view .LVU273
 984 006c 2A49     		ldr	r1, .L60+24
 985 006e 2046     		mov	r0, r4
 986 0070 FFF7FEFF 		bl	addFile
 987              	.LVL60:
 131:Core/Src/main.c ****   addFile(&fm, "fart7.wav");
 988              		.loc 1 131 3 view .LVU274
 989 0074 2949     		ldr	r1, .L60+28
 990 0076 2046     		mov	r0, r4
 991 0078 FFF7FEFF 		bl	addFile
 992              	.LVL61:
 132:Core/Src/main.c ****   addFile(&fm, "fart8.wav");
 993              		.loc 1 132 3 view .LVU275
 994 007c 2849     		ldr	r1, .L60+32
 995 007e 2046     		mov	r0, r4
 996 0080 FFF7FEFF 		bl	addFile
 997              	.LVL62:
 133:Core/Src/main.c ****   addFile(&fm, "fart9.wav");
 998              		.loc 1 133 3 view .LVU276
 999 0084 2749     		ldr	r1, .L60+36
 1000 0086 2046     		mov	r0, r4
 1001 0088 FFF7FEFF 		bl	addFile
 1002              	.LVL63:
 134:Core/Src/main.c ****   addFile(&fm, "fart10.wav");
 1003              		.loc 1 134 3 view .LVU277
 1004 008c 2649     		ldr	r1, .L60+40
 1005 008e 2046     		mov	r0, r4
 1006 0090 FFF7FEFF 		bl	addFile
 1007              	.LVL64:
 135:Core/Src/main.c ****   addFile(&fm, "fart11.wav");
 1008              		.loc 1 135 3 view .LVU278
 1009 0094 2549     		ldr	r1, .L60+44
 1010 0096 2046     		mov	r0, r4
 1011 0098 FFF7FEFF 		bl	addFile
 1012              	.LVL65:
 136:Core/Src/main.c ****   addFile(&fm, "fart12.wav");
 1013              		.loc 1 136 3 view .LVU279
 1014 009c 2449     		ldr	r1, .L60+48
 1015 009e 2046     		mov	r0, r4
 1016 00a0 FFF7FEFF 		bl	addFile
 1017              	.LVL66:
 137:Core/Src/main.c **** 
 1018              		.loc 1 137 3 view .LVU280
 1019 00a4 2349     		ldr	r1, .L60+52
 1020 00a6 2046     		mov	r0, r4
 1021 00a8 FFF7FEFF 		bl	addFile
 1022              	.LVL67:
 1023 00ac 25E0     		b	.L58
 1024              	.LVL68:
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 47


 1025              	.L57:
 1026              	.LBB12:
 1027              	.LBB13:
 152:Core/Src/main.c ****     }
 1028              		.loc 1 152 9 view .LVU281
 152:Core/Src/main.c ****     }
 1029              		.loc 1 152 24 is_stmt 0 view .LVU282
 1030 00ae 03EB8301 		add	r1, r3, r3, lsl #2
 1031 00b2 144A     		ldr	r2, .L60+4
 1032 00b4 02EB8102 		add	r2, r2, r1, lsl #2
 152:Core/Src/main.c ****     }
 1033              		.loc 1 152 22 view .LVU283
 1034 00b8 32A9     		add	r1, sp, #200
 1035 00ba 01EB8301 		add	r1, r1, r3, lsl #2
 1036 00be 41F8C82C 		str	r2, [r1, #-200]
 151:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 1037              		.loc 1 151 40 is_stmt 1 discriminator 3 view .LVU284
 1038 00c2 0133     		adds	r3, r3, #1
 1039              	.LVL69:
 1040              	.L56:
 151:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 1041              		.loc 1 151 23 discriminator 1 view .LVU285
 151:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 1042              		.loc 1 151 27 is_stmt 0 discriminator 1 view .LVU286
 1043 00c4 0F4A     		ldr	r2, .L60+4
 1044 00c6 D2F8E823 		ldr	r2, [r2, #1000]
 151:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 1045              		.loc 1 151 23 discriminator 1 view .LVU287
 1046 00ca 9A42     		cmp	r2, r3
 1047 00cc EFDC     		bgt	.L57
 1048              	.LBE13:
 154:Core/Src/main.c ****     displayStrings(&hi2c1, filenames, fm.num_files, fm.cursor_index);
 1049              		.loc 1 154 5 is_stmt 1 view .LVU288
 154:Core/Src/main.c ****     displayStrings(&hi2c1, filenames, fm.num_files, fm.cursor_index);
 1050              		.loc 1 154 40 is_stmt 0 view .LVU289
 1051 00ce 0D4B     		ldr	r3, .L60+4
 1052              	.LVL70:
 154:Core/Src/main.c ****     displayStrings(&hi2c1, filenames, fm.num_files, fm.cursor_index);
 1053              		.loc 1 154 40 view .LVU290
 1054 00d0 D3F8F013 		ldr	r1, [r3, #1008]
 154:Core/Src/main.c ****     displayStrings(&hi2c1, filenames, fm.num_files, fm.cursor_index);
 1055              		.loc 1 154 11 view .LVU291
 1056 00d4 01EB8101 		add	r1, r1, r1, lsl #2
 1057 00d8 03EB8104 		add	r4, r3, r1, lsl #2
 1058              	.LVL71:
 155:Core/Src/main.c ****     renderSelectedFile(&hi2c1, currentFileName);
 1059              		.loc 1 155 5 is_stmt 1 view .LVU292
 1060 00dc 084D     		ldr	r5, .L60
 1061 00de 93F8EC33 		ldrb	r3, [r3, #1004]	@ zero_extendqisi2
 1062 00e2 D2B2     		uxtb	r2, r2
 1063 00e4 6946     		mov	r1, sp
 1064 00e6 2846     		mov	r0, r5
 1065 00e8 FFF7FEFF 		bl	displayStrings
 1066              	.LVL72:
 156:Core/Src/main.c ****     // Update display
 1067              		.loc 1 156 5 view .LVU293
 1068 00ec 2146     		mov	r1, r4
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 48


 1069 00ee 2846     		mov	r0, r5
 1070 00f0 FFF7FEFF 		bl	renderSelectedFile
 1071              	.LVL73:
 158:Core/Src/main.c ****     /* USER CODE END WHILE */
 1072              		.loc 1 158 5 view .LVU294
 1073 00f4 2846     		mov	r0, r5
 1074 00f6 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1075              	.LVL74:
 1076              	.LBE12:
 147:Core/Src/main.c ****   { 
 1077              		.loc 1 147 9 view .LVU295
 1078              	.L58:
 147:Core/Src/main.c ****   { 
 1079              		.loc 1 147 3 view .LVU296
 1080              	.LBB15:
 150:Core/Src/main.c ****     for (int i = 0; i < fm.num_files; i++) {
 1081              		.loc 1 150 5 view .LVU297
 151:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 1082              		.loc 1 151 5 view .LVU298
 1083              	.LBB14:
 151:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 1084              		.loc 1 151 10 view .LVU299
 151:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 1085              		.loc 1 151 14 is_stmt 0 view .LVU300
 1086 00fa 0023     		movs	r3, #0
 151:Core/Src/main.c ****         filenames[i] = fm.files[i].filename; // Extracting filenames from File structures
 1087              		.loc 1 151 5 view .LVU301
 1088 00fc E2E7     		b	.L56
 1089              	.L61:
 1090 00fe 00BF     		.align	2
 1091              	.L60:
 1092 0100 00000000 		.word	hi2c1
 1093 0104 00000000 		.word	fm
 1094 0108 00000000 		.word	.LC0
 1095 010c 0C000000 		.word	.LC1
 1096 0110 18000000 		.word	.LC2
 1097 0114 24000000 		.word	.LC3
 1098 0118 30000000 		.word	.LC4
 1099 011c 3C000000 		.word	.LC5
 1100 0120 48000000 		.word	.LC6
 1101 0124 54000000 		.word	.LC7
 1102 0128 60000000 		.word	.LC8
 1103 012c 6C000000 		.word	.LC9
 1104 0130 78000000 		.word	.LC10
 1105 0134 84000000 		.word	.LC11
 1106              	.LBE14:
 1107              	.LBE15:
 1108              		.cfi_endproc
 1109              	.LFE137:
 1111              		.global	debounce
 1112              		.section	.bss.debounce,"aw",%nobits
 1115              	debounce:
 1116 0000 00       		.space	1
 1117              		.global	switch_push_button
 1118              		.section	.bss.switch_push_button,"aw",%nobits
 1121              	switch_push_button:
 1122 0000 00       		.space	1
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 49


 1123              		.global	rotary_enc_count
 1124              		.section	.bss.rotary_enc_count,"aw",%nobits
 1125              		.align	2
 1128              	rotary_enc_count:
 1129 0000 00000000 		.space	4
 1130              		.global	fm
 1131              		.section	.bss.fm,"aw",%nobits
 1132              		.align	2
 1135              	fm:
 1136 0000 00000000 		.space	1012
 1136      00000000 
 1136      00000000 
 1136      00000000 
 1136      00000000 
 1137              		.global	huart2
 1138              		.section	.bss.huart2,"aw",%nobits
 1139              		.align	2
 1142              	huart2:
 1143 0000 00000000 		.space	72
 1143      00000000 
 1143      00000000 
 1143      00000000 
 1143      00000000 
 1144              		.global	htim5
 1145              		.section	.bss.htim5,"aw",%nobits
 1146              		.align	2
 1149              	htim5:
 1150 0000 00000000 		.space	72
 1150      00000000 
 1150      00000000 
 1150      00000000 
 1150      00000000 
 1151              		.global	hi2c1
 1152              		.section	.bss.hi2c1,"aw",%nobits
 1153              		.align	2
 1156              	hi2c1:
 1157 0000 00000000 		.space	84
 1157      00000000 
 1157      00000000 
 1157      00000000 
 1157      00000000 
 1158              		.text
 1159              	.Letext0:
 1160              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1161              		.file 4 "C:/Users/jonas/AppData/Roaming/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-de
 1162              		.file 5 "C:/Users/jonas/AppData/Roaming/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-de
 1163              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1164              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1165              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1166              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1167              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1168              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1169              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1170              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1171              		.file 14 "Core/Inc/ssd1306.h"
 1172              		.file 15 "Core/Inc/filemanager.h"
 1173              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 50


 1174              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1175              		.file 18 "Core/Inc/display.h"
 1176              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1177              		.file 20 "<built-in>"
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:224    .text.MX_GPIO_Init:000000f0 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:231    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:237    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:346    .text.HAL_GPIO_EXTI_Callback:00000078 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1115   .bss.debounce:00000000 debounce
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1149   .bss.htim5:00000000 htim5
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1128   .bss.rotary_enc_count:00000000 rotary_enc_count
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1135   .bss.fm:00000000 fm
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:355    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:361    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:400    .text.HAL_TIM_PeriodElapsedCallback:00000018 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:406    .text.Error_Handler:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:412    .text.Error_Handler:00000000 Error_Handler
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:444    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:449    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:503    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1142   .bss.huart2:00000000 huart2
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:509    .text.MX_I2C1_Init:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:514    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:571    .text.MX_I2C1_Init:0000002c $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1156   .bss.hi2c1:00000000 hi2c1
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:578    .text.MX_TIM5_Init:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:583    .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:694    .text.MX_TIM5_Init:00000070 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:700    .text.SystemClock_Config:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:706    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:851    .text.SystemClock_Config:0000009c $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:857    .rodata.main.str1.4:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:894    .text.main:00000000 $t
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:900    .text.main:00000000 main
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1092   .text.main:00000100 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1116   .bss.debounce:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1121   .bss.switch_push_button:00000000 switch_push_button
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1122   .bss.switch_push_button:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1125   .bss.rotary_enc_count:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1132   .bss.fm:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1139   .bss.huart2:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1146   .bss.htim5:00000000 $d
C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s:1153   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Start_IT
HAL_GPIO_ReadPin
cursorDown
cursorUp
selectFile
HAL_TIM_Base_Stop_IT
HAL_UART_Init
HAL_I2C_Init
ARM GAS  C:\Users\jonas\AppData\Local\Temp\ccl0eUxy.s 			page 52


HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OnePulse_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ssd1306_Init
HAL_Delay
ssd1306_Fill
ssd1306_UpdateScreen
initializeFileManager
addFile
displayStrings
renderSelectedFile
